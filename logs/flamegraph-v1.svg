<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="49789"><g><title>libonnxruntime.1.15.1.dylib`.LComputeBlockBy4Loop22 (2,253 samples, 4.53%)</title><rect x="0.0000%" y="565" width="4.5251%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2253"/><text x="0.2500%" y="575.50">libon..</text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeBlockBy4Loop297 (21 samples, 0.04%)</title><rect x="4.5251%" y="565" width="0.0422%" height="15" fill="rgb(217,0,24)" fg:x="2253" fg:w="21"/><text x="4.7751%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeBlockBy4Loop508 (57 samples, 0.11%)</title><rect x="4.5673%" y="565" width="0.1145%" height="15" fill="rgb(221,193,54)" fg:x="2274" fg:w="57"/><text x="4.8173%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeBlockBy4Loop882 (13 samples, 0.03%)</title><rect x="4.6838%" y="565" width="0.0261%" height="15" fill="rgb(248,212,6)" fg:x="2332" fg:w="13"/><text x="4.9338%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LExitKernel (137 samples, 0.28%)</title><rect x="4.7099%" y="565" width="0.2752%" height="15" fill="rgb(208,68,35)" fg:x="2345" fg:w="137"/><text x="4.9599%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LOutputBlock22 (1,327 samples, 2.67%)</title><rect x="4.9850%" y="565" width="2.6652%" height="15" fill="rgb(232,128,0)" fg:x="2482" fg:w="1327"/><text x="5.2350%" y="575.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`.LOutputBlock508 (70 samples, 0.14%)</title><rect x="7.6543%" y="565" width="0.1406%" height="15" fill="rgb(207,160,47)" fg:x="3811" fg:w="70"/><text x="7.9043%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LOutputBlock882 (5 samples, 0.01%)</title><rect x="7.7949%" y="565" width="0.0100%" height="15" fill="rgb(228,23,34)" fg:x="3881" fg:w="5"/><text x="8.0449%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LOutputMasked1xNBlock4 (10 samples, 0.02%)</title><rect x="7.8049%" y="565" width="0.0201%" height="15" fill="rgb(218,30,26)" fg:x="3886" fg:w="10"/><text x="8.0549%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LProcessNextColumnLoop2xN4 (112 samples, 0.22%)</title><rect x="7.8331%" y="565" width="0.2249%" height="15" fill="rgb(220,122,19)" fg:x="3900" fg:w="112"/><text x="8.0831%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LStore2xNBlock4 (442 samples, 0.89%)</title><rect x="8.0640%" y="565" width="0.8877%" height="15" fill="rgb(250,228,42)" fg:x="4015" fg:w="442"/><text x="8.3140%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LStore2xNBlock494 (15 samples, 0.03%)</title><rect x="8.9518%" y="565" width="0.0301%" height="15" fill="rgb(240,193,28)" fg:x="4457" fg:w="15"/><text x="9.2018%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LStore2xNBlock870 (7 samples, 0.01%)</title><rect x="8.9819%" y="565" width="0.0141%" height="15" fill="rgb(216,20,37)" fg:x="4472" fg:w="7"/><text x="9.2319%" y="575.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LStoreMasked1xNBlock4 (6 samples, 0.01%)</title><rect x="8.9960%" y="565" width="0.0121%" height="15" fill="rgb(206,188,39)" fg:x="4479" fg:w="6"/><text x="9.2460%" y="575.50"></text></g><g><title>libc++abi.dylib`operator delete(void*) (5 samples, 0.01%)</title><rect x="9.0241%" y="501" width="0.0100%" height="15" fill="rgb(217,207,13)" fg:x="4493" fg:w="5"/><text x="9.2741%" y="511.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::RunQueue&lt;std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::Tag, 1024u&gt;::PopFront (776 samples, 1.56%)</title><rect x="9.0341%" y="501" width="1.5586%" height="15" fill="rgb(231,73,38)" fg:x="4498" fg:w="776"/><text x="9.2841%" y="511.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::RunQueue&lt;std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::Tag, 1024u&gt;::PopFront (4,082 samples, 8.20%)</title><rect x="23.1638%" y="485" width="8.1986%" height="15" fill="rgb(225,20,46)" fg:x="11533" fg:w="4082"/><text x="23.4138%" y="495.50">libonnxrunt..</text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="31.3844%" y="469" width="0.0141%" height="15" fill="rgb(210,31,41)" fg:x="15626" fg:w="7"/><text x="31.6344%" y="479.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::UpdatePreferredWorker(absl::lts_20220623::InlinedVector&lt;int, 11ul, std::__1::allocator (10 samples, 0.02%)</title><rect x="31.3985%" y="469" width="0.0201%" height="15" fill="rgb(221,200,47)" fg:x="15633" fg:w="10"/><text x="31.6485%" y="479.50"></text></g><g><title>libc+ (5 samples, 0.01%)</title><rect x="31.6435%" y="437" width="0.0100%" height="15" fill="rgb(226,26,5)" fg:x="15755" fg:w="5"/><text x="31.8935%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.01%)</title><rect x="31.7500%" y="389" width="0.0100%" height="15" fill="rgb(249,33,26)" fg:x="15808" fg:w="5"/><text x="32.0000%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.05%)</title><rect x="31.7661%" y="373" width="0.0462%" height="15" fill="rgb(235,183,28)" fg:x="15816" fg:w="23"/><text x="32.0161%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.04%)</title><rect x="31.7741%" y="357" width="0.0382%" height="15" fill="rgb(221,5,38)" fg:x="15820" fg:w="19"/><text x="32.0241%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.06%)</title><rect x="31.7600%" y="389" width="0.0603%" height="15" fill="rgb(247,18,42)" fg:x="15813" fg:w="30"/><text x="32.0100%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (5 samples, 0.01%)</title><rect x="31.8203%" y="389" width="0.0100%" height="15" fill="rgb(241,131,45)" fg:x="15843" fg:w="5"/><text x="32.0703%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.09%)</title><rect x="31.7480%" y="405" width="0.0864%" height="15" fill="rgb(249,31,29)" fg:x="15807" fg:w="43"/><text x="31.9980%" y="415.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (44 samples, 0.09%)</title><rect x="31.7480%" y="421" width="0.0884%" height="15" fill="rgb(225,111,53)" fg:x="15807" fg:w="44"/><text x="31.9980%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void (9 samples, 0.02%)</title><rect x="31.8363%" y="421" width="0.0181%" height="15" fill="rgb(238,160,17)" fg:x="15851" fg:w="9"/><text x="32.0863%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LProcessNextColumnLoop2xN4 (9 samples, 0.02%)</title><rect x="31.9006%" y="373" width="0.0181%" height="15" fill="rgb(214,148,48)" fg:x="15883" fg:w="9"/><text x="32.1506%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (29 samples, 0.06%)</title><rect x="31.9207%" y="373" width="0.0582%" height="15" fill="rgb(232,36,49)" fg:x="15893" fg:w="29"/><text x="32.1707%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (153 samples, 0.31%)</title><rect x="31.8544%" y="421" width="0.3073%" height="15" fill="rgb(209,103,24)" fg:x="15860" fg:w="153"/><text x="32.1044%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (153 samples, 0.31%)</title><rect x="31.8544%" y="405" width="0.3073%" height="15" fill="rgb(229,88,8)" fg:x="15860" fg:w="153"/><text x="32.1044%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (147 samples, 0.30%)</title><rect x="31.8665%" y="389" width="0.2952%" height="15" fill="rgb(213,181,19)" fg:x="15866" fg:w="147"/><text x="32.1165%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmPackedOperation(CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, void const*, unsigned long, float, float*, unsigned long) (91 samples, 0.18%)</title><rect x="31.9790%" y="373" width="0.1828%" height="15" fill="rgb(254,191,54)" fg:x="15922" fg:w="91"/><text x="32.2290%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.04%)</title><rect x="32.1979%" y="405" width="0.0382%" height="15" fill="rgb(241,83,37)" fg:x="16031" fg:w="19"/><text x="32.4479%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.03%)</title><rect x="32.2019%" y="389" width="0.0341%" height="15" fill="rgb(233,36,39)" fg:x="16033" fg:w="17"/><text x="32.4519%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.06%)</title><rect x="32.1738%" y="421" width="0.0643%" height="15" fill="rgb(226,3,54)" fg:x="16019" fg:w="32"/><text x="32.4238%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="32.2380%" y="421" width="0.0362%" height="15" fill="rgb(245,192,40)" fg:x="16051" fg:w="18"/><text x="32.4880%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="32.2742%" y="421" width="0.0121%" height="15" fill="rgb(238,167,29)" fg:x="16069" fg:w="6"/><text x="32.5242%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (320 samples, 0.64%)</title><rect x="31.6616%" y="437" width="0.6427%" height="15" fill="rgb(232,182,51)" fg:x="15764" fg:w="320"/><text x="31.9116%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.02%)</title><rect x="32.2862%" y="421" width="0.0181%" height="15" fill="rgb(231,60,39)" fg:x="16075" fg:w="9"/><text x="32.5362%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::DegreeOfParallelism (5 samples, 0.01%)</title><rect x="32.3124%" y="437" width="0.0100%" height="15" fill="rgb(208,69,12)" fg:x="16088" fg:w="5"/><text x="32.5624%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.03%)</title><rect x="32.3284%" y="437" width="0.0321%" height="15" fill="rgb(235,93,37)" fg:x="16096" fg:w="16"/><text x="32.5784%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (13 samples, 0.03%)</title><rect x="32.3706%" y="437" width="0.0261%" height="15" fill="rgb(213,116,39)" fg:x="16117" fg:w="13"/><text x="32.6206%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda&apos;(long, long)::operator() (638 samples, 1.28%)</title><rect x="31.5110%" y="453" width="1.2814%" height="15" fill="rgb(222,207,29)" fg:x="15689" fg:w="638"/><text x="31.7610%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (197 samples, 0.40%)</title><rect x="32.3967%" y="437" width="0.3957%" height="15" fill="rgb(206,96,30)" fg:x="16130" fg:w="197"/><text x="32.6467%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy1 (6 samples, 0.01%)</title><rect x="32.8165%" y="437" width="0.0121%" height="15" fill="rgb(218,138,4)" fg:x="16339" fg:w="6"/><text x="33.0665%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy32 (8 samples, 0.02%)</title><rect x="32.8285%" y="437" width="0.0161%" height="15" fill="rgb(250,191,14)" fg:x="16345" fg:w="8"/><text x="33.0785%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy8 (11 samples, 0.02%)</title><rect x="32.8446%" y="437" width="0.0221%" height="15" fill="rgb(239,60,40)" fg:x="16353" fg:w="11"/><text x="33.0946%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy1 (6 samples, 0.01%)</title><rect x="32.8707%" y="437" width="0.0121%" height="15" fill="rgb(206,27,48)" fg:x="16366" fg:w="6"/><text x="33.1207%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy8 (5 samples, 0.01%)</title><rect x="32.8868%" y="437" width="0.0100%" height="15" fill="rgb(225,35,8)" fg:x="16374" fg:w="5"/><text x="33.1368%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountLessThan8 (11 samples, 0.02%)</title><rect x="32.8968%" y="437" width="0.0221%" height="15" fill="rgb(250,213,24)" fg:x="16379" fg:w="11"/><text x="33.1468%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmaxThreaded(void*, long) (404 samples, 0.81%)</title><rect x="32.9249%" y="437" width="0.8114%" height="15" fill="rgb(247,123,22)" fg:x="16393" fg:w="404"/><text x="33.1749%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSumExpF32Kernel (383 samples, 0.77%)</title><rect x="32.9671%" y="421" width="0.7692%" height="15" fill="rgb(231,138,38)" fg:x="16414" fg:w="383"/><text x="33.2171%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasReduceMaximumF32KernelAvx (5 samples, 0.01%)</title><rect x="33.7464%" y="437" width="0.0100%" height="15" fill="rgb(231,145,46)" fg:x="16802" fg:w="5"/><text x="33.9964%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LProcessNextColumnLoop2xN4 (11 samples, 0.02%)</title><rect x="33.7846%" y="405" width="0.0221%" height="15" fill="rgb(251,118,11)" fg:x="16821" fg:w="11"/><text x="34.0346%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (18 samples, 0.04%)</title><rect x="33.8067%" y="405" width="0.0362%" height="15" fill="rgb(217,147,25)" fg:x="16832" fg:w="18"/><text x="34.0567%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (134 samples, 0.27%)</title><rect x="33.7645%" y="437" width="0.2691%" height="15" fill="rgb(247,81,37)" fg:x="16811" fg:w="134"/><text x="34.0145%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (130 samples, 0.26%)</title><rect x="33.7725%" y="421" width="0.2611%" height="15" fill="rgb(209,12,38)" fg:x="16815" fg:w="130"/><text x="34.0225%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmPackedOperation(CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, void const*, unsigned long, float, float*, unsigned long) (95 samples, 0.19%)</title><rect x="33.8428%" y="405" width="0.1908%" height="15" fill="rgb(227,1,9)" fg:x="16850" fg:w="95"/><text x="34.0928%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long), std::__1::allocator&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&gt;, void (long)&gt;::operator() (1,474 samples, 2.96%)</title><rect x="34.0336%" y="437" width="2.9605%" height="15" fill="rgb(248,47,43)" fg:x="16945" fg:w="1474"/><text x="34.2836%" y="447.50">lib..</text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeTanh(float const*, float*, unsigned long) (5 samples, 0.01%)</title><rect x="38.8178%" y="421" width="0.0100%" height="15" fill="rgb(221,10,30)" fg:x="19327" fg:w="5"/><text x="39.0678%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2&gt;, void (long, long)&gt;::operator() (4,656 samples, 9.35%)</title><rect x="32.7984%" y="453" width="9.3515%" height="15" fill="rgb(210,229,1)" fg:x="16330" fg:w="4656"/><text x="33.0484%" y="463.50">libonnxruntim..</text></g><g><title>libonnxruntime.1.15.1.dylib`void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda0&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&amp;, long&gt; (2,567 samples, 5.16%)</title><rect x="36.9941%" y="437" width="5.1558%" height="15" fill="rgb(222,148,37)" fg:x="18419" fg:w="2567"/><text x="37.2441%" y="447.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTanhKernel (1,654 samples, 3.32%)</title><rect x="38.8279%" y="421" width="3.3220%" height="15" fill="rgb(234,67,33)" fg:x="19332" fg:w="1654"/><text x="39.0779%" y="431.50">lib..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="42.2061%" y="405" width="0.0161%" height="15" fill="rgb(247,98,35)" fg:x="21014" fg:w="8"/><text x="42.4561%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="42.2081%" y="389" width="0.0141%" height="15" fill="rgb(247,138,52)" fg:x="21015" fg:w="7"/><text x="42.4581%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="42.2081%" y="373" width="0.0141%" height="15" fill="rgb(213,79,30)" fg:x="21015" fg:w="7"/><text x="42.4581%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="42.2081%" y="357" width="0.0141%" height="15" fill="rgb(246,177,23)" fg:x="21015" fg:w="7"/><text x="42.4581%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="42.2121%" y="341" width="0.0100%" height="15" fill="rgb(230,62,27)" fg:x="21017" fg:w="5"/><text x="42.4621%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (5 samples, 0.01%)</title><rect x="42.2382%" y="357" width="0.0100%" height="15" fill="rgb(216,154,8)" fg:x="21030" fg:w="5"/><text x="42.4882%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmTransposePackB(float*, float const*, unsigned long, unsigned long, unsigned long) (40 samples, 0.08%)</title><rect x="42.2744%" y="341" width="0.0803%" height="15" fill="rgb(244,35,45)" fg:x="21048" fg:w="40"/><text x="42.5244%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (128 samples, 0.26%)</title><rect x="42.2222%" y="405" width="0.2571%" height="15" fill="rgb(251,115,12)" fg:x="21022" fg:w="128"/><text x="42.4722%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (128 samples, 0.26%)</title><rect x="42.2222%" y="389" width="0.2571%" height="15" fill="rgb(240,54,50)" fg:x="21022" fg:w="128"/><text x="42.4722%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (127 samples, 0.26%)</title><rect x="42.2242%" y="373" width="0.2551%" height="15" fill="rgb(233,84,52)" fg:x="21023" fg:w="127"/><text x="42.4742%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmOperation(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, float const*, unsigned long, float, float*, unsigned long) (115 samples, 0.23%)</title><rect x="42.2483%" y="357" width="0.2310%" height="15" fill="rgb(207,117,47)" fg:x="21035" fg:w="115"/><text x="42.4983%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmTransposePackB16x4Avx (62 samples, 0.12%)</title><rect x="42.3547%" y="341" width="0.1245%" height="15" fill="rgb(249,43,39)" fg:x="21088" fg:w="62"/><text x="42.6047%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="42.4873%" y="405" width="0.0100%" height="15" fill="rgb(209,38,44)" fg:x="21154" fg:w="5"/><text x="42.7373%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (157 samples, 0.32%)</title><rect x="42.1941%" y="421" width="0.3153%" height="15" fill="rgb(236,212,23)" fg:x="21008" fg:w="157"/><text x="42.4441%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (167 samples, 0.34%)</title><rect x="42.1820%" y="437" width="0.3354%" height="15" fill="rgb(242,79,21)" fg:x="21002" fg:w="167"/><text x="42.4320%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeAttentionProbs&lt;float&gt;(float*, float const*, float const*, int const*, gsl::span&lt;long long const, 18446744073709551615ul&gt;, float*, bool, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*, float const*) const::&apos;lambda0&apos;(long, long)::operator() (223 samples, 0.45%)</title><rect x="42.1639%" y="453" width="0.4479%" height="15" fill="rgb(211,96,35)" fg:x="20993" fg:w="223"/><text x="42.4139%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (47 samples, 0.09%)</title><rect x="42.5174%" y="437" width="0.0944%" height="15" fill="rgb(253,215,40)" fg:x="21169" fg:w="47"/><text x="42.7674%" y="447.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (12 samples, 0.02%)</title><rect x="42.6600%" y="405" width="0.0241%" height="15" fill="rgb(211,81,21)" fg:x="21240" fg:w="12"/><text x="42.9100%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.02%)</title><rect x="42.6620%" y="389" width="0.0221%" height="15" fill="rgb(208,190,38)" fg:x="21241" fg:w="11"/><text x="42.9120%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.02%)</title><rect x="42.6640%" y="373" width="0.0201%" height="15" fill="rgb(235,213,38)" fg:x="21242" fg:w="10"/><text x="42.9140%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="42.6640%" y="357" width="0.0201%" height="15" fill="rgb(237,122,38)" fg:x="21242" fg:w="10"/><text x="42.9140%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="42.6640%" y="341" width="0.0201%" height="15" fill="rgb(244,218,35)" fg:x="21242" fg:w="10"/><text x="42.9140%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (77 samples, 0.15%)</title><rect x="42.6861%" y="405" width="0.1547%" height="15" fill="rgb(240,68,47)" fg:x="21253" fg:w="77"/><text x="42.9361%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (77 samples, 0.15%)</title><rect x="42.6861%" y="389" width="0.1547%" height="15" fill="rgb(210,16,53)" fg:x="21253" fg:w="77"/><text x="42.9361%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (74 samples, 0.15%)</title><rect x="42.6922%" y="373" width="0.1486%" height="15" fill="rgb(235,124,12)" fg:x="21256" fg:w="74"/><text x="42.9422%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmOperation(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, float const*, unsigned long, float, float*, unsigned long) (61 samples, 0.12%)</title><rect x="42.7183%" y="357" width="0.1225%" height="15" fill="rgb(224,169,11)" fg:x="21269" fg:w="61"/><text x="42.9683%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmCopyPackB(float*, float const*, unsigned long, unsigned long, unsigned long) (51 samples, 0.10%)</title><rect x="42.7384%" y="341" width="0.1024%" height="15" fill="rgb(250,166,2)" fg:x="21279" fg:w="51"/><text x="42.9884%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="42.8428%" y="405" width="0.0121%" height="15" fill="rgb(242,216,29)" fg:x="21331" fg:w="6"/><text x="43.0928%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (108 samples, 0.22%)</title><rect x="42.6460%" y="421" width="0.2169%" height="15" fill="rgb(230,116,27)" fg:x="21233" fg:w="108"/><text x="42.8960%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::MatMul&lt;float&gt; (113 samples, 0.23%)</title><rect x="42.6440%" y="437" width="0.2270%" height="15" fill="rgb(228,99,48)" fg:x="21232" fg:w="113"/><text x="42.8940%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeVxAttentionScore&lt;float&gt;(float*, float*, float const*, float const*, int, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*) const::&apos;lambda&apos;(long, long)::operator() (172 samples, 0.35%)</title><rect x="42.6118%" y="453" width="0.3455%" height="15" fill="rgb(253,11,6)" fg:x="21216" fg:w="172"/><text x="42.8618%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (41 samples, 0.08%)</title><rect x="42.8749%" y="437" width="0.0823%" height="15" fill="rgb(247,143,39)" fg:x="21347" fg:w="41"/><text x="43.1249%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (5,767 samples, 11.58%)</title><rect x="31.4186%" y="469" width="11.5829%" height="15" fill="rgb(236,97,10)" fg:x="15643" fg:w="5767"/><text x="31.6686%" y="479.50">libonnxruntime.1...</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (19 samples, 0.04%)</title><rect x="42.9633%" y="453" width="0.0382%" height="15" fill="rgb(233,208,19)" fg:x="21391" fg:w="19"/><text x="43.2133%" y="463.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::ScheduleOnPreferredWorkers(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, absl::lts_20220623::InlinedVector&lt;int, 11ul, std::__1::allocator&lt;int&gt; &gt;&amp;, unsigned int, unsigned int, std::__1::function&lt;void (unsigned int)&gt;)::&apos;lambda&apos;(), std::__1::allocator&lt;onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::ScheduleOnPreferredWorkers(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, absl::lts_20220623::InlinedVector&lt;int, 11ul, std::__1::allocator&lt;int&gt; &gt;&amp;, unsigned int, unsigned int, std::__1::function&lt;void (unsigned int)&gt;)::&apos;lambda&apos;()&gt;, void ()&gt;::operator() (5,791 samples, 11.63%)</title><rect x="31.3744%" y="485" width="11.6311%" height="15" fill="rgb(216,164,2)" fg:x="15621" fg:w="5791"/><text x="31.6244%" y="495.50">libonnxruntime.1...</text></g><g><title>libsystem_kernel.dylib`__ulock_wake (14 samples, 0.03%)</title><rect x="43.0055%" y="485" width="0.0281%" height="15" fill="rgb(220,129,5)" fg:x="21412" fg:w="14"/><text x="43.2555%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.04%)</title><rect x="43.0336%" y="485" width="0.0422%" height="15" fill="rgb(242,17,10)" fg:x="21426" fg:w="21"/><text x="43.2836%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.02%)</title><rect x="43.0597%" y="469" width="0.0161%" height="15" fill="rgb(242,107,0)" fg:x="21439" fg:w="8"/><text x="43.3097%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.02%)</title><rect x="43.0597%" y="453" width="0.0161%" height="15" fill="rgb(251,28,31)" fg:x="21439" fg:w="8"/><text x="43.3097%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.01%)</title><rect x="43.1039%" y="469" width="0.0100%" height="15" fill="rgb(233,223,10)" fg:x="21461" fg:w="5"/><text x="43.3539%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="43.1360%" y="453" width="0.0121%" height="15" fill="rgb(215,21,27)" fg:x="21477" fg:w="6"/><text x="43.3860%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.08%)</title><rect x="43.0758%" y="485" width="0.0763%" height="15" fill="rgb(232,23,21)" fg:x="21447" fg:w="38"/><text x="43.3258%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.04%)</title><rect x="43.1159%" y="469" width="0.0362%" height="15" fill="rgb(244,5,23)" fg:x="21467" fg:w="18"/><text x="43.3659%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="43.1521%" y="485" width="0.0141%" height="15" fill="rgb(226,81,46)" fg:x="21485" fg:w="7"/><text x="43.4021%" y="495.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::WorkerLoop (16,218 samples, 32.57%)</title><rect x="10.5947%" y="501" width="32.5735%" height="15" fill="rgb(247,70,30)" fg:x="5275" fg:w="16218"/><text x="10.8447%" y="511.50">libonnxruntime.1.15.1.dylib`onnxruntime::concurrency:..</text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="43.1782%" y="501" width="0.0241%" height="15" fill="rgb(212,68,19)" fg:x="21498" fg:w="12"/><text x="43.4282%" y="511.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::(anonymous namespace)::PosixThread::ThreadMain (17,019 samples, 34.18%)</title><rect x="9.0221%" y="533" width="34.1822%" height="15" fill="rgb(240,187,13)" fg:x="4492" fg:w="17019"/><text x="9.2721%" y="543.50">libonnxruntime.1.15.1.dylib`onnxruntime::(anonymous nam..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::WorkerLoop (17,019 samples, 34.18%)</title><rect x="9.0221%" y="517" width="34.1822%" height="15" fill="rgb(223,113,26)" fg:x="4492" fg:w="17019"/><text x="9.2721%" y="527.50">libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::T..</text></g><g><title>libsystem_kernel.dylib`swtch_pri (1,607 samples, 3.23%)</title><rect x="43.2445%" y="453" width="3.2276%" height="15" fill="rgb(206,192,2)" fg:x="21531" fg:w="1607"/><text x="43.4945%" y="463.50">lib..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (43 samples, 0.09%)</title><rect x="46.4942%" y="421" width="0.0864%" height="15" fill="rgb(241,108,4)" fg:x="23149" fg:w="43"/><text x="46.7442%" y="431.50"></text></g><g><title>main`&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (46 samples, 0.09%)</title><rect x="46.4922%" y="437" width="0.0924%" height="15" fill="rgb(247,173,49)" fg:x="23148" fg:w="46"/><text x="46.7422%" y="447.50"></text></g><g><title>main`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="46.6007%" y="421" width="0.0100%" height="15" fill="rgb(224,114,35)" fg:x="23202" fg:w="5"/><text x="46.8507%" y="431.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="46.6007%" y="405" width="0.0100%" height="15" fill="rgb(245,159,27)" fg:x="23202" fg:w="5"/><text x="46.8507%" y="415.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::pad (5 samples, 0.01%)</title><rect x="46.6007%" y="389" width="0.0100%" height="15" fill="rgb(245,172,44)" fg:x="23202" fg:w="5"/><text x="46.8507%" y="399.50"></text></g><g><title>main`rayon_core::join::join_context::_{{closure}} (11 samples, 0.02%)</title><rect x="46.5926%" y="437" width="0.0221%" height="15" fill="rgb(236,23,11)" fg:x="23198" fg:w="11"/><text x="46.8426%" y="447.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="46.6710%" y="325" width="0.0181%" height="15" fill="rgb(205,117,38)" fg:x="23237" fg:w="9"/><text x="46.9210%" y="335.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="46.6750%" y="309" width="0.0141%" height="15" fill="rgb(237,72,25)" fg:x="23239" fg:w="7"/><text x="46.9250%" y="319.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="46.6770%" y="293" width="0.0121%" height="15" fill="rgb(244,70,9)" fg:x="23240" fg:w="6"/><text x="46.9270%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="46.6790%" y="277" width="0.0100%" height="15" fill="rgb(217,125,39)" fg:x="23241" fg:w="5"/><text x="46.9290%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="46.6790%" y="261" width="0.0100%" height="15" fill="rgb(235,36,10)" fg:x="23241" fg:w="5"/><text x="46.9290%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="46.6790%" y="245" width="0.0100%" height="15" fill="rgb(251,123,47)" fg:x="23241" fg:w="5"/><text x="46.9290%" y="255.50"></text></g><g><title>main`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="46.6951%" y="277" width="0.0241%" height="15" fill="rgb(221,13,13)" fg:x="23249" fg:w="12"/><text x="46.9451%" y="287.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="46.7091%" y="261" width="0.0100%" height="15" fill="rgb(238,131,9)" fg:x="23256" fg:w="5"/><text x="46.9591%" y="271.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.04%)</title><rect x="46.6910%" y="293" width="0.0402%" height="15" fill="rgb(211,50,8)" fg:x="23247" fg:w="20"/><text x="46.9410%" y="303.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="46.7192%" y="277" width="0.0121%" height="15" fill="rgb(245,182,24)" fg:x="23261" fg:w="6"/><text x="46.9692%" y="287.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="46.7212%" y="261" width="0.0100%" height="15" fill="rgb(242,14,37)" fg:x="23262" fg:w="5"/><text x="46.9712%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="46.7212%" y="245" width="0.0100%" height="15" fill="rgb(246,228,12)" fg:x="23262" fg:w="5"/><text x="46.9712%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="46.7212%" y="229" width="0.0100%" height="15" fill="rgb(213,55,15)" fg:x="23262" fg:w="5"/><text x="46.9712%" y="239.50"></text></g><g><title>main`&lt;F as tokenizers::tokenizer::pattern::Pattern&gt;::find_matches (21 samples, 0.04%)</title><rect x="46.6910%" y="309" width="0.0422%" height="15" fill="rgb(209,9,3)" fg:x="23247" fg:w="21"/><text x="46.9410%" y="319.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="46.7473%" y="293" width="0.0121%" height="15" fill="rgb(230,59,30)" fg:x="23275" fg:w="6"/><text x="46.9973%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="46.7473%" y="277" width="0.0121%" height="15" fill="rgb(209,121,21)" fg:x="23275" fg:w="6"/><text x="46.9973%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.01%)</title><rect x="46.7473%" y="261" width="0.0121%" height="15" fill="rgb(220,109,13)" fg:x="23275" fg:w="6"/><text x="46.9973%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.01%)</title><rect x="46.7473%" y="245" width="0.0121%" height="15" fill="rgb(232,18,1)" fg:x="23275" fg:w="6"/><text x="46.9973%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="46.7473%" y="229" width="0.0121%" height="15" fill="rgb(215,41,42)" fg:x="23275" fg:w="6"/><text x="46.9973%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.03%)</title><rect x="46.7734%" y="245" width="0.0341%" height="15" fill="rgb(224,123,36)" fg:x="23288" fg:w="17"/><text x="47.0234%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="46.7734%" y="229" width="0.0341%" height="15" fill="rgb(240,125,3)" fg:x="23288" fg:w="17"/><text x="47.0234%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="46.7874%" y="213" width="0.0201%" height="15" fill="rgb(205,98,50)" fg:x="23295" fg:w="10"/><text x="47.0374%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="46.7955%" y="197" width="0.0121%" height="15" fill="rgb(205,185,37)" fg:x="23299" fg:w="6"/><text x="47.0455%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.04%)</title><rect x="46.7714%" y="277" width="0.0382%" height="15" fill="rgb(238,207,15)" fg:x="23287" fg:w="19"/><text x="47.0214%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.04%)</title><rect x="46.7734%" y="261" width="0.0362%" height="15" fill="rgb(213,199,42)" fg:x="23288" fg:w="18"/><text x="47.0234%" y="271.50"></text></g><g><title>main`&lt;tokenizers::pre_tokenizers::PreTokenizerWrapper as tokenizers::tokenizer::PreTokenizer&gt;::pre_tokenize (81 samples, 0.16%)</title><rect x="46.6529%" y="357" width="0.1627%" height="15" fill="rgb(235,201,11)" fg:x="23228" fg:w="81"/><text x="46.9029%" y="367.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (80 samples, 0.16%)</title><rect x="46.6549%" y="341" width="0.1607%" height="15" fill="rgb(207,46,11)" fg:x="23229" fg:w="80"/><text x="46.9049%" y="351.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::split (62 samples, 0.12%)</title><rect x="46.6910%" y="325" width="0.1245%" height="15" fill="rgb(241,35,35)" fg:x="23247" fg:w="62"/><text x="46.9410%" y="335.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (41 samples, 0.08%)</title><rect x="46.7332%" y="309" width="0.0823%" height="15" fill="rgb(243,32,47)" fg:x="23268" fg:w="41"/><text x="46.9832%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (28 samples, 0.06%)</title><rect x="46.7593%" y="293" width="0.0562%" height="15" fill="rgb(247,202,23)" fg:x="23281" fg:w="28"/><text x="47.0093%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.02%)</title><rect x="46.8497%" y="245" width="0.0221%" height="15" fill="rgb(219,102,11)" fg:x="23326" fg:w="11"/><text x="47.0997%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="46.8517%" y="229" width="0.0201%" height="15" fill="rgb(243,110,44)" fg:x="23327" fg:w="10"/><text x="47.1017%" y="239.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.03%)</title><rect x="46.8457%" y="293" width="0.0301%" height="15" fill="rgb(222,74,54)" fg:x="23324" fg:w="15"/><text x="47.0957%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (15 samples, 0.03%)</title><rect x="46.8457%" y="277" width="0.0301%" height="15" fill="rgb(216,99,12)" fg:x="23324" fg:w="15"/><text x="47.0957%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.03%)</title><rect x="46.8477%" y="261" width="0.0281%" height="15" fill="rgb(226,22,26)" fg:x="23325" fg:w="14"/><text x="47.0977%" y="271.50"></text></g><g><title>main`&lt;tokenizers::tokenizer::normalizer::NormalizedString as core::convert::From&lt;&amp;str&gt;&gt;::from (28 samples, 0.06%)</title><rect x="46.8236%" y="325" width="0.0562%" height="15" fill="rgb(217,163,10)" fg:x="23313" fg:w="28"/><text x="47.0736%" y="335.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.05%)</title><rect x="46.8296%" y="309" width="0.0502%" height="15" fill="rgb(213,25,53)" fg:x="23316" fg:w="25"/><text x="47.0796%" y="319.50"></text></g><g><title>main`&lt;tokenizers::tokenizer::pre_tokenizer::PreTokenizedString as core::convert::From&lt;&amp;str&gt;&gt;::from (30 samples, 0.06%)</title><rect x="46.8216%" y="341" width="0.0603%" height="15" fill="rgb(252,105,26)" fg:x="23312" fg:w="30"/><text x="47.0716%" y="351.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="46.8959%" y="309" width="0.0181%" height="15" fill="rgb(220,39,43)" fg:x="23349" fg:w="9"/><text x="47.1459%" y="319.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="46.9019%" y="293" width="0.0121%" height="15" fill="rgb(229,68,48)" fg:x="23352" fg:w="6"/><text x="47.1519%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="46.9039%" y="277" width="0.0100%" height="15" fill="rgb(252,8,32)" fg:x="23353" fg:w="5"/><text x="47.1539%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="46.9039%" y="261" width="0.0100%" height="15" fill="rgb(223,20,43)" fg:x="23353" fg:w="5"/><text x="47.1539%" y="271.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (13 samples, 0.03%)</title><rect x="46.9541%" y="277" width="0.0261%" height="15" fill="rgb(229,81,49)" fg:x="23378" fg:w="13"/><text x="47.2041%" y="287.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.03%)</title><rect x="46.9541%" y="261" width="0.0261%" height="15" fill="rgb(236,28,36)" fg:x="23378" fg:w="13"/><text x="47.2041%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.02%)</title><rect x="46.9863%" y="213" width="0.0161%" height="15" fill="rgb(249,185,26)" fg:x="23394" fg:w="8"/><text x="47.2363%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.02%)</title><rect x="46.9863%" y="197" width="0.0161%" height="15" fill="rgb(249,174,33)" fg:x="23394" fg:w="8"/><text x="47.2363%" y="207.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="46.9803%" y="261" width="0.0241%" height="15" fill="rgb(233,201,37)" fg:x="23391" fg:w="12"/><text x="47.2303%" y="271.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="46.9843%" y="245" width="0.0201%" height="15" fill="rgb(221,78,26)" fg:x="23393" fg:w="10"/><text x="47.2343%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.02%)</title><rect x="46.9843%" y="229" width="0.0201%" height="15" fill="rgb(250,127,30)" fg:x="23393" fg:w="10"/><text x="47.2343%" y="239.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (34 samples, 0.07%)</title><rect x="46.9381%" y="293" width="0.0683%" height="15" fill="rgb(230,49,44)" fg:x="23370" fg:w="34"/><text x="47.1881%" y="303.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.03%)</title><rect x="46.9803%" y="277" width="0.0261%" height="15" fill="rgb(229,67,23)" fg:x="23391" fg:w="13"/><text x="47.2303%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::filter (73 samples, 0.15%)</title><rect x="46.9180%" y="309" width="0.1466%" height="15" fill="rgb(249,83,47)" fg:x="23360" fg:w="73"/><text x="47.1680%" y="319.50"></text></g><g><title>main`unicode_categories::table_binary_search (29 samples, 0.06%)</title><rect x="47.0064%" y="293" width="0.0582%" height="15" fill="rgb(215,43,3)" fg:x="23404" fg:w="29"/><text x="47.2564%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.01%)</title><rect x="47.0686%" y="245" width="0.0121%" height="15" fill="rgb(238,154,13)" fg:x="23435" fg:w="6"/><text x="47.3186%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="47.0706%" y="229" width="0.0100%" height="15" fill="rgb(219,56,2)" fg:x="23436" fg:w="5"/><text x="47.3206%" y="239.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::for_each (9 samples, 0.02%)</title><rect x="47.0646%" y="309" width="0.0181%" height="15" fill="rgb(233,0,4)" fg:x="23433" fg:w="9"/><text x="47.3146%" y="319.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="47.0666%" y="293" width="0.0161%" height="15" fill="rgb(235,30,7)" fg:x="23434" fg:w="8"/><text x="47.3166%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="47.0666%" y="277" width="0.0161%" height="15" fill="rgb(250,79,13)" fg:x="23434" fg:w="8"/><text x="47.3166%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.01%)</title><rect x="47.0686%" y="261" width="0.0141%" height="15" fill="rgb(211,146,34)" fg:x="23435" fg:w="7"/><text x="47.3186%" y="271.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="47.0907%" y="293" width="0.0121%" height="15" fill="rgb(228,22,38)" fg:x="23446" fg:w="6"/><text x="47.3407%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="47.0927%" y="277" width="0.0100%" height="15" fill="rgb(235,168,5)" fg:x="23447" fg:w="5"/><text x="47.3427%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::lowercase (21 samples, 0.04%)</title><rect x="47.0827%" y="309" width="0.0422%" height="15" fill="rgb(221,155,16)" fg:x="23442" fg:w="21"/><text x="47.3327%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (11 samples, 0.02%)</title><rect x="47.1028%" y="293" width="0.0221%" height="15" fill="rgb(215,215,53)" fg:x="23452" fg:w="11"/><text x="47.3528%" y="303.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="47.1128%" y="277" width="0.0121%" height="15" fill="rgb(223,4,10)" fg:x="23457" fg:w="6"/><text x="47.3628%" y="287.50"></text></g><g><title>main`&lt;unicode_normalization_alignments::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="47.1510%" y="245" width="0.0261%" height="15" fill="rgb(234,103,6)" fg:x="23476" fg:w="13"/><text x="47.4010%" y="255.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.04%)</title><rect x="47.1429%" y="261" width="0.0402%" height="15" fill="rgb(227,97,0)" fg:x="23472" fg:w="20"/><text x="47.3929%" y="271.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="47.1429%" y="277" width="0.0442%" height="15" fill="rgb(234,150,53)" fg:x="23472" fg:w="22"/><text x="47.3929%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::nfd (35 samples, 0.07%)</title><rect x="47.1249%" y="309" width="0.0703%" height="15" fill="rgb(228,201,54)" fg:x="23463" fg:w="35"/><text x="47.3749%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (32 samples, 0.06%)</title><rect x="47.1309%" y="293" width="0.0643%" height="15" fill="rgb(222,22,37)" fg:x="23466" fg:w="32"/><text x="47.3809%" y="303.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.02%)</title><rect x="47.2173%" y="277" width="0.0181%" height="15" fill="rgb(237,53,32)" fg:x="23509" fg:w="9"/><text x="47.4673%" y="287.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="47.2173%" y="293" width="0.0221%" height="15" fill="rgb(233,25,53)" fg:x="23509" fg:w="11"/><text x="47.4673%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (27 samples, 0.05%)</title><rect x="47.1952%" y="309" width="0.0542%" height="15" fill="rgb(210,40,34)" fg:x="23498" fg:w="27"/><text x="47.4452%" y="319.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="47.2394%" y="293" width="0.0100%" height="15" fill="rgb(241,220,44)" fg:x="23520" fg:w="5"/><text x="47.4894%" y="303.50"></text></g><g><title>main`&lt;tokenizers::normalizers::bert::BertNormalizer as tokenizers::tokenizer::Normalizer&gt;::normalize (177 samples, 0.36%)</title><rect x="46.8959%" y="325" width="0.3555%" height="15" fill="rgb(235,28,35)" fg:x="23349" fg:w="177"/><text x="47.1459%" y="335.50"></text></g><g><title>main`&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="47.2655%" y="309" width="0.0121%" height="15" fill="rgb(210,56,17)" fg:x="23533" fg:w="6"/><text x="47.5155%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::added_vocabulary::AddedVocabulary::split_with_indices (26 samples, 0.05%)</title><rect x="47.2554%" y="325" width="0.0522%" height="15" fill="rgb(224,130,29)" fg:x="23528" fg:w="26"/><text x="47.5054%" y="335.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="47.2855%" y="309" width="0.0221%" height="15" fill="rgb(235,212,8)" fg:x="23543" fg:w="11"/><text x="47.5355%" y="319.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="47.2916%" y="293" width="0.0161%" height="15" fill="rgb(223,33,50)" fg:x="23546" fg:w="8"/><text x="47.5416%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (7 samples, 0.01%)</title><rect x="47.2936%" y="277" width="0.0141%" height="15" fill="rgb(219,149,13)" fg:x="23547" fg:w="7"/><text x="47.5436%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::added_vocabulary::AddedVocabulary::extract_and_normalize (246 samples, 0.49%)</title><rect x="46.8176%" y="357" width="0.4941%" height="15" fill="rgb(250,156,29)" fg:x="23310" fg:w="246"/><text x="47.0676%" y="367.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (214 samples, 0.43%)</title><rect x="46.8818%" y="341" width="0.4298%" height="15" fill="rgb(216,193,19)" fg:x="23342" fg:w="214"/><text x="47.1318%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="47.3237%" y="309" width="0.0100%" height="15" fill="rgb(216,135,14)" fg:x="23562" fg:w="5"/><text x="47.5737%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="47.3358%" y="261" width="0.0161%" height="15" fill="rgb(241,47,5)" fg:x="23568" fg:w="8"/><text x="47.5858%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="47.3378%" y="245" width="0.0141%" height="15" fill="rgb(233,42,35)" fg:x="23569" fg:w="7"/><text x="47.5878%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.04%)</title><rect x="47.3337%" y="293" width="0.0362%" height="15" fill="rgb(231,13,6)" fg:x="23567" fg:w="18"/><text x="47.5837%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (18 samples, 0.04%)</title><rect x="47.3337%" y="277" width="0.0362%" height="15" fill="rgb(207,181,40)" fg:x="23567" fg:w="18"/><text x="47.5837%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.04%)</title><rect x="47.3337%" y="309" width="0.0382%" height="15" fill="rgb(254,173,49)" fg:x="23567" fg:w="19"/><text x="47.5837%" y="319.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.06%)</title><rect x="47.3197%" y="341" width="0.0562%" height="15" fill="rgb(221,1,38)" fg:x="23560" fg:w="28"/><text x="47.5697%" y="351.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (26 samples, 0.05%)</title><rect x="47.3237%" y="325" width="0.0522%" height="15" fill="rgb(206,124,46)" fg:x="23562" fg:w="26"/><text x="47.5737%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="47.3779%" y="325" width="0.0201%" height="15" fill="rgb(249,21,11)" fg:x="23589" fg:w="10"/><text x="47.6279%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.05%)</title><rect x="47.3980%" y="325" width="0.0502%" height="15" fill="rgb(222,201,40)" fg:x="23599" fg:w="25"/><text x="47.6480%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.04%)</title><rect x="47.4061%" y="309" width="0.0422%" height="15" fill="rgb(235,61,29)" fg:x="23603" fg:w="21"/><text x="47.6561%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="47.4382%" y="293" width="0.0100%" height="15" fill="rgb(219,207,3)" fg:x="23619" fg:w="5"/><text x="47.6882%" y="303.50"></text></g><g><title>main`core::iter::adapters::flatten::and_then_or_clear (37 samples, 0.07%)</title><rect x="47.3759%" y="341" width="0.0743%" height="15" fill="rgb(222,56,46)" fg:x="23588" fg:w="37"/><text x="47.6259%" y="351.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::into_encoding (73 samples, 0.15%)</title><rect x="47.3117%" y="357" width="0.1466%" height="15" fill="rgb(239,76,54)" fg:x="23556" fg:w="73"/><text x="47.5617%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="47.4623%" y="341" width="0.0161%" height="15" fill="rgb(231,124,27)" fg:x="23631" fg:w="8"/><text x="47.7123%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="47.4663%" y="325" width="0.0121%" height="15" fill="rgb(249,195,6)" fg:x="23633" fg:w="6"/><text x="47.7163%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="47.5025%" y="309" width="0.0141%" height="15" fill="rgb(237,174,47)" fg:x="23651" fg:w="7"/><text x="47.7525%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.04%)</title><rect x="47.4784%" y="341" width="0.0422%" height="15" fill="rgb(206,201,31)" fg:x="23639" fg:w="21"/><text x="47.7284%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.03%)</title><rect x="47.4864%" y="325" width="0.0341%" height="15" fill="rgb(231,57,52)" fg:x="23643" fg:w="17"/><text x="47.7364%" y="335.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="47.5225%" y="341" width="0.0181%" height="15" fill="rgb(248,177,22)" fg:x="23661" fg:w="9"/><text x="47.7725%" y="351.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="47.5286%" y="325" width="0.0121%" height="15" fill="rgb(215,211,37)" fg:x="23664" fg:w="6"/><text x="47.7786%" y="335.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="47.5286%" y="309" width="0.0121%" height="15" fill="rgb(241,128,51)" fg:x="23664" fg:w="6"/><text x="47.7786%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="47.5306%" y="293" width="0.0100%" height="15" fill="rgb(227,165,31)" fg:x="23665" fg:w="5"/><text x="47.7806%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="47.5306%" y="277" width="0.0100%" height="15" fill="rgb(228,167,24)" fg:x="23665" fg:w="5"/><text x="47.7806%" y="287.50"></text></g><g><title>main`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.07%)</title><rect x="47.5446%" y="309" width="0.0703%" height="15" fill="rgb(228,143,12)" fg:x="23672" fg:w="35"/><text x="47.7946%" y="319.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (30 samples, 0.06%)</title><rect x="47.5547%" y="293" width="0.0603%" height="15" fill="rgb(249,149,8)" fg:x="23677" fg:w="30"/><text x="47.8047%" y="303.50"></text></g><g><title>main`unicode_categories::table_binary_search (25 samples, 0.05%)</title><rect x="47.5647%" y="277" width="0.0502%" height="15" fill="rgb(243,35,44)" fg:x="23682" fg:w="25"/><text x="47.8147%" y="287.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.08%)</title><rect x="47.5426%" y="325" width="0.0763%" height="15" fill="rgb(246,89,9)" fg:x="23671" fg:w="38"/><text x="47.7926%" y="335.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="47.6210%" y="325" width="0.0121%" height="15" fill="rgb(233,213,13)" fg:x="23710" fg:w="6"/><text x="47.8710%" y="335.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="47.6210%" y="309" width="0.0121%" height="15" fill="rgb(233,141,41)" fg:x="23710" fg:w="6"/><text x="47.8710%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="47.6210%" y="293" width="0.0121%" height="15" fill="rgb(239,167,4)" fg:x="23710" fg:w="6"/><text x="47.8710%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="47.6210%" y="277" width="0.0121%" height="15" fill="rgb(209,217,16)" fg:x="23710" fg:w="6"/><text x="47.8710%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.6230%" y="261" width="0.0100%" height="15" fill="rgb(219,88,35)" fg:x="23711" fg:w="5"/><text x="47.8730%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.6230%" y="245" width="0.0100%" height="15" fill="rgb(220,193,23)" fg:x="23711" fg:w="5"/><text x="47.8730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="47.6431%" y="309" width="0.0121%" height="15" fill="rgb(230,90,52)" fg:x="23721" fg:w="6"/><text x="47.8931%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="47.6551%" y="309" width="0.0100%" height="15" fill="rgb(252,106,19)" fg:x="23727" fg:w="5"/><text x="47.9051%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.01%)</title><rect x="47.6551%" y="293" width="0.0100%" height="15" fill="rgb(206,74,20)" fg:x="23727" fg:w="5"/><text x="47.9051%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.6551%" y="277" width="0.0100%" height="15" fill="rgb(230,138,44)" fg:x="23727" fg:w="5"/><text x="47.9051%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.6551%" y="261" width="0.0100%" height="15" fill="rgb(235,182,43)" fg:x="23727" fg:w="5"/><text x="47.9051%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="47.6752%" y="293" width="0.0121%" height="15" fill="rgb(242,16,51)" fg:x="23737" fg:w="6"/><text x="47.9252%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="47.6772%" y="277" width="0.0100%" height="15" fill="rgb(248,9,4)" fg:x="23738" fg:w="5"/><text x="47.9272%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (19 samples, 0.04%)</title><rect x="47.6872%" y="277" width="0.0382%" height="15" fill="rgb(210,31,22)" fg:x="23743" fg:w="19"/><text x="47.9372%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="47.6872%" y="261" width="0.0382%" height="15" fill="rgb(239,54,39)" fg:x="23743" fg:w="19"/><text x="47.9372%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="47.6892%" y="245" width="0.0362%" height="15" fill="rgb(230,99,41)" fg:x="23744" fg:w="18"/><text x="47.9392%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="47.7093%" y="229" width="0.0161%" height="15" fill="rgb(253,106,12)" fg:x="23754" fg:w="8"/><text x="47.9593%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.04%)</title><rect x="47.6872%" y="293" width="0.0402%" height="15" fill="rgb(213,46,41)" fg:x="23743" fg:w="20"/><text x="47.9372%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (137 samples, 0.28%)</title><rect x="47.4583%" y="357" width="0.2752%" height="15" fill="rgb(215,133,35)" fg:x="23629" fg:w="137"/><text x="47.7083%" y="367.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::split (96 samples, 0.19%)</title><rect x="47.5406%" y="341" width="0.1928%" height="15" fill="rgb(213,28,5)" fg:x="23670" fg:w="96"/><text x="47.7906%" y="351.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (50 samples, 0.10%)</title><rect x="47.6330%" y="325" width="0.1004%" height="15" fill="rgb(215,77,49)" fg:x="23716" fg:w="50"/><text x="47.8830%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (32 samples, 0.06%)</title><rect x="47.6692%" y="309" width="0.0643%" height="15" fill="rgb(248,100,22)" fg:x="23734" fg:w="32"/><text x="47.9192%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="47.8057%" y="309" width="0.0121%" height="15" fill="rgb(208,67,9)" fg:x="23802" fg:w="6"/><text x="48.0557%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="47.8057%" y="293" width="0.0121%" height="15" fill="rgb(219,133,21)" fg:x="23802" fg:w="6"/><text x="48.0557%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.8077%" y="277" width="0.0100%" height="15" fill="rgb(246,46,29)" fg:x="23803" fg:w="5"/><text x="48.0577%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.8077%" y="261" width="0.0100%" height="15" fill="rgb(246,185,52)" fg:x="23803" fg:w="5"/><text x="48.0577%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="47.8178%" y="309" width="0.0121%" height="15" fill="rgb(252,136,11)" fg:x="23808" fg:w="6"/><text x="48.0678%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="47.8600%" y="229" width="0.0100%" height="15" fill="rgb(219,138,53)" fg:x="23829" fg:w="5"/><text x="48.1100%" y="239.50"></text></g><g><title>main`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="47.8439%" y="277" width="0.0321%" height="15" fill="rgb(211,51,23)" fg:x="23821" fg:w="16"/><text x="48.0939%" y="287.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="47.8560%" y="261" width="0.0201%" height="15" fill="rgb(247,221,28)" fg:x="23827" fg:w="10"/><text x="48.1060%" y="271.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="47.8580%" y="245" width="0.0181%" height="15" fill="rgb(251,222,45)" fg:x="23828" fg:w="9"/><text x="48.1080%" y="255.50"></text></g><g><title>main`alloc::fmt::format::format_inner (23 samples, 0.05%)</title><rect x="47.8319%" y="309" width="0.0462%" height="15" fill="rgb(217,162,53)" fg:x="23815" fg:w="23"/><text x="48.0819%" y="319.50"></text></g><g><title>main`core::fmt::write (19 samples, 0.04%)</title><rect x="47.8399%" y="293" width="0.0382%" height="15" fill="rgb(229,93,14)" fg:x="23819" fg:w="19"/><text x="48.0899%" y="303.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="47.8780%" y="309" width="0.0161%" height="15" fill="rgb(209,67,49)" fg:x="23838" fg:w="8"/><text x="48.1280%" y="319.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="47.8801%" y="293" width="0.0141%" height="15" fill="rgb(213,87,29)" fg:x="23839" fg:w="7"/><text x="48.1301%" y="303.50"></text></g><g><title>main`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="47.8941%" y="309" width="0.0201%" height="15" fill="rgb(205,151,52)" fg:x="23846" fg:w="10"/><text x="48.1441%" y="319.50"></text></g><g><title>main`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="47.8981%" y="293" width="0.0161%" height="15" fill="rgb(253,215,39)" fg:x="23848" fg:w="8"/><text x="48.1481%" y="303.50"></text></g><g><title>main`&lt;tokenizers::models::wordpiece::WordPiece as tokenizers::tokenizer::Model&gt;::tokenize (91 samples, 0.18%)</title><rect x="47.7334%" y="325" width="0.1828%" height="15" fill="rgb(221,220,41)" fg:x="23766" fg:w="91"/><text x="47.9834%" y="335.50"></text></g><g><title>main`&lt;tokenizers::models::ModelWrapper as tokenizers::tokenizer::Model&gt;::tokenize (94 samples, 0.19%)</title><rect x="47.7334%" y="341" width="0.1888%" height="15" fill="rgb(218,133,21)" fg:x="23766" fg:w="94"/><text x="47.9834%" y="351.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode_single_sequence (637 samples, 1.28%)</title><rect x="46.6448%" y="373" width="1.2794%" height="15" fill="rgb(221,193,43)" fg:x="23224" fg:w="637"/><text x="46.8948%" y="383.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::tokenize (95 samples, 0.19%)</title><rect x="47.7334%" y="357" width="0.1908%" height="15" fill="rgb(240,128,52)" fg:x="23766" fg:w="95"/><text x="47.9834%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="47.9463%" y="277" width="0.0161%" height="15" fill="rgb(253,114,12)" fg:x="23872" fg:w="8"/><text x="48.1963%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.02%)</title><rect x="47.9463%" y="261" width="0.0161%" height="15" fill="rgb(215,223,47)" fg:x="23872" fg:w="8"/><text x="48.1963%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="47.9463%" y="245" width="0.0161%" height="15" fill="rgb(248,225,23)" fg:x="23872" fg:w="8"/><text x="48.1963%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="47.9463%" y="229" width="0.0161%" height="15" fill="rgb(250,108,0)" fg:x="23872" fg:w="8"/><text x="48.1963%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="47.9805%" y="245" width="0.0141%" height="15" fill="rgb(228,208,7)" fg:x="23889" fg:w="7"/><text x="48.2305%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="47.9805%" y="229" width="0.0141%" height="15" fill="rgb(244,45,10)" fg:x="23889" fg:w="7"/><text x="48.2305%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="47.9805%" y="213" width="0.0141%" height="15" fill="rgb(207,125,25)" fg:x="23889" fg:w="7"/><text x="48.2305%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="47.9805%" y="197" width="0.0141%" height="15" fill="rgb(210,195,18)" fg:x="23889" fg:w="7"/><text x="48.2305%" y="207.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="47.9684%" y="277" width="0.0301%" height="15" fill="rgb(249,80,12)" fg:x="23883" fg:w="15"/><text x="48.2184%" y="287.50"></text></g><g><title>main`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="47.9785%" y="261" width="0.0201%" height="15" fill="rgb(221,65,9)" fg:x="23888" fg:w="10"/><text x="48.2285%" y="271.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.07%)</title><rect x="47.9343%" y="309" width="0.0723%" height="15" fill="rgb(235,49,36)" fg:x="23866" fg:w="36"/><text x="48.1843%" y="319.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (33 samples, 0.07%)</title><rect x="47.9403%" y="293" width="0.0663%" height="15" fill="rgb(225,32,20)" fg:x="23869" fg:w="33"/><text x="48.1903%" y="303.50"></text></g><g><title>main`&lt;tokenizers::processors::template::TemplateProcessing as tokenizers::tokenizer::PostProcessor&gt;::process_encodings (55 samples, 0.11%)</title><rect x="47.9323%" y="325" width="0.1105%" height="15" fill="rgb(215,141,46)" fg:x="23865" fg:w="55"/><text x="48.1823%" y="335.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;tokenizers::tokenizer::encoding::Encoding&gt; (17 samples, 0.03%)</title><rect x="48.0086%" y="309" width="0.0341%" height="15" fill="rgb(250,160,47)" fg:x="23903" fg:w="17"/><text x="48.2586%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="48.0146%" y="293" width="0.0281%" height="15" fill="rgb(216,222,40)" fg:x="23906" fg:w="14"/><text x="48.2646%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="48.0186%" y="277" width="0.0241%" height="15" fill="rgb(234,217,39)" fg:x="23908" fg:w="12"/><text x="48.2686%" y="287.50"></text></g><g><title>main`&lt;tokenizers::processors::PostProcessorWrapper as tokenizers::tokenizer::PostProcessor&gt;::process_encodings (58 samples, 0.12%)</title><rect x="47.9283%" y="341" width="0.1165%" height="15" fill="rgb(207,178,40)" fg:x="23863" fg:w="58"/><text x="48.1783%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="48.0689%" y="309" width="0.0121%" height="15" fill="rgb(221,136,13)" fg:x="23933" fg:w="6"/><text x="48.3189%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="48.0990%" y="229" width="0.0141%" height="15" fill="rgb(249,199,10)" fg:x="23948" fg:w="7"/><text x="48.3490%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="48.0990%" y="213" width="0.0141%" height="15" fill="rgb(249,222,13)" fg:x="23948" fg:w="7"/><text x="48.3490%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="48.1030%" y="197" width="0.0100%" height="15" fill="rgb(244,185,38)" fg:x="23950" fg:w="5"/><text x="48.3530%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (15 samples, 0.03%)</title><rect x="48.0909%" y="261" width="0.0301%" height="15" fill="rgb(236,202,9)" fg:x="23944" fg:w="15"/><text x="48.3409%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.03%)</title><rect x="48.0930%" y="245" width="0.0281%" height="15" fill="rgb(250,229,37)" fg:x="23945" fg:w="14"/><text x="48.3430%" y="255.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.04%)</title><rect x="48.0829%" y="309" width="0.0402%" height="15" fill="rgb(206,174,23)" fg:x="23940" fg:w="20"/><text x="48.3329%" y="319.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="48.0849%" y="293" width="0.0382%" height="15" fill="rgb(211,33,43)" fg:x="23941" fg:w="19"/><text x="48.3349%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.03%)</title><rect x="48.0889%" y="277" width="0.0341%" height="15" fill="rgb(245,58,50)" fg:x="23943" fg:w="17"/><text x="48.3389%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::merge (40 samples, 0.08%)</title><rect x="48.0468%" y="341" width="0.0803%" height="15" fill="rgb(244,68,36)" fg:x="23922" fg:w="40"/><text x="48.2968%" y="351.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::merge_with (33 samples, 0.07%)</title><rect x="48.0608%" y="325" width="0.0663%" height="15" fill="rgb(232,229,15)" fg:x="23929" fg:w="33"/><text x="48.3108%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::PostProcessor::process (104 samples, 0.21%)</title><rect x="47.9262%" y="357" width="0.2089%" height="15" fill="rgb(254,30,23)" fg:x="23862" fg:w="104"/><text x="48.1762%" y="367.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (758 samples, 1.52%)</title><rect x="46.6388%" y="405" width="1.5224%" height="15" fill="rgb(235,160,14)" fg:x="23221" fg:w="758"/><text x="46.8888%" y="415.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode (756 samples, 1.52%)</title><rect x="46.6428%" y="389" width="1.5184%" height="15" fill="rgb(212,155,44)" fg:x="23223" fg:w="756"/><text x="46.8928%" y="399.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::post_process (118 samples, 0.24%)</title><rect x="47.9242%" y="373" width="0.2370%" height="15" fill="rgb(226,2,50)" fg:x="23861" fg:w="118"/><text x="48.1742%" y="383.50"></text></g><g><title>main`tokenizers::utils::padding::pad_encodings (13 samples, 0.03%)</title><rect x="48.1351%" y="357" width="0.0261%" height="15" fill="rgb(234,177,6)" fg:x="23966" fg:w="13"/><text x="48.3851%" y="367.50"></text></g><g><title>main`tokenizers::utils::parallelism::get_parallelism (9 samples, 0.02%)</title><rect x="48.1432%" y="341" width="0.0181%" height="15" fill="rgb(217,24,9)" fg:x="23970" fg:w="9"/><text x="48.3932%" y="351.50"></text></g><g><title>main`std::env::_var (8 samples, 0.02%)</title><rect x="48.1452%" y="325" width="0.0161%" height="15" fill="rgb(220,13,46)" fg:x="23971" fg:w="8"/><text x="48.3952%" y="335.50"></text></g><g><title>main`std::env::_var_os (8 samples, 0.02%)</title><rect x="48.1452%" y="309" width="0.0161%" height="15" fill="rgb(239,221,27)" fg:x="23971" fg:w="8"/><text x="48.3952%" y="319.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (766 samples, 1.54%)</title><rect x="46.6248%" y="421" width="1.5385%" height="15" fill="rgb(222,198,25)" fg:x="23214" fg:w="766"/><text x="46.8748%" y="431.50"></text></g><g><title>main`tokenizers::tokenizer::added_vocabulary::AddedVocabulary::extract_and_normalize (6 samples, 0.01%)</title><rect x="48.1813%" y="325" width="0.0121%" height="15" fill="rgb(211,99,13)" fg:x="23989" fg:w="6"/><text x="48.4313%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (5 samples, 0.01%)</title><rect x="48.1833%" y="309" width="0.0100%" height="15" fill="rgb(232,111,31)" fg:x="23990" fg:w="5"/><text x="48.4333%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode_single_sequence (15 samples, 0.03%)</title><rect x="48.1773%" y="341" width="0.0301%" height="15" fill="rgb(245,82,37)" fg:x="23987" fg:w="15"/><text x="48.4273%" y="351.50"></text></g><g><title>main`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.04%)</title><rect x="48.1753%" y="405" width="0.0442%" height="15" fill="rgb(227,149,46)" fg:x="23986" fg:w="22"/><text x="48.4253%" y="415.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.04%)</title><rect x="48.1753%" y="389" width="0.0442%" height="15" fill="rgb(218,36,50)" fg:x="23986" fg:w="22"/><text x="48.4253%" y="399.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.04%)</title><rect x="48.1753%" y="373" width="0.0442%" height="15" fill="rgb(226,80,48)" fg:x="23986" fg:w="22"/><text x="48.4253%" y="383.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode (21 samples, 0.04%)</title><rect x="48.1773%" y="357" width="0.0422%" height="15" fill="rgb(238,224,15)" fg:x="23987" fg:w="21"/><text x="48.4273%" y="367.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::post_process (6 samples, 0.01%)</title><rect x="48.2074%" y="341" width="0.0121%" height="15" fill="rgb(241,136,10)" fg:x="24002" fg:w="6"/><text x="48.4574%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (16 samples, 0.03%)</title><rect x="48.2195%" y="389" width="0.0321%" height="15" fill="rgb(208,32,45)" fg:x="24008" fg:w="16"/><text x="48.4695%" y="399.50"></text></g><g><title>main`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.02%)</title><rect x="48.2516%" y="373" width="0.0161%" height="15" fill="rgb(207,135,9)" fg:x="24024" fg:w="8"/><text x="48.5016%" y="383.50"></text></g><g><title>main`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.01%)</title><rect x="48.2556%" y="357" width="0.0121%" height="15" fill="rgb(206,86,44)" fg:x="24026" fg:w="6"/><text x="48.5056%" y="367.50"></text></g><g><title>main`rayon_core::registry::WorkerThread::find_work (14 samples, 0.03%)</title><rect x="48.2516%" y="389" width="0.0281%" height="15" fill="rgb(245,177,15)" fg:x="24024" fg:w="14"/><text x="48.5016%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (8 samples, 0.02%)</title><rect x="48.2797%" y="357" width="0.0161%" height="15" fill="rgb(206,64,50)" fg:x="24038" fg:w="8"/><text x="48.5297%" y="367.50"></text></g><g><title>main`rayon_core::sleep::Sleep::sleep (9 samples, 0.02%)</title><rect x="48.2797%" y="389" width="0.0181%" height="15" fill="rgb(234,36,40)" fg:x="24038" fg:w="9"/><text x="48.5297%" y="399.50"></text></g><g><title>main`std::sync::condvar::Condvar::wait (9 samples, 0.02%)</title><rect x="48.2797%" y="373" width="0.0181%" height="15" fill="rgb(213,64,8)" fg:x="24038" fg:w="9"/><text x="48.5297%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (7 samples, 0.01%)</title><rect x="48.2998%" y="357" width="0.0141%" height="15" fill="rgb(210,75,36)" fg:x="24048" fg:w="7"/><text x="48.5498%" y="367.50"></text></g><g><title>main`rayon_core::registry::WorkerThread::wait_until_cold (48 samples, 0.10%)</title><rect x="48.2195%" y="405" width="0.0964%" height="15" fill="rgb(229,88,21)" fg:x="24008" fg:w="48"/><text x="48.4695%" y="415.50"></text></g><g><title>main`rayon_core::sleep::Sleep::wake_any_threads (9 samples, 0.02%)</title><rect x="48.2978%" y="389" width="0.0181%" height="15" fill="rgb(252,204,47)" fg:x="24047" fg:w="9"/><text x="48.5478%" y="399.50"></text></g><g><title>main`rayon_core::sleep::Sleep::wake_specific_thread (8 samples, 0.02%)</title><rect x="48.2998%" y="373" width="0.0161%" height="15" fill="rgb(208,77,27)" fg:x="24048" fg:w="8"/><text x="48.5498%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="48.3701%" y="229" width="0.0100%" height="15" fill="rgb(221,76,26)" fg:x="24083" fg:w="5"/><text x="48.6201%" y="239.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="48.3621%" y="293" width="0.0201%" height="15" fill="rgb(225,139,18)" fg:x="24079" fg:w="10"/><text x="48.6121%" y="303.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="48.3701%" y="277" width="0.0121%" height="15" fill="rgb(230,137,11)" fg:x="24083" fg:w="6"/><text x="48.6201%" y="287.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="48.3701%" y="261" width="0.0121%" height="15" fill="rgb(212,28,1)" fg:x="24083" fg:w="6"/><text x="48.6201%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.01%)</title><rect x="48.3701%" y="245" width="0.0121%" height="15" fill="rgb(248,164,17)" fg:x="24083" fg:w="6"/><text x="48.6201%" y="255.50"></text></g><g><title>main`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="48.3922%" y="245" width="0.0221%" height="15" fill="rgb(222,171,42)" fg:x="24094" fg:w="11"/><text x="48.6422%" y="255.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.01%)</title><rect x="48.4023%" y="229" width="0.0121%" height="15" fill="rgb(243,84,45)" fg:x="24099" fg:w="6"/><text x="48.6523%" y="239.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="48.3842%" y="261" width="0.0382%" height="15" fill="rgb(252,49,23)" fg:x="24090" fg:w="19"/><text x="48.6342%" y="271.50"></text></g><g><title>main`&lt;F as tokenizers::tokenizer::pattern::Pattern&gt;::find_matches (20 samples, 0.04%)</title><rect x="48.3842%" y="277" width="0.0402%" height="15" fill="rgb(215,19,7)" fg:x="24090" fg:w="20"/><text x="48.6342%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.04%)</title><rect x="48.4605%" y="245" width="0.0442%" height="15" fill="rgb(238,81,41)" fg:x="24128" fg:w="22"/><text x="48.7105%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.04%)</title><rect x="48.4605%" y="229" width="0.0442%" height="15" fill="rgb(210,199,37)" fg:x="24128" fg:w="22"/><text x="48.7105%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="48.4665%" y="213" width="0.0382%" height="15" fill="rgb(244,192,49)" fg:x="24131" fg:w="19"/><text x="48.7165%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="48.4705%" y="197" width="0.0341%" height="15" fill="rgb(226,211,11)" fg:x="24133" fg:w="17"/><text x="48.7205%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="48.4866%" y="181" width="0.0181%" height="15" fill="rgb(236,162,54)" fg:x="24141" fg:w="9"/><text x="48.7366%" y="191.50"></text></g><g><title>main`&lt;tokenizers::pre_tokenizers::PreTokenizerWrapper as tokenizers::tokenizer::PreTokenizer&gt;::pre_tokenize (82 samples, 0.16%)</title><rect x="48.3480%" y="325" width="0.1647%" height="15" fill="rgb(220,229,9)" fg:x="24072" fg:w="82"/><text x="48.5980%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (79 samples, 0.16%)</title><rect x="48.3541%" y="309" width="0.1587%" height="15" fill="rgb(250,87,22)" fg:x="24075" fg:w="79"/><text x="48.6041%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::split (65 samples, 0.13%)</title><rect x="48.3822%" y="293" width="0.1306%" height="15" fill="rgb(239,43,17)" fg:x="24089" fg:w="65"/><text x="48.6322%" y="303.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (44 samples, 0.09%)</title><rect x="48.4244%" y="277" width="0.0884%" height="15" fill="rgb(231,177,25)" fg:x="24110" fg:w="44"/><text x="48.6744%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (33 samples, 0.07%)</title><rect x="48.4464%" y="261" width="0.0663%" height="15" fill="rgb(219,179,1)" fg:x="24121" fg:w="33"/><text x="48.6964%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="48.5569%" y="181" width="0.0100%" height="15" fill="rgb(238,219,53)" fg:x="24176" fg:w="5"/><text x="48.8069%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="48.5670%" y="165" width="0.0100%" height="15" fill="rgb(232,167,36)" fg:x="24181" fg:w="5"/><text x="48.8170%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="48.5670%" y="181" width="0.0161%" height="15" fill="rgb(244,19,51)" fg:x="24181" fg:w="8"/><text x="48.8170%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.03%)</title><rect x="48.5549%" y="213" width="0.0321%" height="15" fill="rgb(224,6,22)" fg:x="24175" fg:w="16"/><text x="48.8049%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.03%)</title><rect x="48.5569%" y="197" width="0.0301%" height="15" fill="rgb(224,145,5)" fg:x="24176" fg:w="15"/><text x="48.8069%" y="207.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.04%)</title><rect x="48.5529%" y="261" width="0.0402%" height="15" fill="rgb(234,130,49)" fg:x="24174" fg:w="20"/><text x="48.8029%" y="271.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="48.5549%" y="245" width="0.0382%" height="15" fill="rgb(254,6,2)" fg:x="24175" fg:w="19"/><text x="48.8049%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.04%)</title><rect x="48.5549%" y="229" width="0.0382%" height="15" fill="rgb(208,96,46)" fg:x="24175" fg:w="19"/><text x="48.8049%" y="239.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.06%)</title><rect x="48.5328%" y="277" width="0.0623%" height="15" fill="rgb(239,3,39)" fg:x="24164" fg:w="31"/><text x="48.7828%" y="287.50"></text></g><g><title>main`&lt;tokenizers::tokenizer::normalizer::NormalizedString as core::convert::From&lt;&amp;str&gt;&gt;::from (37 samples, 0.07%)</title><rect x="48.5268%" y="293" width="0.0743%" height="15" fill="rgb(233,210,1)" fg:x="24161" fg:w="37"/><text x="48.7768%" y="303.50"></text></g><g><title>main`&lt;tokenizers::tokenizer::pre_tokenizer::PreTokenizedString as core::convert::From&lt;&amp;str&gt;&gt;::from (42 samples, 0.08%)</title><rect x="48.5228%" y="309" width="0.0844%" height="15" fill="rgb(244,137,37)" fg:x="24159" fg:w="42"/><text x="48.7728%" y="319.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="48.6774%" y="245" width="0.0362%" height="15" fill="rgb(240,136,2)" fg:x="24236" fg:w="18"/><text x="48.9274%" y="255.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.03%)</title><rect x="48.6814%" y="229" width="0.0321%" height="15" fill="rgb(239,18,37)" fg:x="24238" fg:w="16"/><text x="48.9314%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="48.7176%" y="165" width="0.0100%" height="15" fill="rgb(218,185,22)" fg:x="24256" fg:w="5"/><text x="48.9676%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.01%)</title><rect x="48.7156%" y="181" width="0.0141%" height="15" fill="rgb(225,218,4)" fg:x="24255" fg:w="7"/><text x="48.9656%" y="191.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="48.7136%" y="245" width="0.0201%" height="15" fill="rgb(230,182,32)" fg:x="24254" fg:w="10"/><text x="48.9636%" y="255.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="48.7136%" y="229" width="0.0201%" height="15" fill="rgb(242,56,43)" fg:x="24254" fg:w="10"/><text x="48.9636%" y="239.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="48.7136%" y="213" width="0.0201%" height="15" fill="rgb(233,99,24)" fg:x="24254" fg:w="10"/><text x="48.9636%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.02%)</title><rect x="48.7136%" y="197" width="0.0201%" height="15" fill="rgb(234,209,42)" fg:x="24254" fg:w="10"/><text x="48.9636%" y="207.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (37 samples, 0.07%)</title><rect x="48.6654%" y="261" width="0.0743%" height="15" fill="rgb(227,7,12)" fg:x="24230" fg:w="37"/><text x="48.9154%" y="271.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::filter (67 samples, 0.13%)</title><rect x="48.6473%" y="277" width="0.1346%" height="15" fill="rgb(245,203,43)" fg:x="24221" fg:w="67"/><text x="48.8973%" y="287.50"></text></g><g><title>main`unicode_categories::table_binary_search (21 samples, 0.04%)</title><rect x="48.7397%" y="261" width="0.0422%" height="15" fill="rgb(238,205,33)" fg:x="24267" fg:w="21"/><text x="48.9897%" y="271.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::for_each (9 samples, 0.02%)</title><rect x="48.7819%" y="277" width="0.0181%" height="15" fill="rgb(231,56,7)" fg:x="24288" fg:w="9"/><text x="49.0319%" y="287.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="48.7879%" y="261" width="0.0121%" height="15" fill="rgb(244,186,29)" fg:x="24291" fg:w="6"/><text x="49.0379%" y="271.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="48.7879%" y="245" width="0.0121%" height="15" fill="rgb(234,111,31)" fg:x="24291" fg:w="6"/><text x="49.0379%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="48.7899%" y="229" width="0.0100%" height="15" fill="rgb(241,149,10)" fg:x="24292" fg:w="5"/><text x="49.0399%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="48.7899%" y="213" width="0.0100%" height="15" fill="rgb(249,206,44)" fg:x="24292" fg:w="5"/><text x="49.0399%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.02%)</title><rect x="48.8040%" y="213" width="0.0161%" height="15" fill="rgb(251,153,30)" fg:x="24299" fg:w="8"/><text x="49.0540%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.01%)</title><rect x="48.8060%" y="197" width="0.0141%" height="15" fill="rgb(239,152,38)" fg:x="24300" fg:w="7"/><text x="49.0560%" y="207.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.02%)</title><rect x="48.8019%" y="261" width="0.0201%" height="15" fill="rgb(249,139,47)" fg:x="24298" fg:w="10"/><text x="49.0519%" y="271.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="48.8019%" y="245" width="0.0201%" height="15" fill="rgb(244,64,35)" fg:x="24298" fg:w="10"/><text x="49.0519%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.02%)</title><rect x="48.8040%" y="229" width="0.0181%" height="15" fill="rgb(216,46,15)" fg:x="24299" fg:w="9"/><text x="49.0540%" y="239.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="48.8260%" y="245" width="0.0201%" height="15" fill="rgb(250,74,19)" fg:x="24310" fg:w="10"/><text x="49.0760%" y="255.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="48.8260%" y="229" width="0.0201%" height="15" fill="rgb(249,42,33)" fg:x="24310" fg:w="10"/><text x="49.0760%" y="239.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::lowercase (25 samples, 0.05%)</title><rect x="48.7999%" y="277" width="0.0502%" height="15" fill="rgb(242,149,17)" fg:x="24297" fg:w="25"/><text x="49.0499%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (14 samples, 0.03%)</title><rect x="48.8220%" y="261" width="0.0281%" height="15" fill="rgb(244,29,21)" fg:x="24308" fg:w="14"/><text x="49.0720%" y="271.50"></text></g><g><title>main`&lt;unicode_normalization_alignments::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="48.8923%" y="213" width="0.0382%" height="15" fill="rgb(220,130,37)" fg:x="24343" fg:w="19"/><text x="49.1423%" y="223.50"></text></g><g><title>main`unicode_normalization_alignments::lookups::canonical_combining_class (13 samples, 0.03%)</title><rect x="48.9044%" y="197" width="0.0261%" height="15" fill="rgb(211,67,2)" fg:x="24349" fg:w="13"/><text x="49.1544%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.01%)</title><rect x="48.9325%" y="165" width="0.0121%" height="15" fill="rgb(235,68,52)" fg:x="24363" fg:w="6"/><text x="49.1825%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="48.9325%" y="149" width="0.0121%" height="15" fill="rgb(246,142,3)" fg:x="24363" fg:w="6"/><text x="49.1825%" y="159.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="48.9305%" y="213" width="0.0161%" height="15" fill="rgb(241,25,7)" fg:x="24362" fg:w="8"/><text x="49.1805%" y="223.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="48.9305%" y="197" width="0.0161%" height="15" fill="rgb(242,119,39)" fg:x="24362" fg:w="8"/><text x="49.1805%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (8 samples, 0.02%)</title><rect x="48.9305%" y="181" width="0.0161%" height="15" fill="rgb(241,98,45)" fg:x="24362" fg:w="8"/><text x="49.1805%" y="191.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.08%)</title><rect x="48.8682%" y="229" width="0.0823%" height="15" fill="rgb(254,28,30)" fg:x="24331" fg:w="41"/><text x="49.1182%" y="239.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (44 samples, 0.09%)</title><rect x="48.8682%" y="245" width="0.0884%" height="15" fill="rgb(241,142,54)" fg:x="24331" fg:w="44"/><text x="49.1182%" y="255.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::nfd (57 samples, 0.11%)</title><rect x="48.8501%" y="277" width="0.1145%" height="15" fill="rgb(222,85,15)" fg:x="24322" fg:w="57"/><text x="49.1001%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (55 samples, 0.11%)</title><rect x="48.8542%" y="261" width="0.1105%" height="15" fill="rgb(210,85,47)" fg:x="24324" fg:w="55"/><text x="49.1042%" y="271.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.02%)</title><rect x="48.9707%" y="245" width="0.0181%" height="15" fill="rgb(224,206,25)" fg:x="24382" fg:w="9"/><text x="49.2207%" y="255.50"></text></g><g><title>main`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="48.9707%" y="261" width="0.0201%" height="15" fill="rgb(243,201,19)" fg:x="24382" fg:w="10"/><text x="49.2207%" y="271.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="48.9907%" y="261" width="0.0181%" height="15" fill="rgb(236,59,4)" fg:x="24392" fg:w="9"/><text x="49.2407%" y="271.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="48.9927%" y="245" width="0.0161%" height="15" fill="rgb(254,179,45)" fg:x="24393" fg:w="8"/><text x="49.2427%" y="255.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="48.9927%" y="229" width="0.0161%" height="15" fill="rgb(226,14,10)" fg:x="24393" fg:w="8"/><text x="49.2427%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.01%)</title><rect x="48.9948%" y="213" width="0.0141%" height="15" fill="rgb(244,27,41)" fg:x="24394" fg:w="7"/><text x="49.2448%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.01%)</title><rect x="48.9968%" y="197" width="0.0121%" height="15" fill="rgb(235,35,32)" fg:x="24395" fg:w="6"/><text x="49.2468%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="48.9968%" y="181" width="0.0121%" height="15" fill="rgb(218,68,31)" fg:x="24395" fg:w="6"/><text x="49.2468%" y="191.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::transform (25 samples, 0.05%)</title><rect x="48.9646%" y="277" width="0.0502%" height="15" fill="rgb(207,120,37)" fg:x="24379" fg:w="25"/><text x="49.2146%" y="287.50"></text></g><g><title>main`&lt;tokenizers::normalizers::bert::BertNormalizer as tokenizers::tokenizer::Normalizer&gt;::normalize (193 samples, 0.39%)</title><rect x="48.6292%" y="293" width="0.3876%" height="15" fill="rgb(227,98,0)" fg:x="24212" fg:w="193"/><text x="48.8792%" y="303.50"></text></g><g><title>main`&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="49.0410%" y="277" width="0.0181%" height="15" fill="rgb(207,7,3)" fg:x="24417" fg:w="9"/><text x="49.2910%" y="287.50"></text></g><g><title>main`aho_corasick::automaton::Automaton::leftmost_find_at_no_state (7 samples, 0.01%)</title><rect x="49.0450%" y="261" width="0.0141%" height="15" fill="rgb(206,98,19)" fg:x="24419" fg:w="7"/><text x="49.2950%" y="271.50"></text></g><g><title>main`tokenizers::tokenizer::added_vocabulary::AddedVocabulary::split_with_indices (30 samples, 0.06%)</title><rect x="49.0209%" y="293" width="0.0603%" height="15" fill="rgb(217,5,26)" fg:x="24407" fg:w="30"/><text x="49.2709%" y="303.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="49.0590%" y="277" width="0.0221%" height="15" fill="rgb(235,190,38)" fg:x="24426" fg:w="11"/><text x="49.3090%" y="287.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="49.0610%" y="261" width="0.0201%" height="15" fill="rgb(247,86,24)" fg:x="24427" fg:w="10"/><text x="49.3110%" y="271.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (8 samples, 0.02%)</title><rect x="49.0651%" y="245" width="0.0161%" height="15" fill="rgb(205,101,16)" fg:x="24429" fg:w="8"/><text x="49.3151%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="49.0711%" y="229" width="0.0100%" height="15" fill="rgb(246,168,33)" fg:x="24432" fg:w="5"/><text x="49.3211%" y="239.50"></text></g><g><title>main`tokenizers::tokenizer::added_vocabulary::AddedVocabulary::extract_and_normalize (286 samples, 0.57%)</title><rect x="48.5147%" y="325" width="0.5744%" height="15" fill="rgb(231,114,1)" fg:x="24155" fg:w="286"/><text x="48.7647%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (238 samples, 0.48%)</title><rect x="48.6111%" y="309" width="0.4780%" height="15" fill="rgb(207,184,53)" fg:x="24203" fg:w="238"/><text x="48.8611%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.1233%" y="229" width="0.0121%" height="15" fill="rgb(224,95,51)" fg:x="24458" fg:w="6"/><text x="49.3733%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="49.1253%" y="213" width="0.0100%" height="15" fill="rgb(212,188,45)" fg:x="24459" fg:w="5"/><text x="49.3753%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (11 samples, 0.02%)</title><rect x="49.1233%" y="245" width="0.0221%" height="15" fill="rgb(223,154,38)" fg:x="24458" fg:w="11"/><text x="49.3733%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (14 samples, 0.03%)</title><rect x="49.1193%" y="261" width="0.0281%" height="15" fill="rgb(251,22,52)" fg:x="24456" fg:w="14"/><text x="49.3693%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (15 samples, 0.03%)</title><rect x="49.1193%" y="277" width="0.0301%" height="15" fill="rgb(229,209,22)" fg:x="24456" fg:w="15"/><text x="49.3693%" y="287.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.04%)</title><rect x="49.1112%" y="309" width="0.0402%" height="15" fill="rgb(234,138,34)" fg:x="24452" fg:w="20"/><text x="49.3612%" y="319.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (17 samples, 0.03%)</title><rect x="49.1173%" y="293" width="0.0341%" height="15" fill="rgb(212,95,11)" fg:x="24455" fg:w="17"/><text x="49.3673%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="49.1595%" y="293" width="0.0100%" height="15" fill="rgb(240,179,47)" fg:x="24476" fg:w="5"/><text x="49.4095%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.06%)</title><rect x="49.1695%" y="293" width="0.0562%" height="15" fill="rgb(240,163,11)" fg:x="24481" fg:w="28"/><text x="49.4195%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.05%)</title><rect x="49.1795%" y="277" width="0.0462%" height="15" fill="rgb(236,37,12)" fg:x="24486" fg:w="23"/><text x="49.4295%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::into_encoding (68 samples, 0.14%)</title><rect x="49.0932%" y="325" width="0.1366%" height="15" fill="rgb(232,164,16)" fg:x="24443" fg:w="68"/><text x="49.3432%" y="335.50"></text></g><g><title>main`core::iter::adapters::flatten::and_then_or_clear (39 samples, 0.08%)</title><rect x="49.1514%" y="309" width="0.0783%" height="15" fill="rgb(244,205,15)" fg:x="24472" fg:w="39"/><text x="49.4014%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="49.2358%" y="309" width="0.0121%" height="15" fill="rgb(223,117,47)" fg:x="24514" fg:w="6"/><text x="49.4858%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="49.2378%" y="293" width="0.0100%" height="15" fill="rgb(244,107,35)" fg:x="24515" fg:w="5"/><text x="49.4878%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="49.2378%" y="277" width="0.0100%" height="15" fill="rgb(205,140,8)" fg:x="24515" fg:w="5"/><text x="49.4878%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="49.2800%" y="277" width="0.0161%" height="15" fill="rgb(228,84,46)" fg:x="24536" fg:w="8"/><text x="49.5300%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.05%)</title><rect x="49.2478%" y="309" width="0.0502%" height="15" fill="rgb(254,188,9)" fg:x="24520" fg:w="25"/><text x="49.4978%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="49.2599%" y="293" width="0.0382%" height="15" fill="rgb(206,112,54)" fg:x="24526" fg:w="19"/><text x="49.5099%" y="303.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (39 samples, 0.08%)</title><rect x="49.3241%" y="261" width="0.0783%" height="15" fill="rgb(216,84,49)" fg:x="24558" fg:w="39"/><text x="49.5741%" y="271.50"></text></g><g><title>main`unicode_categories::table_binary_search (33 samples, 0.07%)</title><rect x="49.3362%" y="245" width="0.0663%" height="15" fill="rgb(214,194,35)" fg:x="24564" fg:w="33"/><text x="49.5862%" y="255.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.09%)</title><rect x="49.3101%" y="293" width="0.0944%" height="15" fill="rgb(249,28,3)" fg:x="24551" fg:w="47"/><text x="49.5601%" y="303.50"></text></g><g><title>main`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.09%)</title><rect x="49.3121%" y="277" width="0.0924%" height="15" fill="rgb(222,56,52)" fg:x="24552" fg:w="46"/><text x="49.5621%" y="287.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="49.4065%" y="293" width="0.0161%" height="15" fill="rgb(245,217,50)" fg:x="24599" fg:w="8"/><text x="49.6565%" y="303.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="49.4085%" y="277" width="0.0141%" height="15" fill="rgb(213,201,24)" fg:x="24600" fg:w="7"/><text x="49.6585%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="49.4085%" y="261" width="0.0141%" height="15" fill="rgb(248,116,28)" fg:x="24600" fg:w="7"/><text x="49.6585%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="49.4085%" y="245" width="0.0141%" height="15" fill="rgb(219,72,43)" fg:x="24600" fg:w="7"/><text x="49.6585%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="49.4085%" y="229" width="0.0141%" height="15" fill="rgb(209,138,14)" fg:x="24600" fg:w="7"/><text x="49.6585%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="49.4085%" y="213" width="0.0141%" height="15" fill="rgb(222,18,33)" fg:x="24600" fg:w="7"/><text x="49.6585%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.4286%" y="277" width="0.0121%" height="15" fill="rgb(213,199,7)" fg:x="24610" fg:w="6"/><text x="49.6786%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="49.4406%" y="277" width="0.0100%" height="15" fill="rgb(250,110,10)" fg:x="24616" fg:w="5"/><text x="49.6906%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.01%)</title><rect x="49.4406%" y="261" width="0.0100%" height="15" fill="rgb(248,123,6)" fg:x="24616" fg:w="5"/><text x="49.6906%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.4406%" y="245" width="0.0100%" height="15" fill="rgb(206,91,31)" fg:x="24616" fg:w="5"/><text x="49.6906%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.4406%" y="229" width="0.0100%" height="15" fill="rgb(211,154,13)" fg:x="24616" fg:w="5"/><text x="49.6906%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="49.4728%" y="261" width="0.0141%" height="15" fill="rgb(225,148,7)" fg:x="24632" fg:w="7"/><text x="49.7228%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.05%)</title><rect x="49.4868%" y="261" width="0.0502%" height="15" fill="rgb(220,160,43)" fg:x="24639" fg:w="25"/><text x="49.7368%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.05%)</title><rect x="49.4888%" y="245" width="0.0482%" height="15" fill="rgb(213,52,39)" fg:x="24640" fg:w="24"/><text x="49.7388%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.04%)</title><rect x="49.4949%" y="229" width="0.0422%" height="15" fill="rgb(243,137,7)" fg:x="24643" fg:w="21"/><text x="49.7449%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="49.5009%" y="213" width="0.0362%" height="15" fill="rgb(230,79,13)" fg:x="24646" fg:w="18"/><text x="49.7509%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.03%)</title><rect x="49.5109%" y="197" width="0.0261%" height="15" fill="rgb(247,105,23)" fg:x="24651" fg:w="13"/><text x="49.7609%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="49.5250%" y="181" width="0.0121%" height="15" fill="rgb(223,179,41)" fg:x="24658" fg:w="6"/><text x="49.7750%" y="191.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::split (158 samples, 0.32%)</title><rect x="49.2297%" y="325" width="0.3173%" height="15" fill="rgb(218,9,34)" fg:x="24511" fg:w="158"/><text x="49.4797%" y="335.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::split (120 samples, 0.24%)</title><rect x="49.3061%" y="309" width="0.2410%" height="15" fill="rgb(222,106,8)" fg:x="24549" fg:w="120"/><text x="49.5561%" y="319.50"></text></g><g><title>main`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (62 samples, 0.12%)</title><rect x="49.4226%" y="293" width="0.1245%" height="15" fill="rgb(211,220,0)" fg:x="24607" fg:w="62"/><text x="49.6726%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::normalizer::NormalizedString::slice (45 samples, 0.09%)</title><rect x="49.4567%" y="277" width="0.0904%" height="15" fill="rgb(229,52,16)" fg:x="24624" fg:w="45"/><text x="49.7067%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (5 samples, 0.01%)</title><rect x="49.5370%" y="261" width="0.0100%" height="15" fill="rgb(212,155,18)" fg:x="24664" fg:w="5"/><text x="49.7870%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="49.5993%" y="277" width="0.0141%" height="15" fill="rgb(242,21,14)" fg:x="24695" fg:w="7"/><text x="49.8493%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="49.6013%" y="261" width="0.0121%" height="15" fill="rgb(222,19,48)" fg:x="24696" fg:w="6"/><text x="49.8513%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.6033%" y="245" width="0.0100%" height="15" fill="rgb(232,45,27)" fg:x="24697" fg:w="5"/><text x="49.8533%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.6033%" y="229" width="0.0100%" height="15" fill="rgb(249,103,42)" fg:x="24697" fg:w="5"/><text x="49.8533%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="49.6375%" y="197" width="0.0161%" height="15" fill="rgb(246,81,33)" fg:x="24714" fg:w="8"/><text x="49.8875%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.02%)</title><rect x="49.6375%" y="181" width="0.0161%" height="15" fill="rgb(252,33,42)" fg:x="24714" fg:w="8"/><text x="49.8875%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="49.6375%" y="165" width="0.0161%" height="15" fill="rgb(209,212,41)" fg:x="24714" fg:w="8"/><text x="49.8875%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="49.6375%" y="149" width="0.0161%" height="15" fill="rgb(207,154,6)" fg:x="24714" fg:w="8"/><text x="49.8875%" y="159.50"></text></g><g><title>main`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.03%)</title><rect x="49.6294%" y="245" width="0.0261%" height="15" fill="rgb(223,64,47)" fg:x="24710" fg:w="13"/><text x="49.8794%" y="255.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="49.6335%" y="229" width="0.0221%" height="15" fill="rgb(211,161,38)" fg:x="24712" fg:w="11"/><text x="49.8835%" y="239.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="49.6335%" y="213" width="0.0221%" height="15" fill="rgb(219,138,40)" fg:x="24712" fg:w="11"/><text x="49.8835%" y="223.50"></text></g><g><title>main`alloc::fmt::format::format_inner (18 samples, 0.04%)</title><rect x="49.6214%" y="277" width="0.0362%" height="15" fill="rgb(241,228,46)" fg:x="24706" fg:w="18"/><text x="49.8714%" y="287.50"></text></g><g><title>main`core::fmt::write (14 samples, 0.03%)</title><rect x="49.6294%" y="261" width="0.0281%" height="15" fill="rgb(223,209,38)" fg:x="24710" fg:w="14"/><text x="49.8794%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.02%)</title><rect x="49.6596%" y="245" width="0.0181%" height="15" fill="rgb(236,164,45)" fg:x="24725" fg:w="9"/><text x="49.9096%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.02%)</title><rect x="49.6596%" y="229" width="0.0181%" height="15" fill="rgb(231,15,5)" fg:x="24725" fg:w="9"/><text x="49.9096%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="49.6596%" y="213" width="0.0181%" height="15" fill="rgb(252,35,15)" fg:x="24725" fg:w="9"/><text x="49.9096%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="49.6596%" y="197" width="0.0181%" height="15" fill="rgb(248,181,18)" fg:x="24725" fg:w="9"/><text x="49.9096%" y="207.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.02%)</title><rect x="49.6576%" y="277" width="0.0221%" height="15" fill="rgb(233,39,42)" fg:x="24724" fg:w="11"/><text x="49.9076%" y="287.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="49.6576%" y="261" width="0.0221%" height="15" fill="rgb(238,110,33)" fg:x="24724" fg:w="11"/><text x="49.9076%" y="271.50"></text></g><g><title>main`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="49.6796%" y="277" width="0.0121%" height="15" fill="rgb(233,195,10)" fg:x="24735" fg:w="6"/><text x="49.9296%" y="287.50"></text></g><g><title>main`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="49.6817%" y="261" width="0.0100%" height="15" fill="rgb(254,105,3)" fg:x="24736" fg:w="5"/><text x="49.9317%" y="271.50"></text></g><g><title>main`&lt;tokenizers::models::wordpiece::WordPiece as tokenizers::tokenizer::Model&gt;::tokenize (71 samples, 0.14%)</title><rect x="49.5511%" y="293" width="0.1426%" height="15" fill="rgb(221,225,9)" fg:x="24671" fg:w="71"/><text x="49.8011%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode_single_sequence (680 samples, 1.37%)</title><rect x="48.3300%" y="341" width="1.3658%" height="15" fill="rgb(224,227,45)" fg:x="24063" fg:w="680"/><text x="48.5800%" y="351.50"></text></g><g><title>main`tokenizers::tokenizer::pre_tokenizer::PreTokenizedString::tokenize (74 samples, 0.15%)</title><rect x="49.5471%" y="325" width="0.1486%" height="15" fill="rgb(229,198,43)" fg:x="24669" fg:w="74"/><text x="49.7971%" y="335.50"></text></g><g><title>main`&lt;tokenizers::models::ModelWrapper as tokenizers::tokenizer::Model&gt;::tokenize (74 samples, 0.15%)</title><rect x="49.5471%" y="309" width="0.1486%" height="15" fill="rgb(206,209,35)" fg:x="24669" fg:w="74"/><text x="49.7971%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="49.7299%" y="245" width="0.0121%" height="15" fill="rgb(245,195,53)" fg:x="24760" fg:w="6"/><text x="49.9799%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="49.7299%" y="229" width="0.0121%" height="15" fill="rgb(240,92,26)" fg:x="24760" fg:w="6"/><text x="49.9799%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="49.7299%" y="213" width="0.0121%" height="15" fill="rgb(207,40,23)" fg:x="24760" fg:w="6"/><text x="49.9799%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="49.7299%" y="197" width="0.0121%" height="15" fill="rgb(223,111,35)" fg:x="24760" fg:w="6"/><text x="49.9799%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.02%)</title><rect x="49.7580%" y="213" width="0.0241%" height="15" fill="rgb(229,147,28)" fg:x="24774" fg:w="12"/><text x="50.0080%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (12 samples, 0.02%)</title><rect x="49.7580%" y="197" width="0.0241%" height="15" fill="rgb(211,29,28)" fg:x="24774" fg:w="12"/><text x="50.0080%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="49.7620%" y="181" width="0.0201%" height="15" fill="rgb(228,72,33)" fg:x="24776" fg:w="10"/><text x="50.0120%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="49.7620%" y="165" width="0.0201%" height="15" fill="rgb(205,214,31)" fg:x="24776" fg:w="10"/><text x="50.0120%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="49.7660%" y="149" width="0.0161%" height="15" fill="rgb(224,111,15)" fg:x="24778" fg:w="8"/><text x="50.0160%" y="159.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="49.7439%" y="245" width="0.0422%" height="15" fill="rgb(253,21,26)" fg:x="24767" fg:w="21"/><text x="49.9939%" y="255.50"></text></g><g><title>main`&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="49.7499%" y="229" width="0.0362%" height="15" fill="rgb(245,139,43)" fg:x="24770" fg:w="18"/><text x="49.9999%" y="239.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.08%)</title><rect x="49.7078%" y="277" width="0.0823%" height="15" fill="rgb(252,170,7)" fg:x="24749" fg:w="41"/><text x="49.9578%" y="287.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (33 samples, 0.07%)</title><rect x="49.7238%" y="261" width="0.0663%" height="15" fill="rgb(231,118,14)" fg:x="24757" fg:w="33"/><text x="49.9738%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="49.8022%" y="229" width="0.0121%" height="15" fill="rgb(238,83,0)" fg:x="24796" fg:w="6"/><text x="50.0522%" y="239.50"></text></g><g><title>main`&lt;tokenizers::processors::PostProcessorWrapper as tokenizers::tokenizer::PostProcessor&gt;::process_encodings (57 samples, 0.11%)</title><rect x="49.7037%" y="309" width="0.1145%" height="15" fill="rgb(221,39,39)" fg:x="24747" fg:w="57"/><text x="49.9537%" y="319.50"></text></g><g><title>main`&lt;tokenizers::processors::template::TemplateProcessing as tokenizers::tokenizer::PostProcessor&gt;::process_encodings (56 samples, 0.11%)</title><rect x="49.7058%" y="293" width="0.1125%" height="15" fill="rgb(222,119,46)" fg:x="24748" fg:w="56"/><text x="49.9558%" y="303.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;tokenizers::tokenizer::encoding::Encoding&gt; (14 samples, 0.03%)</title><rect x="49.7901%" y="277" width="0.0281%" height="15" fill="rgb(222,165,49)" fg:x="24790" fg:w="14"/><text x="50.0401%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="49.7901%" y="261" width="0.0281%" height="15" fill="rgb(219,113,52)" fg:x="24790" fg:w="14"/><text x="50.0401%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="49.7941%" y="245" width="0.0241%" height="15" fill="rgb(214,7,15)" fg:x="24792" fg:w="12"/><text x="50.0441%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.8423%" y="277" width="0.0121%" height="15" fill="rgb(235,32,4)" fg:x="24816" fg:w="6"/><text x="50.0923%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="49.8443%" y="261" width="0.0100%" height="15" fill="rgb(238,90,54)" fg:x="24817" fg:w="5"/><text x="50.0943%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.8805%" y="197" width="0.0121%" height="15" fill="rgb(213,208,19)" fg:x="24835" fg:w="6"/><text x="50.1305%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (13 samples, 0.03%)</title><rect x="49.8805%" y="213" width="0.0261%" height="15" fill="rgb(233,156,4)" fg:x="24835" fg:w="13"/><text x="50.1305%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (17 samples, 0.03%)</title><rect x="49.8745%" y="229" width="0.0341%" height="15" fill="rgb(207,194,5)" fg:x="24832" fg:w="17"/><text x="50.1245%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.04%)</title><rect x="49.8745%" y="245" width="0.0382%" height="15" fill="rgb(206,111,30)" fg:x="24832" fg:w="19"/><text x="50.1245%" y="255.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.05%)</title><rect x="49.8604%" y="277" width="0.0542%" height="15" fill="rgb(243,70,54)" fg:x="24825" fg:w="27"/><text x="50.1104%" y="287.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (22 samples, 0.04%)</title><rect x="49.8705%" y="261" width="0.0442%" height="15" fill="rgb(242,28,8)" fg:x="24830" fg:w="22"/><text x="50.1205%" y="271.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::merge (46 samples, 0.09%)</title><rect x="49.8243%" y="309" width="0.0924%" height="15" fill="rgb(219,106,18)" fg:x="24807" fg:w="46"/><text x="50.0743%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::merge_with (40 samples, 0.08%)</title><rect x="49.8363%" y="293" width="0.0803%" height="15" fill="rgb(244,222,10)" fg:x="24813" fg:w="40"/><text x="50.0863%" y="303.50"></text></g><g><title>main`tokenizers::tokenizer::encoding::Encoding::set_sequence_id (5 samples, 0.01%)</title><rect x="49.9187%" y="309" width="0.0100%" height="15" fill="rgb(236,179,52)" fg:x="24854" fg:w="5"/><text x="50.1687%" y="319.50"></text></g><g><title>main`tokenizers::tokenizer::PostProcessor::process (116 samples, 0.23%)</title><rect x="49.6977%" y="325" width="0.2330%" height="15" fill="rgb(213,23,39)" fg:x="24744" fg:w="116"/><text x="49.9477%" y="335.50"></text></g><g><title>main`tokenizers::utils::padding::pad_encodings (7 samples, 0.01%)</title><rect x="49.9347%" y="325" width="0.0141%" height="15" fill="rgb(238,48,10)" fg:x="24862" fg:w="7"/><text x="50.1847%" y="335.50"></text></g><g><title>main`tokenizers::utils::parallelism::get_parallelism (6 samples, 0.01%)</title><rect x="49.9367%" y="309" width="0.0121%" height="15" fill="rgb(251,196,23)" fg:x="24863" fg:w="6"/><text x="50.1867%" y="319.50"></text></g><g><title>main`std::env::_var (6 samples, 0.01%)</title><rect x="49.9367%" y="293" width="0.0121%" height="15" fill="rgb(250,152,24)" fg:x="24863" fg:w="6"/><text x="50.1867%" y="303.50"></text></g><g><title>main`std::env::_var_os (6 samples, 0.01%)</title><rect x="49.9367%" y="277" width="0.0121%" height="15" fill="rgb(209,150,17)" fg:x="24863" fg:w="6"/><text x="50.1867%" y="287.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::post_process (128 samples, 0.26%)</title><rect x="49.6957%" y="341" width="0.2571%" height="15" fill="rgb(234,202,34)" fg:x="24743" fg:w="128"/><text x="49.9457%" y="351.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (814 samples, 1.63%)</title><rect x="48.3219%" y="373" width="1.6349%" height="15" fill="rgb(253,148,53)" fg:x="24059" fg:w="814"/><text x="48.5719%" y="383.50"></text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode (810 samples, 1.63%)</title><rect x="48.3300%" y="357" width="1.6269%" height="15" fill="rgb(218,129,16)" fg:x="24063" fg:w="810"/><text x="48.5800%" y="367.50"></text></g><g><title>main`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,731 samples, 3.48%)</title><rect x="46.4822%" y="453" width="3.4767%" height="15" fill="rgb(216,85,19)" fg:x="23143" fg:w="1731"/><text x="46.7322%" y="463.50">mai..</text></g><g><title>main`std::panicking::try (1,663 samples, 3.34%)</title><rect x="46.6187%" y="437" width="3.3401%" height="15" fill="rgb(235,228,7)" fg:x="23211" fg:w="1663"/><text x="46.8687%" y="447.50">mai..</text></g><g><title>main`rayon_core::join::join_context::_{{closure}} (894 samples, 1.80%)</title><rect x="48.1632%" y="421" width="1.7956%" height="15" fill="rgb(245,175,0)" fg:x="23980" fg:w="894"/><text x="48.4132%" y="431.50">m..</text></g><g><title>main`std::panicking::try (818 samples, 1.64%)</title><rect x="48.3159%" y="405" width="1.6429%" height="15" fill="rgb(208,168,36)" fg:x="24056" fg:w="818"/><text x="48.5659%" y="415.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (815 samples, 1.64%)</title><rect x="48.3219%" y="389" width="1.6369%" height="15" fill="rgb(246,171,24)" fg:x="24059" fg:w="815"/><text x="48.5719%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="49.9950%" y="437" width="0.0100%" height="15" fill="rgb(215,142,24)" fg:x="24892" fg:w="5"/><text x="50.2450%" y="447.50"></text></g><g><title>main`crossbeam_epoch::internal::Global::collect (34 samples, 0.07%)</title><rect x="50.1798%" y="389" width="0.0683%" height="15" fill="rgb(250,187,7)" fg:x="24984" fg:w="34"/><text x="50.4298%" y="399.50"></text></g><g><title>main`crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (31 samples, 0.06%)</title><rect x="50.1858%" y="373" width="0.0623%" height="15" fill="rgb(228,66,33)" fg:x="24987" fg:w="31"/><text x="50.4358%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (7 samples, 0.01%)</title><rect x="50.2340%" y="357" width="0.0141%" height="15" fill="rgb(234,215,21)" fg:x="25011" fg:w="7"/><text x="50.4840%" y="367.50"></text></g><g><title>main`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (122 samples, 0.25%)</title><rect x="50.0050%" y="437" width="0.2450%" height="15" fill="rgb(222,191,20)" fg:x="24897" fg:w="122"/><text x="50.2550%" y="447.50"></text></g><g><title>main`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (90 samples, 0.18%)</title><rect x="50.0693%" y="421" width="0.1808%" height="15" fill="rgb(245,79,54)" fg:x="24929" fg:w="90"/><text x="50.3193%" y="431.50"></text></g><g><title>main`crossbeam_epoch::default::with_handle (62 samples, 0.12%)</title><rect x="50.1255%" y="405" width="0.1245%" height="15" fill="rgb(240,10,37)" fg:x="24957" fg:w="62"/><text x="50.3755%" y="415.50"></text></g><g><title>main`crossbeam_deque::deque::Injector&lt;T&gt;::steal (34 samples, 0.07%)</title><rect x="50.2501%" y="437" width="0.0683%" height="15" fill="rgb(214,192,32)" fg:x="25019" fg:w="34"/><text x="50.5001%" y="447.50"></text></g><g><title>main`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (51 samples, 0.10%)</title><rect x="50.3183%" y="437" width="0.1024%" height="15" fill="rgb(209,36,54)" fg:x="25053" fg:w="51"/><text x="50.5683%" y="447.50"></text></g><g><title>main`crossbeam_epoch::default::with_handle (25 samples, 0.05%)</title><rect x="50.3706%" y="421" width="0.0502%" height="15" fill="rgb(220,10,11)" fg:x="25079" fg:w="25"/><text x="50.6206%" y="431.50"></text></g><g><title>main`crossbeam_epoch::internal::Global::collect (13 samples, 0.03%)</title><rect x="50.3947%" y="405" width="0.0261%" height="15" fill="rgb(221,106,17)" fg:x="25091" fg:w="13"/><text x="50.6447%" y="415.50"></text></g><g><title>main`crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (9 samples, 0.02%)</title><rect x="50.4027%" y="389" width="0.0181%" height="15" fill="rgb(251,142,44)" fg:x="25095" fg:w="9"/><text x="50.6527%" y="399.50"></text></g><g><title>main`rayon_core::registry::WorkerThread::find_work (227 samples, 0.46%)</title><rect x="49.9789%" y="453" width="0.4559%" height="15" fill="rgb(238,13,15)" fg:x="24884" fg:w="227"/><text x="50.2289%" y="463.50"></text></g><g><title>main`crossbeam_deque::deque::Worker&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="50.4208%" y="437" width="0.0141%" height="15" fill="rgb(208,107,27)" fg:x="25104" fg:w="7"/><text x="50.6708%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (117 samples, 0.23%)</title><rect x="50.4509%" y="421" width="0.2350%" height="15" fill="rgb(205,136,37)" fg:x="25119" fg:w="117"/><text x="50.7009%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11 samples, 0.02%)</title><rect x="50.7040%" y="389" width="0.0221%" height="15" fill="rgb(250,205,27)" fg:x="25245" fg:w="11"/><text x="50.9540%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (12 samples, 0.02%)</title><rect x="50.7040%" y="405" width="0.0241%" height="15" fill="rgb(210,80,43)" fg:x="25245" fg:w="12"/><text x="50.9540%" y="415.50"></text></g><g><title>main`rayon_core::sleep::Sleep::sleep (148 samples, 0.30%)</title><rect x="50.4348%" y="453" width="0.2973%" height="15" fill="rgb(247,160,36)" fg:x="25111" fg:w="148"/><text x="50.6848%" y="463.50"></text></g><g><title>main`std::sync::condvar::Condvar::wait (144 samples, 0.29%)</title><rect x="50.4429%" y="437" width="0.2892%" height="15" fill="rgb(234,13,49)" fg:x="25115" fg:w="144"/><text x="50.6929%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (23 samples, 0.05%)</title><rect x="50.6859%" y="421" width="0.0462%" height="15" fill="rgb(234,122,0)" fg:x="25236" fg:w="23"/><text x="50.9359%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (37 samples, 0.07%)</title><rect x="50.7461%" y="421" width="0.0743%" height="15" fill="rgb(207,146,38)" fg:x="25266" fg:w="37"/><text x="50.9961%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6 samples, 0.01%)</title><rect x="50.8205%" y="421" width="0.0121%" height="15" fill="rgb(207,177,25)" fg:x="25303" fg:w="6"/><text x="51.0705%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (6 samples, 0.01%)</title><rect x="50.8205%" y="405" width="0.0121%" height="15" fill="rgb(211,178,42)" fg:x="25303" fg:w="6"/><text x="51.0705%" y="415.50"></text></g><g><title>main`rayon_core::registry::WorkerThread::wait_until_cold (3,791 samples, 7.61%)</title><rect x="43.2204%" y="469" width="7.6141%" height="15" fill="rgb(230,69,54)" fg:x="21519" fg:w="3791"/><text x="43.4704%" y="479.50">main`rayon..</text></g><g><title>main`rayon_core::sleep::Sleep::wake_any_threads (51 samples, 0.10%)</title><rect x="50.7321%" y="453" width="0.1024%" height="15" fill="rgb(214,135,41)" fg:x="25259" fg:w="51"/><text x="50.9821%" y="463.50"></text></g><g><title>main`rayon_core::sleep::Sleep::wake_specific_thread (45 samples, 0.09%)</title><rect x="50.7441%" y="437" width="0.0904%" height="15" fill="rgb(237,67,25)" fg:x="25265" fg:w="45"/><text x="50.9941%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (20,820 samples, 41.82%)</title><rect x="9.0221%" y="565" width="41.8165%" height="15" fill="rgb(222,189,50)" fg:x="4492" fg:w="20820"/><text x="9.2721%" y="575.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (20,820 samples, 41.82%)</title><rect x="9.0221%" y="549" width="41.8165%" height="15" fill="rgb(245,148,34)" fg:x="4492" fg:w="20820"/><text x="9.2721%" y="559.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>main`std::sys::unix::thread::Thread::new::thread_start (3,801 samples, 7.63%)</title><rect x="43.2043%" y="533" width="7.6342%" height="15" fill="rgb(222,29,6)" fg:x="21511" fg:w="3801"/><text x="43.4543%" y="543.50">main`std::..</text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (3,801 samples, 7.63%)</title><rect x="43.2043%" y="517" width="7.6342%" height="15" fill="rgb(221,189,43)" fg:x="21511" fg:w="3801"/><text x="43.4543%" y="527.50">main`core:..</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (3,801 samples, 7.63%)</title><rect x="43.2043%" y="501" width="7.6342%" height="15" fill="rgb(207,36,27)" fg:x="21511" fg:w="3801"/><text x="43.4543%" y="511.50">main`std::..</text></g><g><title>main`rayon_core::registry::ThreadBuilder::run (3,801 samples, 7.63%)</title><rect x="43.2043%" y="485" width="7.6342%" height="15" fill="rgb(217,90,24)" fg:x="21511" fg:w="3801"/><text x="43.4543%" y="495.50">main`rayon..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__tree&lt;std::__1::__value_type&lt;int, onnx::OpSchema&gt;, std::__1::__map_value_compare&lt;int, std::__1::__value_type&lt;int, onnx::OpSchema&gt;, std::__1::less&lt;int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;int, onnx::OpSchema&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type (5 samples, 0.01%)</title><rect x="50.8426%" y="469" width="0.0100%" height="15" fill="rgb(224,66,35)" fg:x="25314" fg:w="5"/><text x="51.0926%" y="479.50"></text></g><g><title>libsystem_c.dylib`exit (8 samples, 0.02%)</title><rect x="50.8385%" y="533" width="0.0161%" height="15" fill="rgb(221,13,50)" fg:x="25312" fg:w="8"/><text x="51.0885%" y="543.50"></text></g><g><title>libsystem_c.dylib`__cxa_finalize_ranges (6 samples, 0.01%)</title><rect x="50.8426%" y="517" width="0.0121%" height="15" fill="rgb(236,68,49)" fg:x="25314" fg:w="6"/><text x="51.0926%" y="527.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::map&lt;int, onnx::OpSchema, std::__1::less&lt;int&gt;, std::__1::allocator&lt;std::__1::pair&lt;int const, onnx::OpSchema&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::map&lt;int, onnx::OpSchema, std::__1::less&lt;int&gt;, std::__1::allocator&lt;std::__1::pair&lt;int const, onnx::OpSchema&gt; &gt; &gt; &gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.8426%" y="501" width="0.0121%" height="15" fill="rgb(229,146,28)" fg:x="25314" fg:w="6"/><text x="51.0926%" y="511.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::map&lt;int, onnx::OpSchema, std::__1::less&lt;int&gt;, std::__1::allocator&lt;std::__1::pair&lt;int const, onnx::OpSchema&gt; &gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::map&lt;int, onnx::OpSchema, std::__1::less&lt;int&gt;, std::__1::allocator&lt;std::__1::pair&lt;int const, onnx::OpSchema&gt; &gt; &gt; &gt; &gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.8426%" y="485" width="0.0121%" height="15" fill="rgb(225,31,38)" fg:x="25314" fg:w="6"/><text x="51.0926%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="50.8707%" y="469" width="0.0181%" height="15" fill="rgb(250,208,3)" fg:x="25328" fg:w="9"/><text x="51.1207%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="50.8888%" y="469" width="0.0121%" height="15" fill="rgb(246,54,23)" fg:x="25337" fg:w="6"/><text x="51.1388%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (19 samples, 0.04%)</title><rect x="50.9008%" y="469" width="0.0382%" height="15" fill="rgb(243,76,11)" fg:x="25343" fg:w="19"/><text x="51.1508%" y="479.50"></text></g><g><title>main`__rdl_dealloc (24 samples, 0.05%)</title><rect x="50.9410%" y="469" width="0.0482%" height="15" fill="rgb(245,21,50)" fg:x="25363" fg:w="24"/><text x="51.1910%" y="479.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`char const* google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed&lt;float&gt;(char const*, int, google::protobuf::RepeatedField (12 samples, 0.02%)</title><rect x="51.2001%" y="213" width="0.0241%" height="15" fill="rgb(228,9,43)" fg:x="25492" fg:w="12"/><text x="51.4501%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (6 samples, 0.01%)</title><rect x="51.2121%" y="197" width="0.0121%" height="15" fill="rgb(208,100,47)" fg:x="25498" fg:w="6"/><text x="51.4621%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (54 samples, 0.11%)</title><rect x="51.2242%" y="197" width="0.1085%" height="15" fill="rgb(232,26,8)" fg:x="25504" fg:w="54"/><text x="51.4742%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (54 samples, 0.11%)</title><rect x="51.2242%" y="181" width="0.1085%" height="15" fill="rgb(216,166,38)" fg:x="25504" fg:w="54"/><text x="51.4742%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(char const*, int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (99 samples, 0.20%)</title><rect x="51.2242%" y="213" width="0.1988%" height="15" fill="rgb(251,202,51)" fg:x="25504" fg:w="99"/><text x="51.4742%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::internal::EpsCopyInputStream::Next (44 samples, 0.09%)</title><rect x="51.3346%" y="197" width="0.0884%" height="15" fill="rgb(254,216,34)" fg:x="25559" fg:w="44"/><text x="51.5846%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::io::CopyingInputStreamAdaptor::Next (44 samples, 0.09%)</title><rect x="51.3346%" y="181" width="0.0884%" height="15" fill="rgb(251,32,27)" fg:x="25559" fg:w="44"/><text x="51.5846%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`read (44 samples, 0.09%)</title><rect x="51.3346%" y="165" width="0.0884%" height="15" fill="rgb(208,127,28)" fg:x="25559" fg:w="44"/><text x="51.5846%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Model::Load (124 samples, 0.25%)</title><rect x="51.1960%" y="325" width="0.2491%" height="15" fill="rgb(224,137,22)" fg:x="25490" fg:w="124"/><text x="51.4460%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::MessageLite::ParseFromZeroCopyStream (124 samples, 0.25%)</title><rect x="51.1960%" y="309" width="0.2491%" height="15" fill="rgb(254,70,32)" fg:x="25490" fg:w="124"/><text x="51.4460%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::ModelProto::_InternalParse (122 samples, 0.25%)</title><rect x="51.2001%" y="293" width="0.2450%" height="15" fill="rgb(229,75,37)" fg:x="25492" fg:w="122"/><text x="51.4501%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::internal::ParseContext::ParseMessage (122 samples, 0.25%)</title><rect x="51.2001%" y="277" width="0.2450%" height="15" fill="rgb(252,64,23)" fg:x="25492" fg:w="122"/><text x="51.4501%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::GraphProto::_InternalParse (122 samples, 0.25%)</title><rect x="51.2001%" y="261" width="0.2450%" height="15" fill="rgb(232,162,48)" fg:x="25492" fg:w="122"/><text x="51.4501%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::internal::ParseContext::ParseMessage (122 samples, 0.25%)</title><rect x="51.2001%" y="245" width="0.2450%" height="15" fill="rgb(246,160,12)" fg:x="25492" fg:w="122"/><text x="51.4501%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::TensorProto::_InternalParse (122 samples, 0.25%)</title><rect x="51.2001%" y="229" width="0.2450%" height="15" fill="rgb(247,166,0)" fg:x="25492" fg:w="122"/><text x="51.4501%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`google::protobuf::internal::InlineGreedyStringParser(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="51.4230%" y="213" width="0.0221%" height="15" fill="rgb(249,219,21)" fg:x="25603" fg:w="11"/><text x="51.6730%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::assign (11 samples, 0.02%)</title><rect x="51.4230%" y="197" width="0.0221%" height="15" fill="rgb(205,209,3)" fg:x="25603" fg:w="11"/><text x="51.6730%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (11 samples, 0.02%)</title><rect x="51.4230%" y="181" width="0.0221%" height="15" fill="rgb(243,44,1)" fg:x="25603" fg:w="11"/><text x="51.6730%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (11 samples, 0.02%)</title><rect x="51.4230%" y="165" width="0.0221%" height="15" fill="rgb(206,159,16)" fg:x="25603" fg:w="11"/><text x="51.6730%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`(anonymous namespace)::CreateSessionAndLoadModel(OrtSessionOptions const*, OrtEnv const*, char const*, void const*, unsigned long, std::__1::unique_ptr&lt;onnxruntime::InferenceSession, std::__1::default_delete (130 samples, 0.26%)</title><rect x="51.1880%" y="437" width="0.2611%" height="15" fill="rgb(244,77,30)" fg:x="25486" fg:w="130"/><text x="51.4380%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::Load(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (129 samples, 0.26%)</title><rect x="51.1900%" y="421" width="0.2591%" height="15" fill="rgb(218,69,12)" fg:x="25487" fg:w="129"/><text x="51.4400%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::LoadOnnxModel(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (129 samples, 0.26%)</title><rect x="51.1900%" y="405" width="0.2591%" height="15" fill="rgb(212,87,7)" fg:x="25487" fg:w="129"/><text x="51.4400%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::LoadWithLoader(std::__1::function&lt;onnxruntime::common::Status (std::__1::shared_ptr&lt;onnxruntime::Model&gt;&amp;)&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (129 samples, 0.26%)</title><rect x="51.1900%" y="389" width="0.2591%" height="15" fill="rgb(245,114,25)" fg:x="25487" fg:w="129"/><text x="51.4400%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::InferenceSession::LoadOnnxModel(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;)::$_3, std::__1::allocator&lt;onnxruntime::InferenceSession::LoadOnnxModel(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;)::$_3&gt;, onnxruntime::common::Status (std::__1::shared_ptr&lt;onnxruntime::Model&gt;&amp;)&gt;::operator()(std::__1::shared_ptr (128 samples, 0.26%)</title><rect x="51.1920%" y="373" width="0.2571%" height="15" fill="rgb(210,61,42)" fg:x="25488" fg:w="128"/><text x="51.4420%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Model::Load(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::shared_ptr&lt;onnxruntime::Model&gt;&amp;, std::__1::list&lt;std::__1::shared_ptr&lt;onnxruntime::IOnnxRuntimeOpSchemaCollection&gt;, std::__1::allocator&lt;std::__1::shared_ptr (128 samples, 0.26%)</title><rect x="51.1920%" y="357" width="0.2571%" height="15" fill="rgb(211,52,33)" fg:x="25488" fg:w="128"/><text x="51.4420%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Model::Load(int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::shared_ptr&lt;onnxruntime::Model&gt;&amp;, std::__1::list&lt;std::__1::shared_ptr&lt;onnxruntime::IOnnxRuntimeOpSchemaCollection&gt;, std::__1::allocator&lt;std::__1::shared_ptr (128 samples, 0.26%)</title><rect x="51.1920%" y="341" width="0.2571%" height="15" fill="rgb(234,58,33)" fg:x="25488" fg:w="128"/><text x="51.4420%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Graph::BuildConnections(std::__1::unordered_set&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="51.4672%" y="341" width="0.0100%" height="15" fill="rgb(220,115,36)" fg:x="25625" fg:w="5"/><text x="51.7172%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Graph::PopulateNodeArgToProducerConsumerLookupsFromNodes (5 samples, 0.01%)</title><rect x="51.4672%" y="325" width="0.0100%" height="15" fill="rgb(243,153,54)" fg:x="25625" fg:w="5"/><text x="51.7172%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Graph::Resolve (19 samples, 0.04%)</title><rect x="51.4672%" y="357" width="0.0382%" height="15" fill="rgb(251,47,18)" fg:x="25625" fg:w="19"/><text x="51.7172%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Graph::PerformTypeAndShapeInferencing (10 samples, 0.02%)</title><rect x="51.4853%" y="341" width="0.0201%" height="15" fill="rgb(242,102,42)" fg:x="25634" fg:w="10"/><text x="51.7353%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Graph::VerifyNodeAndOpMatch (10 samples, 0.02%)</title><rect x="51.4853%" y="325" width="0.0201%" height="15" fill="rgb(234,31,38)" fg:x="25634" fg:w="10"/><text x="51.7353%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::TransformGraph (34 samples, 0.07%)</title><rect x="51.4531%" y="405" width="0.0683%" height="15" fill="rgb(221,117,51)" fg:x="25618" fg:w="34"/><text x="51.7031%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::GraphTransformerManager::ApplyTransformers (32 samples, 0.06%)</title><rect x="51.4571%" y="389" width="0.0643%" height="15" fill="rgb(212,20,18)" fg:x="25620" fg:w="32"/><text x="51.7071%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::GraphTransformer::Apply (32 samples, 0.06%)</title><rect x="51.4571%" y="373" width="0.0643%" height="15" fill="rgb(245,133,36)" fg:x="25620" fg:w="32"/><text x="51.7071%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::KernelRegistryManager::RegisterKernels (8 samples, 0.02%)</title><rect x="51.5214%" y="405" width="0.0161%" height="15" fill="rgb(212,6,19)" fg:x="25652" fg:w="8"/><text x="51.7714%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::CPUExecutionProvider::GetKernelRegistry (8 samples, 0.02%)</title><rect x="51.5214%" y="389" width="0.0161%" height="15" fill="rgb(218,1,36)" fg:x="25652" fg:w="8"/><text x="51.7714%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::RegisterCPUKernels (8 samples, 0.02%)</title><rect x="51.5214%" y="373" width="0.0161%" height="15" fill="rgb(246,84,54)" fg:x="25652" fg:w="8"/><text x="51.7714%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmPackB(CBLAS_TRANSPOSE, unsigned long, unsigned long, float const*, unsigned long, void*) (9 samples, 0.02%)</title><rect x="51.5435%" y="309" width="0.0181%" height="15" fill="rgb(242,110,6)" fg:x="25663" fg:w="9"/><text x="51.7935%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmCopyPackB(float*, float const*, unsigned long, unsigned long, unsigned long) (8 samples, 0.02%)</title><rect x="51.5455%" y="293" width="0.0161%" height="15" fill="rgb(214,47,5)" fg:x="25664" fg:w="8"/><text x="51.7955%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::MatMul&lt;float&gt;::PrePack(onnxruntime::Tensor const&amp;, int, std::__1::shared_ptr (13 samples, 0.03%)</title><rect x="51.5435%" y="341" width="0.0261%" height="15" fill="rgb(218,159,25)" fg:x="25663" fg:w="13"/><text x="51.7935%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::GemmPackBFp32(std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt;&amp;, onnxruntime::Tensor const&amp;, bool, std::__1::unique_ptr (13 samples, 0.03%)</title><rect x="51.5435%" y="325" width="0.0261%" height="15" fill="rgb(215,211,28)" fg:x="25663" fg:w="13"/><text x="51.7935%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmPackB(CBLAS_TRANSPOSE, unsigned long, unsigned long, float const*, unsigned long, void*) (5 samples, 0.01%)</title><rect x="51.5696%" y="309" width="0.0100%" height="15" fill="rgb(238,59,32)" fg:x="25676" fg:w="5"/><text x="51.8196%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmCopyPackB(float*, float const*, unsigned long, unsigned long, unsigned long) (5 samples, 0.01%)</title><rect x="51.5696%" y="293" width="0.0100%" height="15" fill="rgb(226,82,3)" fg:x="25676" fg:w="5"/><text x="51.8196%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::PrePack(onnxruntime::Tensor const&amp;, int, std::__1::shared_ptr (9 samples, 0.02%)</title><rect x="51.5696%" y="341" width="0.0181%" height="15" fill="rgb(240,164,32)" fg:x="25676" fg:w="9"/><text x="51.8196%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::IsPackWeightsSuccessful(int, std::__1::shared_ptr (9 samples, 0.02%)</title><rect x="51.5696%" y="325" width="0.0181%" height="15" fill="rgb(232,46,7)" fg:x="25676" fg:w="9"/><text x="51.8196%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::PrepackConstantInitializedTensors(onnxruntime::InlinedHashMap&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, unsigned long, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, OrtValue const*, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (23 samples, 0.05%)</title><rect x="51.5435%" y="373" width="0.0462%" height="15" fill="rgb(229,129,53)" fg:x="25663" fg:w="23"/><text x="51.7935%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::PrepackConstantInitializedTensors(onnxruntime::InlinedHashMap&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, unsigned long, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, OrtValue const*, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, OrtValue const*&gt; &gt; &gt; const&amp;)::$_2::operator() (23 samples, 0.05%)</title><rect x="51.5435%" y="357" width="0.0462%" height="15" fill="rgb(234,188,29)" fg:x="25663" fg:w="23"/><text x="51.7935%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (47 samples, 0.09%)</title><rect x="51.5977%" y="277" width="0.0944%" height="15" fill="rgb(246,141,4)" fg:x="25690" fg:w="47"/><text x="51.8477%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::TensorProtoToTensor (52 samples, 0.10%)</title><rect x="51.5897%" y="357" width="0.1044%" height="15" fill="rgb(229,23,39)" fg:x="25686" fg:w="52"/><text x="51.8397%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::common::Status onnxruntime::utils::UnpackTensor&lt;float&gt; (52 samples, 0.10%)</title><rect x="51.5897%" y="341" width="0.1044%" height="15" fill="rgb(206,12,3)" fg:x="25686" fg:w="52"/><text x="51.8397%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`(anonymous namespace)::UnpackTensorWithRawDataImpl (48 samples, 0.10%)</title><rect x="51.5977%" y="325" width="0.0964%" height="15" fill="rgb(252,226,20)" fg:x="25690" fg:w="48"/><text x="51.8477%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::ReadLittleEndian(unsigned long, gsl::span&lt;unsigned char const, 18446744073709551615ul&gt;, gsl::span (48 samples, 0.10%)</title><rect x="51.5977%" y="309" width="0.0964%" height="15" fill="rgb(216,123,35)" fg:x="25690" fg:w="48"/><text x="51.8477%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::detail::CopyLittleEndian(unsigned long, gsl::span&lt;unsigned char const, 18446744073709551615ul&gt;, gsl::span (48 samples, 0.10%)</title><rect x="51.5977%" y="293" width="0.0964%" height="15" fill="rgb(212,68,40)" fg:x="25690" fg:w="48"/><text x="51.8477%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::session_state_utils::SaveInitializedTensors(onnxruntime::Env const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::GraphViewer const&amp;, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt; const&amp;, onnxruntime::OrtValueNameIdxMap const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;, onnxruntime::ITensorAllocator&amp;, std::__1::function&lt;onnxruntime::common::Status (std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, int, OrtValue const&amp;, onnxruntime::OrtCallback const&amp;, bool, bool)&gt; const&amp;, onnxruntime::logging::Logger const&amp;, onnxruntime::DataTransferManager const&amp;, onnxruntime::ExecutionPlanBase const&amp;, onnxruntime::SessionOptions const&amp;, std::__1::function&lt;void  (56 samples, 0.11%)</title><rect x="51.5897%" y="373" width="0.1125%" height="15" fill="rgb(254,125,32)" fg:x="25686" fg:w="56"/><text x="51.8397%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtApis::CreateSession (257 samples, 0.52%)</title><rect x="51.1880%" y="453" width="0.5162%" height="15" fill="rgb(253,97,22)" fg:x="25486" fg:w="257"/><text x="51.4380%" y="463.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`(anonymous namespace)::InitializeSession(OrtSessionOptions const*, std::__1::unique_ptr&lt;onnxruntime::InferenceSession, std::__1::default_delete (127 samples, 0.26%)</title><rect x="51.4491%" y="437" width="0.2551%" height="15" fill="rgb(241,101,14)" fg:x="25616" fg:w="127"/><text x="51.6991%" y="447.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::Initialize (127 samples, 0.26%)</title><rect x="51.4491%" y="421" width="0.2551%" height="15" fill="rgb(238,103,29)" fg:x="25616" fg:w="127"/><text x="51.6991%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::FinalizeSessionState(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (83 samples, 0.17%)</title><rect x="51.5375%" y="405" width="0.1667%" height="15" fill="rgb(233,195,47)" fg:x="25660" fg:w="83"/><text x="51.7875%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::FinalizeSessionStateImpl(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::KernelRegistryManager const&amp;, onnxruntime::Node const*, onnxruntime::SessionOptions const&amp;, bool, onnxruntime::InlinedHashMap&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, unsigned long, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;&amp;, onnxruntime::InlinedHashMap&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, OrtDevice, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (82 samples, 0.16%)</title><rect x="51.5395%" y="389" width="0.1647%" height="15" fill="rgb(246,218,30)" fg:x="25661" fg:w="82"/><text x="51.7895%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (25 samples, 0.05%)</title><rect x="51.7042%" y="453" width="0.0502%" height="15" fill="rgb(219,145,47)" fg:x="25743" fg:w="25"/><text x="51.9542%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_size (70 samples, 0.14%)</title><rect x="51.9372%" y="437" width="0.1406%" height="15" fill="rgb(243,12,26)" fg:x="25859" fg:w="70"/><text x="52.1872%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (54 samples, 0.11%)</title><rect x="52.0778%" y="437" width="0.1085%" height="15" fill="rgb(214,87,16)" fg:x="25929" fg:w="54"/><text x="52.3278%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.07%)</title><rect x="52.1119%" y="421" width="0.0743%" height="15" fill="rgb(208,99,42)" fg:x="25946" fg:w="37"/><text x="52.3619%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (222 samples, 0.45%)</title><rect x="51.7544%" y="453" width="0.4459%" height="15" fill="rgb(253,99,2)" fg:x="25768" fg:w="222"/><text x="52.0044%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="52.1862%" y="437" width="0.0141%" height="15" fill="rgb(220,168,23)" fg:x="25983" fg:w="7"/><text x="52.4362%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (90 samples, 0.18%)</title><rect x="52.6924%" y="437" width="0.1808%" height="15" fill="rgb(242,38,24)" fg:x="26235" fg:w="90"/><text x="52.9424%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.02%)</title><rect x="52.8812%" y="437" width="0.0181%" height="15" fill="rgb(225,182,9)" fg:x="26329" fg:w="9"/><text x="53.1312%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (393 samples, 0.79%)</title><rect x="52.2003%" y="453" width="0.7893%" height="15" fill="rgb(243,178,37)" fg:x="25990" fg:w="393"/><text x="52.4503%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (45 samples, 0.09%)</title><rect x="52.8992%" y="437" width="0.0904%" height="15" fill="rgb(232,139,19)" fg:x="26338" fg:w="45"/><text x="53.1492%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (52 samples, 0.10%)</title><rect x="52.9896%" y="453" width="0.1044%" height="15" fill="rgb(225,201,24)" fg:x="26383" fg:w="52"/><text x="53.2396%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.03%)</title><rect x="53.1041%" y="453" width="0.0261%" height="15" fill="rgb(221,47,46)" fg:x="26440" fg:w="13"/><text x="53.3541%" y="463.50"></text></g><g><title>main`__rdl_alloc (24 samples, 0.05%)</title><rect x="53.1443%" y="453" width="0.0482%" height="15" fill="rgb(249,23,13)" fg:x="26460" fg:w="24"/><text x="53.3943%" y="463.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::MatMul&lt;float&gt;::~MatMul (6 samples, 0.01%)</title><rect x="53.2025%" y="357" width="0.0121%" height="15" fill="rgb(219,9,5)" fg:x="26489" fg:w="6"/><text x="53.4525%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::~Attention (5 samples, 0.01%)</title><rect x="53.2146%" y="357" width="0.0100%" height="15" fill="rgb(254,171,16)" fg:x="26495" fg:w="5"/><text x="53.4646%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::~Attention (5 samples, 0.01%)</title><rect x="53.2146%" y="341" width="0.0100%" height="15" fill="rgb(230,171,20)" fg:x="26495" fg:w="5"/><text x="53.4646%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_large (5 samples, 0.01%)</title><rect x="53.2146%" y="325" width="0.0100%" height="15" fill="rgb(210,71,41)" fg:x="26495" fg:w="5"/><text x="53.4646%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (5 samples, 0.01%)</title><rect x="53.2146%" y="309" width="0.0100%" height="15" fill="rgb(206,173,20)" fg:x="26495" fg:w="5"/><text x="53.4646%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (5 samples, 0.01%)</title><rect x="53.2146%" y="293" width="0.0100%" height="15" fill="rgb(233,88,34)" fg:x="26495" fg:w="5"/><text x="53.4646%" y="303.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;ort::session::Session&gt; (16 samples, 0.03%)</title><rect x="53.2005%" y="453" width="0.0321%" height="15" fill="rgb(223,209,46)" fg:x="26488" fg:w="16"/><text x="53.4505%" y="463.50"></text></g><g><title>main`alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.03%)</title><rect x="53.2005%" y="437" width="0.0321%" height="15" fill="rgb(250,43,18)" fg:x="26488" fg:w="16"/><text x="53.4505%" y="447.50"></text></g><g><title>main`&lt;ort::session::SessionPointerHolder as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="53.2005%" y="421" width="0.0321%" height="15" fill="rgb(208,13,10)" fg:x="26488" fg:w="16"/><text x="53.4505%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::~InferenceSession (16 samples, 0.03%)</title><rect x="53.2005%" y="405" width="0.0321%" height="15" fill="rgb(212,200,36)" fg:x="26488" fg:w="16"/><text x="53.4505%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::~InferenceSession (16 samples, 0.03%)</title><rect x="53.2005%" y="389" width="0.0321%" height="15" fill="rgb(225,90,30)" fg:x="26488" fg:w="16"/><text x="53.4505%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::~SessionState (15 samples, 0.03%)</title><rect x="53.2025%" y="373" width="0.0301%" height="15" fill="rgb(236,182,39)" fg:x="26489" fg:w="15"/><text x="53.4525%" y="383.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;tokenizers::tokenizer::Tokenizer&gt; (12 samples, 0.02%)</title><rect x="53.2326%" y="453" width="0.0241%" height="15" fill="rgb(212,144,35)" fg:x="26504" fg:w="12"/><text x="53.4826%" y="463.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;tokenizers::models::ModelWrapper&gt; (12 samples, 0.02%)</title><rect x="53.2326%" y="437" width="0.0241%" height="15" fill="rgb(228,63,44)" fg:x="26504" fg:w="12"/><text x="53.4826%" y="447.50"></text></g><g><title>main`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="53.2367%" y="421" width="0.0201%" height="15" fill="rgb(228,109,6)" fg:x="26506" fg:w="10"/><text x="53.4867%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="53.2387%" y="405" width="0.0181%" height="15" fill="rgb(238,117,24)" fg:x="26507" fg:w="9"/><text x="53.4887%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="53.2427%" y="389" width="0.0141%" height="15" fill="rgb(242,26,26)" fg:x="26509" fg:w="7"/><text x="53.4927%" y="399.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="53.3049%" y="437" width="0.0100%" height="15" fill="rgb(221,92,48)" fg:x="26540" fg:w="5"/><text x="53.5549%" y="447.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="53.3331%" y="421" width="0.0161%" height="15" fill="rgb(209,209,32)" fg:x="26554" fg:w="8"/><text x="53.5831%" y="431.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="53.3511%" y="421" width="0.0141%" height="15" fill="rgb(221,70,22)" fg:x="26563" fg:w="7"/><text x="53.6011%" y="431.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="53.3532%" y="405" width="0.0121%" height="15" fill="rgb(248,145,5)" fg:x="26564" fg:w="6"/><text x="53.6032%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.01%)</title><rect x="53.3532%" y="389" width="0.0121%" height="15" fill="rgb(226,116,26)" fg:x="26564" fg:w="6"/><text x="53.6032%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.01%)</title><rect x="53.3532%" y="373" width="0.0121%" height="15" fill="rgb(244,5,17)" fg:x="26564" fg:w="6"/><text x="53.6032%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::InitOrtValue(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, OrtValue&amp;, long, gsl::span (6 samples, 0.01%)</title><rect x="53.4094%" y="373" width="0.0121%" height="15" fill="rgb(252,159,33)" fg:x="26592" fg:w="6"/><text x="53.6594%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`CreateTensorImpl(onnxruntime::DataTypeImpl const*, long long const*, unsigned long, OrtMemoryInfo const*, void*, unsigned long, OrtValue&amp;) (14 samples, 0.03%)</title><rect x="53.3953%" y="389" width="0.0281%" height="15" fill="rgb(206,71,0)" fg:x="26585" fg:w="14"/><text x="53.6453%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtApis::CreateTensorWithDataAsOrtValue (16 samples, 0.03%)</title><rect x="53.3933%" y="405" width="0.0321%" height="15" fill="rgb(233,118,54)" fg:x="26584" fg:w="16"/><text x="53.6433%" y="415.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::as_standard_layout (9 samples, 0.02%)</title><rect x="53.4315%" y="405" width="0.0181%" height="15" fill="rgb(234,83,48)" fg:x="26603" fg:w="9"/><text x="53.6815%" y="415.50"></text></g><g><title>main`ort::error::status_to_result (9 samples, 0.02%)</title><rect x="53.4496%" y="405" width="0.0181%" height="15" fill="rgb(228,3,54)" fg:x="26612" fg:w="9"/><text x="53.6996%" y="415.50"></text></g><g><title>main`ort::error::_&lt;impl core::convert::From&lt;ort::error::OrtStatusWrapper&gt; for core::result::Result&lt;(),ort::error::OrtApiError&gt;&gt;::from (8 samples, 0.02%)</title><rect x="53.4516%" y="389" width="0.0161%" height="15" fill="rgb(226,155,13)" fg:x="26613" fg:w="8"/><text x="53.7016%" y="399.50"></text></g><g><title>main`ort::ort (6 samples, 0.01%)</title><rect x="53.4556%" y="373" width="0.0121%" height="15" fill="rgb(241,28,37)" fg:x="26615" fg:w="6"/><text x="53.7056%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (5 samples, 0.01%)</title><rect x="53.4576%" y="357" width="0.0100%" height="15" fill="rgb(233,93,10)" fg:x="26616" fg:w="5"/><text x="53.7076%" y="367.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 0.16%)</title><rect x="53.3150%" y="437" width="0.1607%" height="15" fill="rgb(225,113,19)" fg:x="26545" fg:w="80"/><text x="53.5650%" y="447.50"></text></g><g><title>main`ort::value::Value::from_array (49 samples, 0.10%)</title><rect x="53.3773%" y="421" width="0.0984%" height="15" fill="rgb(241,2,18)" fg:x="26576" fg:w="49"/><text x="53.6273%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.02%)</title><rect x="53.4857%" y="357" width="0.0181%" height="15" fill="rgb(228,207,21)" fg:x="26630" fg:w="9"/><text x="53.7357%" y="367.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__shared_ptr_pointer&lt;void*, void (*)(void*), std::__1::allocator&lt;void&gt; &gt;::__on_zero_shared (23 samples, 0.05%)</title><rect x="53.4857%" y="405" width="0.0462%" height="15" fill="rgb(213,211,35)" fg:x="26630" fg:w="23"/><text x="53.7357%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (23 samples, 0.05%)</title><rect x="53.4857%" y="389" width="0.0462%" height="15" fill="rgb(209,83,10)" fg:x="26630" fg:w="23"/><text x="53.7357%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::~Tensor (23 samples, 0.05%)</title><rect x="53.4857%" y="373" width="0.0462%" height="15" fill="rgb(209,164,1)" fg:x="26630" fg:w="23"/><text x="53.7357%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_large (13 samples, 0.03%)</title><rect x="53.5058%" y="357" width="0.0261%" height="15" fill="rgb(213,184,43)" fg:x="26640" fg:w="13"/><text x="53.7558%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (11 samples, 0.02%)</title><rect x="53.5098%" y="341" width="0.0221%" height="15" fill="rgb(231,61,34)" fg:x="26642" fg:w="11"/><text x="53.7598%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.02%)</title><rect x="53.5098%" y="325" width="0.0221%" height="15" fill="rgb(235,75,3)" fg:x="26642" fg:w="11"/><text x="53.7598%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtApis::ReleaseValue (24 samples, 0.05%)</title><rect x="53.4857%" y="421" width="0.0482%" height="15" fill="rgb(220,106,47)" fg:x="26630" fg:w="24"/><text x="53.7357%" y="431.50"></text></g><g><title>main`&lt;ort::value::Value as core::ops::drop::Drop&gt;::drop (26 samples, 0.05%)</title><rect x="53.4837%" y="437" width="0.0522%" height="15" fill="rgb(210,196,33)" fg:x="26629" fg:w="26"/><text x="53.7337%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="53.5540%" y="421" width="0.0261%" height="15" fill="rgb(229,154,42)" fg:x="26664" fg:w="13"/><text x="53.8040%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.02%)</title><rect x="53.5600%" y="405" width="0.0201%" height="15" fill="rgb(228,114,26)" fg:x="26667" fg:w="10"/><text x="53.8100%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.02%)</title><rect x="53.5620%" y="389" width="0.0181%" height="15" fill="rgb(208,144,1)" fg:x="26668" fg:w="9"/><text x="53.8120%" y="399.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;tokenizers::tokenizer::encoding::Encoding&gt; (41 samples, 0.08%)</title><rect x="53.5500%" y="437" width="0.0823%" height="15" fill="rgb(239,112,37)" fg:x="26662" fg:w="41"/><text x="53.8000%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.05%)</title><rect x="53.5821%" y="421" width="0.0502%" height="15" fill="rgb(210,96,50)" fg:x="26678" fg:w="25"/><text x="53.8321%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="53.5942%" y="405" width="0.0382%" height="15" fill="rgb(222,178,2)" fg:x="26684" fg:w="19"/><text x="53.8442%" y="415.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (13 samples, 0.03%)</title><rect x="53.6424%" y="437" width="0.0261%" height="15" fill="rgb(226,74,18)" fg:x="26708" fg:w="13"/><text x="53.8924%" y="447.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::iter (5 samples, 0.01%)</title><rect x="53.6785%" y="421" width="0.0100%" height="15" fill="rgb(225,67,54)" fg:x="26726" fg:w="5"/><text x="53.9285%" y="431.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::to_owned (16 samples, 0.03%)</title><rect x="53.6685%" y="437" width="0.0321%" height="15" fill="rgb(251,92,32)" fg:x="26721" fg:w="16"/><text x="53.9185%" y="447.50"></text></g><g><title>main`ndarray::iterators::to_vec_mapped (6 samples, 0.01%)</title><rect x="53.6886%" y="421" width="0.0121%" height="15" fill="rgb(228,149,22)" fg:x="26731" fg:w="6"/><text x="53.9386%" y="431.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (9 samples, 0.02%)</title><rect x="53.7408%" y="421" width="0.0181%" height="15" fill="rgb(243,54,13)" fg:x="26757" fg:w="9"/><text x="53.9908%" y="431.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Div&lt;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::div (27 samples, 0.05%)</title><rect x="53.7066%" y="437" width="0.0542%" height="15" fill="rgb(243,180,28)" fg:x="26740" fg:w="27"/><text x="53.9566%" y="447.50"></text></g><g><title>main`ndarray::impl_constructors::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::build_uninit (92 samples, 0.18%)</title><rect x="53.7689%" y="405" width="0.1848%" height="15" fill="rgb(208,167,24)" fg:x="26771" fg:w="92"/><text x="54.0189%" y="415.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2,PLast),D&gt;::collect_with_partial (86 samples, 0.17%)</title><rect x="53.7810%" y="389" width="0.1727%" height="15" fill="rgb(245,73,45)" fg:x="26777" fg:w="86"/><text x="54.0310%" y="399.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::mul (98 samples, 0.20%)</title><rect x="53.7609%" y="437" width="0.1968%" height="15" fill="rgb(237,203,48)" fg:x="26767" fg:w="98"/><text x="54.0109%" y="447.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2),D&gt;::map_collect (94 samples, 0.19%)</title><rect x="53.7689%" y="421" width="0.1888%" height="15" fill="rgb(211,197,16)" fg:x="26771" fg:w="94"/><text x="54.0189%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`calloc (5 samples, 0.01%)</title><rect x="53.9959%" y="421" width="0.0100%" height="15" fill="rgb(243,99,51)" fg:x="26884" fg:w="5"/><text x="54.2459%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (5 samples, 0.01%)</title><rect x="53.9959%" y="405" width="0.0100%" height="15" fill="rgb(215,123,29)" fg:x="26884" fg:w="5"/><text x="54.2459%" y="415.50"></text></g><g><title>main`ndarray::iterators::lanes::Lanes&lt;A,D&gt;::new (5 samples, 0.01%)</title><rect x="54.0501%" y="405" width="0.0100%" height="15" fill="rgb(239,186,37)" fg:x="26911" fg:w="5"/><text x="54.3001%" y="415.50"></text></g><g><title>main`ndarray::ArrayBase&lt;S,D&gt;::try_remove_axis (5 samples, 0.01%)</title><rect x="54.0501%" y="389" width="0.0100%" height="15" fill="rgb(252,136,39)" fg:x="26911" fg:w="5"/><text x="54.3001%" y="399.50"></text></g><g><title>main`ndarray::iterators::lanes::LanesMut&lt;A,D&gt;::new (6 samples, 0.01%)</title><rect x="54.0601%" y="405" width="0.0121%" height="15" fill="rgb(223,213,32)" fg:x="26916" fg:w="6"/><text x="54.3101%" y="415.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,),D&gt;::and (13 samples, 0.03%)</title><rect x="54.0802%" y="405" width="0.0261%" height="15" fill="rgb(233,115,5)" fg:x="26926" fg:w="13"/><text x="54.3302%" y="415.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (29 samples, 0.06%)</title><rect x="54.1063%" y="405" width="0.0582%" height="15" fill="rgb(207,226,44)" fg:x="26939" fg:w="29"/><text x="54.3563%" y="415.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (76 samples, 0.15%)</title><rect x="54.0180%" y="421" width="0.1526%" height="15" fill="rgb(208,126,0)" fg:x="26895" fg:w="76"/><text x="54.2680%" y="431.50"></text></g><g><title>main`ndarray::numeric::impl_numeric::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::sum_axis (111 samples, 0.22%)</title><rect x="53.9577%" y="437" width="0.2229%" height="15" fill="rgb(244,66,21)" fg:x="26865" fg:w="111"/><text x="54.2077%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (5 samples, 0.01%)</title><rect x="54.2429%" y="389" width="0.0100%" height="15" fill="rgb(222,97,12)" fg:x="27007" fg:w="5"/><text x="54.4929%" y="399.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (5 samples, 0.01%)</title><rect x="54.2429%" y="373" width="0.0100%" height="15" fill="rgb(219,213,19)" fg:x="27007" fg:w="5"/><text x="54.4929%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::FeedsFetchesManager::FeedsFetchesManager (5 samples, 0.01%)</title><rect x="54.2710%" y="389" width="0.0100%" height="15" fill="rgb(252,169,30)" fg:x="27021" fg:w="5"/><text x="54.5210%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.02%)</title><rect x="54.3172%" y="293" width="0.0161%" height="15" fill="rgb(206,32,51)" fg:x="27044" fg:w="8"/><text x="54.5672%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashMapPolicy&lt;OrtDevice, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, absl::lts_20220623::hash_internal::Hash&lt;OrtDevice&gt;, std::__1::equal_to&lt;OrtDevice&gt;, std::__1::allocator&lt;std::__1::pair&lt;OrtDevice const, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::destroy_slots (11 samples, 0.02%)</title><rect x="54.3172%" y="309" width="0.0221%" height="15" fill="rgb(250,172,42)" fg:x="27044" fg:w="11"/><text x="54.5672%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`absl::lts_20220623::inlined_vector_internal::Storage&lt;OrtValue, 2ul, std::__1::allocator&lt;OrtValue&gt; &gt;::DestroyContents (10 samples, 0.02%)</title><rect x="54.3393%" y="309" width="0.0201%" height="15" fill="rgb(209,34,43)" fg:x="27055" fg:w="10"/><text x="54.5893%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::~ExecutionFrame (22 samples, 0.04%)</title><rect x="54.3172%" y="325" width="0.0442%" height="15" fill="rgb(223,11,35)" fg:x="27044" fg:w="22"/><text x="54.5672%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`float const* onnxruntime::Tensor::Data&lt;float&gt; (6 samples, 0.01%)</title><rect x="54.5924%" y="277" width="0.0121%" height="15" fill="rgb(251,219,26)" fg:x="27181" fg:w="6"/><text x="54.8424%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (6 samples, 0.01%)</title><rect x="54.6105%" y="197" width="0.0121%" height="15" fill="rgb(231,119,3)" fg:x="27190" fg:w="6"/><text x="54.8605%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (6 samples, 0.01%)</title><rect x="54.6105%" y="181" width="0.0121%" height="15" fill="rgb(216,97,11)" fg:x="27190" fg:w="6"/><text x="54.8605%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (8 samples, 0.02%)</title><rect x="54.6105%" y="261" width="0.0161%" height="15" fill="rgb(223,59,9)" fg:x="27190" fg:w="8"/><text x="54.8605%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (8 samples, 0.02%)</title><rect x="54.6105%" y="245" width="0.0161%" height="15" fill="rgb(233,93,31)" fg:x="27190" fg:w="8"/><text x="54.8605%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (8 samples, 0.02%)</title><rect x="54.6105%" y="229" width="0.0161%" height="15" fill="rgb(239,81,33)" fg:x="27190" fg:w="8"/><text x="54.8605%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (8 samples, 0.02%)</title><rect x="54.6105%" y="213" width="0.0161%" height="15" fill="rgb(213,120,34)" fg:x="27190" fg:w="8"/><text x="54.8605%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::(anonymous namespace)::Cast::Compute (21 samples, 0.04%)</title><rect x="54.6105%" y="277" width="0.0422%" height="15" fill="rgb(243,49,53)" fg:x="27190" fg:w="21"/><text x="54.8605%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::utils::MLTypeCallDispatcher&lt;bool, int, long long, float, double, unsigned long long, unsigned int, short, unsigned short, signed char, unsigned char, onnxruntime::MLFloat16, onnxruntime::BFloat16, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;::InvokeWithLeadingTemplateArgs&lt;onnxruntime::(anonymous namespace)::SrcDispatcher, onnxruntime::TypeList&lt;&gt;, onnx::TensorProto_DataType const&amp;, onnxruntime::OpKernelContext&amp;, onnxruntime::TensorShape const&amp;, onnxruntime::Tensor const&amp;, onnxruntime::Tensor&amp;&gt; (9 samples, 0.02%)</title><rect x="54.6346%" y="261" width="0.0181%" height="15" fill="rgb(247,216,33)" fg:x="27202" fg:w="9"/><text x="54.8846%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InputBroadcaster::InputBroadcaster (5 samples, 0.01%)</title><rect x="54.6627%" y="261" width="0.0100%" height="15" fill="rgb(226,26,14)" fg:x="27216" fg:w="5"/><text x="54.9127%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::BroadcastIterator::Append (6 samples, 0.01%)</title><rect x="54.7510%" y="213" width="0.0121%" height="15" fill="rgb(215,49,53)" fg:x="27260" fg:w="6"/><text x="55.0010%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void absl::lts_20220623::inlined_vector_internal::Storage&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;::Resize&lt;absl::lts_20220623::inlined_vector_internal::DefaultValueAdapter&lt;std::__1::allocator&lt;long long&gt; &gt; &gt;(absl::lts_20220623::inlined_vector_internal::DefaultValueAdapter&lt;std::__1::allocator (5 samples, 0.01%)</title><rect x="54.7752%" y="213" width="0.0100%" height="15" fill="rgb(245,162,40)" fg:x="27272" fg:w="5"/><text x="55.0252%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Broadcaster::Broadcaster(gsl::span&lt;long long const, 18446744073709551615ul&gt;, gsl::span (40 samples, 0.08%)</title><rect x="54.7249%" y="229" width="0.0803%" height="15" fill="rgb(229,68,17)" fg:x="27247" fg:w="40"/><text x="54.9749%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Ivybridge (7 samples, 0.01%)</title><rect x="54.7912%" y="213" width="0.0141%" height="15" fill="rgb(213,182,10)" fg:x="27280" fg:w="7"/><text x="55.0412%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void absl::lts_20220623::inlined_vector_internal::Storage&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;::Resize&lt;absl::lts_20220623::inlined_vector_internal::DefaultValueAdapter&lt;std::__1::allocator&lt;long long&gt; &gt; &gt;(absl::lts_20220623::inlined_vector_internal::DefaultValueAdapter&lt;std::__1::allocator (6 samples, 0.01%)</title><rect x="54.8053%" y="229" width="0.0121%" height="15" fill="rgb(245,125,30)" fg:x="27287" fg:w="6"/><text x="55.0553%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InputBroadcaster::InputBroadcaster (49 samples, 0.10%)</title><rect x="54.7209%" y="245" width="0.0984%" height="15" fill="rgb(232,202,2)" fg:x="27245" fg:w="49"/><text x="54.9709%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashMapPolicy&lt;OrtDevice, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, absl::lts_20220623::hash_internal::Hash&lt;OrtDevice&gt;, std::__1::equal_to&lt;OrtDevice&gt;, std::__1::allocator&lt;std::__1::pair&lt;OrtDevice const, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::iterator absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashMapPolicy&lt;OrtDevice, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, absl::lts_20220623::hash_internal::Hash&lt;OrtDevice&gt;, std::__1::equal_to&lt;OrtDevice&gt;, std::__1::allocator&lt;std::__1::pair&lt;OrtDevice const, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find&lt;OrtDevice&gt; (5 samples, 0.01%)</title><rect x="54.9037%" y="149" width="0.0100%" height="15" fill="rgb(237,140,51)" fg:x="27336" fg:w="5"/><text x="55.1537%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionProvider::GetAllocator (10 samples, 0.02%)</title><rect x="54.9358%" y="101" width="0.0201%" height="15" fill="rgb(236,157,25)" fg:x="27352" fg:w="10"/><text x="55.1858%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetAllocator (19 samples, 0.04%)</title><rect x="54.9198%" y="133" width="0.0382%" height="15" fill="rgb(219,209,0)" fg:x="27344" fg:w="19"/><text x="55.1698%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::SessionState::SetupAllocators()::$_0, std::__1::allocator&lt;onnxruntime::SessionState::SetupAllocators()::$_0&gt;, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt; (OrtMemType)&gt;::operator() (16 samples, 0.03%)</title><rect x="54.9258%" y="117" width="0.0321%" height="15" fill="rgb(240,116,54)" fg:x="27347" fg:w="16"/><text x="55.1758%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::GetAllocatorImpl (24 samples, 0.05%)</title><rect x="54.9198%" y="149" width="0.0482%" height="15" fill="rgb(216,10,36)" fg:x="27344" fg:w="24"/><text x="55.1698%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::SessionState::SetupAllocators()::$_0, std::__1::allocator&lt;onnxruntime::SessionState::SetupAllocators()::$_0&gt;, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt; (OrtMemType)&gt;::operator() (5 samples, 0.01%)</title><rect x="54.9579%" y="133" width="0.0100%" height="15" fill="rgb(222,72,44)" fg:x="27363" fg:w="5"/><text x="55.2079%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.02%)</title><rect x="54.9840%" y="101" width="0.0201%" height="15" fill="rgb(232,159,9)" fg:x="27376" fg:w="10"/><text x="55.2340%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="54.9860%" y="85" width="0.0181%" height="15" fill="rgb(210,39,32)" fg:x="27377" fg:w="9"/><text x="55.2360%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="54.9901%" y="69" width="0.0141%" height="15" fill="rgb(216,194,45)" fg:x="27379" fg:w="7"/><text x="55.2401%" y="79.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (15 samples, 0.03%)</title><rect x="54.9800%" y="133" width="0.0301%" height="15" fill="rgb(218,18,35)" fg:x="27374" fg:w="15"/><text x="55.2300%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.03%)</title><rect x="54.9800%" y="117" width="0.0301%" height="15" fill="rgb(207,83,51)" fg:x="27374" fg:w="15"/><text x="55.2300%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::Tensor(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, long, gsl::span (8 samples, 0.02%)</title><rect x="55.0101%" y="133" width="0.0161%" height="15" fill="rgb(225,63,43)" fg:x="27389" fg:w="8"/><text x="55.2601%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::Init(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt;, long, gsl::span (5 samples, 0.01%)</title><rect x="55.0162%" y="117" width="0.0100%" height="15" fill="rgb(207,57,36)" fg:x="27392" fg:w="5"/><text x="55.2662%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::InitOrtValue(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, OrtValue&amp;, long, gsl::span (26 samples, 0.05%)</title><rect x="54.9780%" y="149" width="0.0522%" height="15" fill="rgb(216,99,33)" fg:x="27373" fg:w="26"/><text x="55.2280%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (86 samples, 0.17%)</title><rect x="54.8675%" y="165" width="0.1727%" height="15" fill="rgb(225,42,16)" fg:x="27318" fg:w="86"/><text x="55.1175%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (107 samples, 0.21%)</title><rect x="54.8374%" y="181" width="0.2149%" height="15" fill="rgb(220,201,45)" fg:x="27303" fg:w="107"/><text x="55.0874%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (114 samples, 0.23%)</title><rect x="54.8354%" y="197" width="0.2290%" height="15" fill="rgb(225,33,4)" fg:x="27302" fg:w="114"/><text x="55.0854%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (117 samples, 0.23%)</title><rect x="54.8314%" y="213" width="0.2350%" height="15" fill="rgb(224,33,50)" fg:x="27300" fg:w="117"/><text x="55.0814%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (125 samples, 0.25%)</title><rect x="54.8193%" y="245" width="0.2511%" height="15" fill="rgb(246,198,51)" fg:x="27294" fg:w="125"/><text x="55.0693%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (123 samples, 0.25%)</title><rect x="54.8234%" y="229" width="0.2470%" height="15" fill="rgb(205,22,4)" fg:x="27296" fg:w="123"/><text x="55.0734%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const* onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (12 samples, 0.02%)</title><rect x="55.0724%" y="245" width="0.0241%" height="15" fill="rgb(206,3,8)" fg:x="27420" fg:w="12"/><text x="55.3224%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const&amp; OrtValue::Get&lt;onnxruntime::Tensor&gt; (9 samples, 0.02%)</title><rect x="55.0784%" y="229" width="0.0181%" height="15" fill="rgb(251,23,15)" fg:x="27423" fg:w="9"/><text x="55.3284%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void (8 samples, 0.02%)</title><rect x="55.0985%" y="245" width="0.0161%" height="15" fill="rgb(252,88,28)" fg:x="27433" fg:w="8"/><text x="55.3485%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Broadcaster::Broadcaster (5 samples, 0.01%)</title><rect x="55.1347%" y="213" width="0.0100%" height="15" fill="rgb(212,127,14)" fg:x="27451" fg:w="5"/><text x="55.3847%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::BroadcastIterator::BroadcastIterator (5 samples, 0.01%)</title><rect x="55.1347%" y="197" width="0.0100%" height="15" fill="rgb(247,145,37)" fg:x="27451" fg:w="5"/><text x="55.3847%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda1&apos;(onnxruntime::BroadcastHelper&amp;)::__invoke (233 samples, 0.47%)</title><rect x="55.1809%" y="197" width="0.4680%" height="15" fill="rgb(209,117,53)" fg:x="27474" fg:w="233"/><text x="55.4309%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::BroadcastIterator::AdvanceBy (11 samples, 0.02%)</title><rect x="55.6488%" y="197" width="0.0221%" height="15" fill="rgb(212,90,42)" fg:x="27707" fg:w="11"/><text x="55.8988%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::UntypedBroadcastTwo(onnxruntime::OpKernelContext&amp;, onnxruntime::ProcessBroadcastSpanFuncs const&amp;, double, void*)::$_253, std::__1::allocator&lt;onnxruntime::UntypedBroadcastTwo(onnxruntime::OpKernelContext&amp;, onnxruntime::ProcessBroadcastSpanFuncs const&amp;, double, void*)::$_253&gt;, void (long, long)&gt;::operator() (301 samples, 0.60%)</title><rect x="55.1246%" y="229" width="0.6046%" height="15" fill="rgb(218,164,37)" fg:x="27446" fg:w="301"/><text x="55.3746%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::BroadcastLooper&lt;onnxruntime::BroadcastHelper&gt; (283 samples, 0.57%)</title><rect x="55.1608%" y="213" width="0.5684%" height="15" fill="rgb(246,65,34)" fg:x="27464" fg:w="283"/><text x="55.4108%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InputBroadcaster::AdvanceBy (29 samples, 0.06%)</title><rect x="55.6709%" y="197" width="0.0582%" height="15" fill="rgb(231,100,33)" fg:x="27718" fg:w="29"/><text x="55.9209%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::BroadcastIterator::AdvanceBy (15 samples, 0.03%)</title><rect x="55.6990%" y="181" width="0.0301%" height="15" fill="rgb(228,126,14)" fg:x="27732" fg:w="15"/><text x="55.9490%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (310 samples, 0.62%)</title><rect x="55.1146%" y="245" width="0.6226%" height="15" fill="rgb(215,173,21)" fg:x="27441" fg:w="310"/><text x="55.3646%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (353 samples, 0.71%)</title><rect x="55.7613%" y="229" width="0.7090%" height="15" fill="rgb(210,6,40)" fg:x="27763" fg:w="353"/><text x="56.0113%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;void onnxruntime::ParallelizeSingleSpan&lt;onnxruntime::BroadcastHelper&gt;(onnxruntime::BroadcastHelper&amp;, onnxruntime::ProcessBroadcastSpanFuncs const&amp;)::&apos;lambda1&apos;(long, long), std::__1::allocator&lt;void onnxruntime::ParallelizeSingleSpan&lt;onnxruntime::BroadcastHelper&gt;(onnxruntime::BroadcastHelper&amp;, onnxruntime::ProcessBroadcastSpanFuncs const&amp;)::&apos;lambda1&apos;(long, long)&gt;, void (long, long)&gt;::operator() (351 samples, 0.70%)</title><rect x="55.7653%" y="213" width="0.7050%" height="15" fill="rgb(212,48,18)" fg:x="27765" fg:w="351"/><text x="56.0153%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda1&apos;(onnxruntime::BroadcastHelper&amp;)::__invoke (350 samples, 0.70%)</title><rect x="55.7673%" y="197" width="0.7030%" height="15" fill="rgb(230,214,11)" fg:x="27766" fg:w="350"/><text x="56.0173%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::BroadcastLooper&lt;onnxruntime::BroadcastHelper&gt; (358 samples, 0.72%)</title><rect x="55.7593%" y="245" width="0.7190%" height="15" fill="rgb(254,105,39)" fg:x="27762" fg:w="358"/><text x="56.0093%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::UntypedBroadcastTwo (895 samples, 1.80%)</title><rect x="54.6828%" y="261" width="1.7976%" height="15" fill="rgb(245,158,5)" fg:x="27226" fg:w="895"/><text x="54.9328%" y="271.50">l..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Add&lt;float&gt;::Compute (915 samples, 1.84%)</title><rect x="54.6526%" y="277" width="1.8378%" height="15" fill="rgb(249,208,11)" fg:x="27211" fg:w="915"/><text x="54.9026%" y="287.50">l..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.01%)</title><rect x="56.5145%" y="245" width="0.0100%" height="15" fill="rgb(210,39,28)" fg:x="28138" fg:w="5"/><text x="56.7645%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="56.5145%" y="229" width="0.0100%" height="15" fill="rgb(211,56,53)" fg:x="28138" fg:w="5"/><text x="56.7645%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtValue::Init(void*, onnxruntime::DataTypeImpl const*, void (*) (5 samples, 0.01%)</title><rect x="56.5386%" y="149" width="0.0100%" height="15" fill="rgb(226,201,30)" fg:x="28150" fg:w="5"/><text x="56.7886%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (12 samples, 0.02%)</title><rect x="56.5346%" y="165" width="0.0241%" height="15" fill="rgb(239,101,34)" fg:x="28148" fg:w="12"/><text x="56.7846%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (18 samples, 0.04%)</title><rect x="56.5245%" y="245" width="0.0362%" height="15" fill="rgb(226,209,5)" fg:x="28143" fg:w="18"/><text x="56.7745%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (18 samples, 0.04%)</title><rect x="56.5245%" y="229" width="0.0362%" height="15" fill="rgb(250,105,47)" fg:x="28143" fg:w="18"/><text x="56.7745%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (16 samples, 0.03%)</title><rect x="56.5286%" y="213" width="0.0321%" height="15" fill="rgb(230,72,3)" fg:x="28145" fg:w="16"/><text x="56.7786%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (15 samples, 0.03%)</title><rect x="56.5306%" y="197" width="0.0301%" height="15" fill="rgb(232,218,39)" fg:x="28146" fg:w="15"/><text x="56.7806%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (15 samples, 0.03%)</title><rect x="56.5306%" y="181" width="0.0301%" height="15" fill="rgb(248,166,6)" fg:x="28146" fg:w="15"/><text x="56.7806%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::GatherBase::PrepareForCompute (28 samples, 0.06%)</title><rect x="56.5145%" y="261" width="0.0562%" height="15" fill="rgb(247,89,20)" fg:x="28138" fg:w="28"/><text x="56.7645%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;onnxruntime::common::Status onnxruntime::GatherCopyData&lt;long long&gt;(onnxruntime::Tensor const*, unsigned char const*, unsigned char*, bool, unsigned long, long long, long long, long long, long long, long long, onnxruntime::TensorShape const&amp;, long long, onnxruntime::concurrency::ThreadPool*)::&apos;lambda&apos;(long, long)&amp;, long, long&gt; (131 samples, 0.26%)</title><rect x="56.5828%" y="229" width="0.2631%" height="15" fill="rgb(248,130,54)" fg:x="28172" fg:w="131"/><text x="56.8328%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (128 samples, 0.26%)</title><rect x="56.5888%" y="213" width="0.2571%" height="15" fill="rgb(234,196,4)" fg:x="28175" fg:w="128"/><text x="56.8388%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (133 samples, 0.27%)</title><rect x="56.5828%" y="245" width="0.2671%" height="15" fill="rgb(250,143,31)" fg:x="28172" fg:w="133"/><text x="56.8328%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::common::Status onnxruntime::GatherCopyData&lt;long long&gt; (140 samples, 0.28%)</title><rect x="56.5727%" y="261" width="0.2812%" height="15" fill="rgb(211,110,34)" fg:x="28167" fg:w="140"/><text x="56.8227%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Gather::Compute (179 samples, 0.36%)</title><rect x="56.5024%" y="277" width="0.3595%" height="15" fill="rgb(215,124,48)" fg:x="28132" fg:w="179"/><text x="56.7524%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::KernelScope::KernelScope (11 samples, 0.02%)</title><rect x="56.8740%" y="277" width="0.0221%" height="15" fill="rgb(216,46,13)" fg:x="28317" fg:w="11"/><text x="57.1240%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::KernelScope::~KernelScope (12 samples, 0.02%)</title><rect x="56.8961%" y="277" width="0.0241%" height="15" fill="rgb(205,184,25)" fg:x="28328" fg:w="12"/><text x="57.1461%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::GetTempSpaceAllocator(std::__1::shared_ptr (5 samples, 0.01%)</title><rect x="56.9845%" y="261" width="0.0100%" height="15" fill="rgb(228,1,10)" fg:x="28372" fg:w="5"/><text x="57.2345%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::InitOrtValue(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, OrtValue&amp;, long, gsl::span (6 samples, 0.01%)</title><rect x="57.0467%" y="165" width="0.0121%" height="15" fill="rgb(213,116,27)" fg:x="28403" fg:w="6"/><text x="57.2967%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (35 samples, 0.07%)</title><rect x="56.9945%" y="229" width="0.0703%" height="15" fill="rgb(241,95,50)" fg:x="28377" fg:w="35"/><text x="57.2445%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (33 samples, 0.07%)</title><rect x="56.9985%" y="213" width="0.0663%" height="15" fill="rgb(238,48,32)" fg:x="28379" fg:w="33"/><text x="57.2485%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (33 samples, 0.07%)</title><rect x="56.9985%" y="197" width="0.0663%" height="15" fill="rgb(235,113,49)" fg:x="28379" fg:w="33"/><text x="57.2485%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (28 samples, 0.06%)</title><rect x="57.0086%" y="181" width="0.0562%" height="15" fill="rgb(205,127,43)" fg:x="28384" fg:w="28"/><text x="57.2586%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (36 samples, 0.07%)</title><rect x="56.9945%" y="261" width="0.0723%" height="15" fill="rgb(250,162,2)" fg:x="28377" fg:w="36"/><text x="57.2445%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (36 samples, 0.07%)</title><rect x="56.9945%" y="245" width="0.0723%" height="15" fill="rgb(220,13,41)" fg:x="28377" fg:w="36"/><text x="57.2445%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (5 samples, 0.01%)</title><rect x="57.0929%" y="245" width="0.0100%" height="15" fill="rgb(249,221,25)" fg:x="28426" fg:w="5"/><text x="57.3429%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="57.1130%" y="213" width="0.0100%" height="15" fill="rgb(215,208,19)" fg:x="28436" fg:w="5"/><text x="57.3630%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (371 samples, 0.75%)</title><rect x="57.1331%" y="197" width="0.7451%" height="15" fill="rgb(236,175,2)" fg:x="28446" fg:w="371"/><text x="57.3831%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.01%)</title><rect x="57.8863%" y="165" width="0.0100%" height="15" fill="rgb(241,52,2)" fg:x="28821" fg:w="5"/><text x="58.1363%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::RunQueue&lt;std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::Tag, 1024u&gt;::PushBackWithTag(std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl (5 samples, 0.01%)</title><rect x="57.8983%" y="165" width="0.0100%" height="15" fill="rgb(248,140,14)" fg:x="28827" fg:w="5"/><text x="58.1483%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallelInternal(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, unsigned int, bool, std::__1::function&lt;void  (16 samples, 0.03%)</title><rect x="57.8823%" y="197" width="0.0321%" height="15" fill="rgb(253,22,42)" fg:x="28819" fg:w="16"/><text x="58.1323%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::ScheduleOnPreferredWorkers(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, absl::lts_20220623::InlinedVector&lt;int, 11ul, std::__1::allocator&lt;int&gt; &gt;&amp;, unsigned int, unsigned int, std::__1::function&lt;void  (14 samples, 0.03%)</title><rect x="57.8863%" y="181" width="0.0281%" height="15" fill="rgb(234,61,47)" fg:x="28821" fg:w="14"/><text x="58.1363%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2&gt;, void (long, long)&gt;::operator() (1,647 samples, 3.31%)</title><rect x="57.9244%" y="181" width="3.3080%" height="15" fill="rgb(208,226,15)" fg:x="28840" fg:w="1647"/><text x="58.1744%" y="191.50">lib..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long), std::__1::allocator&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&gt;, void (long)&gt;::operator() (1,647 samples, 3.31%)</title><rect x="57.9244%" y="165" width="3.3080%" height="15" fill="rgb(217,221,4)" fg:x="28840" fg:w="1647"/><text x="58.1744%" y="175.50">lib..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (2,048 samples, 4.11%)</title><rect x="57.1331%" y="213" width="4.1134%" height="15" fill="rgb(212,174,34)" fg:x="28446" fg:w="2048"/><text x="57.3831%" y="223.50">libo..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (1,657 samples, 3.33%)</title><rect x="57.9184%" y="197" width="3.3280%" height="15" fill="rgb(253,83,4)" fg:x="28837" fg:w="1657"/><text x="58.1684%" y="207.50">lib..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long), std::__1::allocator&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::common::Status onnxruntime::(anonymous namespace)::ComputeImpl&lt;float, float&gt;(onnxruntime::OpKernelContext*, long long, float, bool)::&apos;lambda&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&gt;, void (long)&gt;::operator() (7 samples, 0.01%)</title><rect x="61.2324%" y="181" width="0.0141%" height="15" fill="rgb(250,195,49)" fg:x="30487" fg:w="7"/><text x="61.4824%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (2,059 samples, 4.14%)</title><rect x="57.1130%" y="229" width="4.1355%" height="15" fill="rgb(241,192,25)" fg:x="28436" fg:w="2059"/><text x="57.3630%" y="239.50">libon..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (2,066 samples, 4.15%)</title><rect x="57.1030%" y="245" width="4.1495%" height="15" fill="rgb(208,124,10)" fg:x="28431" fg:w="2066"/><text x="57.3530%" y="255.50">libon..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void  (2,072 samples, 4.16%)</title><rect x="57.0929%" y="261" width="4.1616%" height="15" fill="rgb(222,33,0)" fg:x="28426" fg:w="2072"/><text x="57.3429%" y="271.50">libon..</text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="61.2645%" y="261" width="0.0281%" height="15" fill="rgb(234,209,28)" fg:x="30503" fg:w="14"/><text x="61.5145%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="61.2746%" y="245" width="0.0181%" height="15" fill="rgb(224,11,23)" fg:x="30508" fg:w="9"/><text x="61.5246%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::LayerNormImpl::Compute (2,178 samples, 4.37%)</title><rect x="56.9202%" y="277" width="4.3745%" height="15" fill="rgb(232,99,1)" fg:x="28340" fg:w="2178"/><text x="57.1702%" y="287.50">libon..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="61.3790%" y="245" width="0.0161%" height="15" fill="rgb(237,95,45)" fg:x="30560" fg:w="8"/><text x="61.6290%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="61.3790%" y="229" width="0.0161%" height="15" fill="rgb(208,109,11)" fg:x="30560" fg:w="8"/><text x="61.6290%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.02%)</title><rect x="61.3790%" y="213" width="0.0161%" height="15" fill="rgb(216,190,48)" fg:x="30560" fg:w="8"/><text x="61.6290%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="61.3810%" y="197" width="0.0141%" height="15" fill="rgb(251,171,36)" fg:x="30561" fg:w="7"/><text x="61.6310%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="61.3810%" y="181" width="0.0141%" height="15" fill="rgb(230,62,22)" fg:x="30561" fg:w="7"/><text x="61.6310%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="61.3830%" y="165" width="0.0121%" height="15" fill="rgb(225,114,35)" fg:x="30562" fg:w="6"/><text x="61.6330%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (11 samples, 0.02%)</title><rect x="61.4071%" y="229" width="0.0221%" height="15" fill="rgb(215,118,42)" fg:x="30574" fg:w="11"/><text x="61.6571%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void (5 samples, 0.01%)</title><rect x="61.4312%" y="213" width="0.0100%" height="15" fill="rgb(243,119,21)" fg:x="30586" fg:w="5"/><text x="61.6812%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="61.4413%" y="197" width="0.0181%" height="15" fill="rgb(252,177,53)" fg:x="30591" fg:w="9"/><text x="61.6913%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void (9 samples, 0.02%)</title><rect x="61.4674%" y="197" width="0.0181%" height="15" fill="rgb(237,209,29)" fg:x="30604" fg:w="9"/><text x="61.7174%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (2,350 samples, 4.72%)</title><rect x="61.4855%" y="181" width="4.7199%" height="15" fill="rgb(212,65,23)" fg:x="30613" fg:w="2350"/><text x="61.7355%" y="191.50">libon..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.01%)</title><rect x="66.2154%" y="149" width="0.0141%" height="15" fill="rgb(230,222,46)" fg:x="32968" fg:w="7"/><text x="66.4654%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="66.2154%" y="133" width="0.0141%" height="15" fill="rgb(215,135,32)" fg:x="32968" fg:w="7"/><text x="66.4654%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="66.2154%" y="117" width="0.0141%" height="15" fill="rgb(246,101,22)" fg:x="32968" fg:w="7"/><text x="66.4654%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="66.2174%" y="101" width="0.0121%" height="15" fill="rgb(206,107,13)" fg:x="32969" fg:w="6"/><text x="66.4674%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="66.2174%" y="85" width="0.0121%" height="15" fill="rgb(250,100,44)" fg:x="32969" fg:w="6"/><text x="66.4674%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="66.2194%" y="69" width="0.0100%" height="15" fill="rgb(231,147,38)" fg:x="32970" fg:w="5"/><text x="66.4694%" y="79.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallelInternal(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, unsigned int, bool, std::__1::function&lt;void  (16 samples, 0.03%)</title><rect x="66.2094%" y="181" width="0.0321%" height="15" fill="rgb(229,8,40)" fg:x="32965" fg:w="16"/><text x="66.4594%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::ScheduleOnPreferredWorkers(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, absl::lts_20220623::InlinedVector&lt;int, 11ul, std::__1::allocator&lt;int&gt; &gt;&amp;, unsigned int, unsigned int, std::__1::function&lt;void  (13 samples, 0.03%)</title><rect x="66.2154%" y="165" width="0.0261%" height="15" fill="rgb(221,135,30)" fg:x="32968" fg:w="13"/><text x="66.4654%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::RunQueue&lt;std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::Tag, 1024u&gt;::PushBackWithTag(std::__1::function&lt;void ()&gt;, onnxruntime::concurrency::ThreadPoolTempl (6 samples, 0.01%)</title><rect x="66.2295%" y="149" width="0.0121%" height="15" fill="rgb(249,193,18)" fg:x="32975" fg:w="6"/><text x="66.4795%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LProcessNextColumnLoop2xN4 (7 samples, 0.01%)</title><rect x="66.2797%" y="117" width="0.0141%" height="15" fill="rgb(209,133,39)" fg:x="33000" fg:w="7"/><text x="66.5297%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (17 samples, 0.03%)</title><rect x="66.2958%" y="117" width="0.0341%" height="15" fill="rgb(232,100,14)" fg:x="33008" fg:w="17"/><text x="66.5458%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (2,523 samples, 5.07%)</title><rect x="61.4413%" y="213" width="5.0674%" height="15" fill="rgb(224,185,1)" fg:x="30591" fg:w="2523"/><text x="61.6913%" y="223.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (2,501 samples, 5.02%)</title><rect x="61.4855%" y="197" width="5.0232%" height="15" fill="rgb(223,139,8)" fg:x="30613" fg:w="2501"/><text x="61.7355%" y="207.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (133 samples, 0.27%)</title><rect x="66.2415%" y="181" width="0.2671%" height="15" fill="rgb(232,213,38)" fg:x="32981" fg:w="133"/><text x="66.4915%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2&gt;, void (long, long)&gt;::operator() (127 samples, 0.26%)</title><rect x="66.2536%" y="165" width="0.2551%" height="15" fill="rgb(207,94,22)" fg:x="32987" fg:w="127"/><text x="66.5036%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (122 samples, 0.25%)</title><rect x="66.2636%" y="149" width="0.2450%" height="15" fill="rgb(219,183,54)" fg:x="32992" fg:w="122"/><text x="66.5136%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (119 samples, 0.24%)</title><rect x="66.2697%" y="133" width="0.2390%" height="15" fill="rgb(216,185,54)" fg:x="32995" fg:w="119"/><text x="66.5197%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmPackedOperation(CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, void const*, unsigned long, float, float*, unsigned long) (89 samples, 0.18%)</title><rect x="66.3299%" y="117" width="0.1788%" height="15" fill="rgb(254,217,39)" fg:x="33025" fg:w="89"/><text x="66.5799%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void  (2,546 samples, 5.11%)</title><rect x="61.4071%" y="245" width="5.1136%" height="15" fill="rgb(240,178,23)" fg:x="30574" fg:w="2546"/><text x="61.6571%" y="255.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (2,535 samples, 5.09%)</title><rect x="61.4292%" y="229" width="5.0915%" height="15" fill="rgb(218,11,47)" fg:x="30585" fg:w="2535"/><text x="61.6792%" y="239.50">libonn..</text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="66.5267%" y="245" width="0.0121%" height="15" fill="rgb(218,51,51)" fg:x="33123" fg:w="6"/><text x="66.7767%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="66.5288%" y="229" width="0.0100%" height="15" fill="rgb(238,126,27)" fg:x="33124" fg:w="5"/><text x="66.7788%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="66.5288%" y="213" width="0.0100%" height="15" fill="rgb(249,202,22)" fg:x="33124" fg:w="5"/><text x="66.7788%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.03%)</title><rect x="66.5508%" y="229" width="0.0281%" height="15" fill="rgb(254,195,49)" fg:x="33135" fg:w="14"/><text x="66.8008%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.04%)</title><rect x="66.5388%" y="245" width="0.0422%" height="15" fill="rgb(208,123,14)" fg:x="33129" fg:w="21"/><text x="66.7888%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (2,606 samples, 5.23%)</title><rect x="61.3549%" y="261" width="5.2341%" height="15" fill="rgb(224,200,8)" fg:x="30548" fg:w="2606"/><text x="61.6049%" y="271.50">libonn..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="66.6452%" y="181" width="0.0241%" height="15" fill="rgb(217,61,36)" fg:x="33182" fg:w="12"/><text x="66.8952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="66.6473%" y="165" width="0.0221%" height="15" fill="rgb(206,35,45)" fg:x="33183" fg:w="11"/><text x="66.8973%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="66.6573%" y="149" width="0.0121%" height="15" fill="rgb(217,65,33)" fg:x="33188" fg:w="6"/><text x="66.9073%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.03%)</title><rect x="66.6412%" y="197" width="0.0341%" height="15" fill="rgb(222,158,48)" fg:x="33180" fg:w="17"/><text x="66.8912%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (18 samples, 0.04%)</title><rect x="66.6412%" y="229" width="0.0362%" height="15" fill="rgb(254,2,54)" fg:x="33180" fg:w="18"/><text x="66.8912%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.04%)</title><rect x="66.6412%" y="213" width="0.0362%" height="15" fill="rgb(250,143,38)" fg:x="33180" fg:w="18"/><text x="66.8912%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::enable_if&lt;(__is_cpp17_forward_iterator&lt;unsigned long const*&gt;::value) &amp;&amp; (is_constructible&lt;unsigned long, std::__1::iterator_traits&lt;unsigned long const*&gt;::reference&gt;::value), void&gt;::type std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;::assign&lt;unsigned long const*&gt; (23 samples, 0.05%)</title><rect x="66.6352%" y="245" width="0.0462%" height="15" fill="rgb(248,25,0)" fg:x="33177" fg:w="23"/><text x="66.8852%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::MatMulComputeHelper::Compute (40 samples, 0.08%)</title><rect x="66.6031%" y="261" width="0.0803%" height="15" fill="rgb(206,152,27)" fg:x="33161" fg:w="40"/><text x="66.8531%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="66.6975%" y="245" width="0.0100%" height="15" fill="rgb(240,77,30)" fg:x="33208" fg:w="5"/><text x="66.9475%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="66.7396%" y="213" width="0.0100%" height="15" fill="rgb(231,5,3)" fg:x="33229" fg:w="5"/><text x="66.9896%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.05%)</title><rect x="66.7075%" y="245" width="0.0462%" height="15" fill="rgb(207,226,32)" fg:x="33213" fg:w="23"/><text x="66.9575%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.04%)</title><rect x="66.7175%" y="229" width="0.0362%" height="15" fill="rgb(222,207,47)" fg:x="33218" fg:w="18"/><text x="66.9675%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::MatMulComputeHelper::~MatMulComputeHelper (38 samples, 0.08%)</title><rect x="66.6834%" y="261" width="0.0763%" height="15" fill="rgb(229,115,45)" fg:x="33201" fg:w="38"/><text x="66.9334%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionProvider::GetAllocator (5 samples, 0.01%)</title><rect x="66.8581%" y="117" width="0.0100%" height="15" fill="rgb(224,191,6)" fg:x="33288" fg:w="5"/><text x="67.1081%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetAllocator (13 samples, 0.03%)</title><rect x="66.8481%" y="149" width="0.0261%" height="15" fill="rgb(230,227,24)" fg:x="33283" fg:w="13"/><text x="67.0981%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::SessionState::SetupAllocators()::$_0, std::__1::allocator&lt;onnxruntime::SessionState::SetupAllocators()::$_0&gt;, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt; (OrtMemType)&gt;::operator() (9 samples, 0.02%)</title><rect x="66.8561%" y="133" width="0.0181%" height="15" fill="rgb(228,80,19)" fg:x="33287" fg:w="9"/><text x="67.1061%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::GetAllocatorImpl (14 samples, 0.03%)</title><rect x="66.8481%" y="165" width="0.0281%" height="15" fill="rgb(247,229,0)" fg:x="33283" fg:w="14"/><text x="67.0981%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="66.8843%" y="149" width="0.0121%" height="15" fill="rgb(237,194,15)" fg:x="33301" fg:w="6"/><text x="67.1343%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="66.8863%" y="133" width="0.0100%" height="15" fill="rgb(219,203,20)" fg:x="33302" fg:w="5"/><text x="67.1363%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.01%)</title><rect x="66.8863%" y="117" width="0.0100%" height="15" fill="rgb(234,128,8)" fg:x="33302" fg:w="5"/><text x="67.1363%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="66.8863%" y="101" width="0.0100%" height="15" fill="rgb(248,202,8)" fg:x="33302" fg:w="5"/><text x="67.1363%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="66.8863%" y="85" width="0.0100%" height="15" fill="rgb(206,104,37)" fg:x="33302" fg:w="5"/><text x="67.1363%" y="95.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::Tensor(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, long, gsl::span (7 samples, 0.01%)</title><rect x="66.8983%" y="149" width="0.0141%" height="15" fill="rgb(223,8,27)" fg:x="33308" fg:w="7"/><text x="67.1483%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::InitOrtValue(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, OrtValue&amp;, long, gsl::span (16 samples, 0.03%)</title><rect x="66.8822%" y="165" width="0.0321%" height="15" fill="rgb(216,217,28)" fg:x="33300" fg:w="16"/><text x="67.1322%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (61 samples, 0.12%)</title><rect x="66.7979%" y="181" width="0.1225%" height="15" fill="rgb(249,199,1)" fg:x="33258" fg:w="61"/><text x="67.0479%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (72 samples, 0.14%)</title><rect x="66.7778%" y="197" width="0.1446%" height="15" fill="rgb(240,85,17)" fg:x="33248" fg:w="72"/><text x="67.0278%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (83 samples, 0.17%)</title><rect x="66.7637%" y="229" width="0.1667%" height="15" fill="rgb(206,108,45)" fg:x="33241" fg:w="83"/><text x="67.0137%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (76 samples, 0.15%)</title><rect x="66.7778%" y="213" width="0.1526%" height="15" fill="rgb(245,210,41)" fg:x="33248" fg:w="76"/><text x="67.0278%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (86 samples, 0.17%)</title><rect x="66.7597%" y="261" width="0.1727%" height="15" fill="rgb(206,13,37)" fg:x="33239" fg:w="86"/><text x="67.0097%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (85 samples, 0.17%)</title><rect x="66.7617%" y="245" width="0.1707%" height="15" fill="rgb(250,61,18)" fg:x="33240" fg:w="85"/><text x="67.0117%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const* onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (8 samples, 0.02%)</title><rect x="66.9385%" y="261" width="0.0161%" height="15" fill="rgb(235,172,48)" fg:x="33328" fg:w="8"/><text x="67.1885%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="66.9786%" y="261" width="0.0241%" height="15" fill="rgb(249,201,17)" fg:x="33348" fg:w="12"/><text x="67.2286%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.02%)</title><rect x="67.0148%" y="245" width="0.0161%" height="15" fill="rgb(219,208,6)" fg:x="33366" fg:w="8"/><text x="67.2648%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="67.0349%" y="245" width="0.0121%" height="15" fill="rgb(248,31,23)" fg:x="33376" fg:w="6"/><text x="67.2849%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.05%)</title><rect x="67.0028%" y="261" width="0.0482%" height="15" fill="rgb(245,15,42)" fg:x="33360" fg:w="24"/><text x="67.2528%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::MatMul&lt;float&gt;::Compute (2,870 samples, 5.76%)</title><rect x="61.2947%" y="277" width="5.7643%" height="15" fill="rgb(222,217,39)" fg:x="30518" fg:w="2870"/><text x="61.5447%" y="287.50">libonnx..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernel::KernelDef (15 samples, 0.03%)</title><rect x="67.0630%" y="277" width="0.0301%" height="15" fill="rgb(210,219,27)" fg:x="33390" fg:w="15"/><text x="67.3130%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::NodeIndexInfo::GetNodeOffset (6 samples, 0.01%)</title><rect x="67.1233%" y="261" width="0.0121%" height="15" fill="rgb(252,166,36)" fg:x="33420" fg:w="6"/><text x="67.3733%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::NodeIndexInfo::GetNodeOffset (11 samples, 0.02%)</title><rect x="67.1775%" y="245" width="0.0221%" height="15" fill="rgb(245,132,34)" fg:x="33447" fg:w="11"/><text x="67.4275%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContextInternal::OpKernelContextInternal (53 samples, 0.11%)</title><rect x="67.1052%" y="277" width="0.1064%" height="15" fill="rgb(236,54,3)" fg:x="33411" fg:w="53"/><text x="67.3552%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OpKernelContext (35 samples, 0.07%)</title><rect x="67.1413%" y="261" width="0.0703%" height="15" fill="rgb(241,173,43)" fg:x="33429" fg:w="35"/><text x="67.3913%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelInfo::GetKernelDef (13 samples, 0.03%)</title><rect x="67.2116%" y="277" width="0.0261%" height="15" fill="rgb(215,190,9)" fg:x="33464" fg:w="13"/><text x="67.4616%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (6 samples, 0.01%)</title><rect x="67.2478%" y="229" width="0.0121%" height="15" fill="rgb(242,101,16)" fg:x="33482" fg:w="6"/><text x="67.4978%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (6 samples, 0.01%)</title><rect x="67.2478%" y="213" width="0.0121%" height="15" fill="rgb(223,190,21)" fg:x="33482" fg:w="6"/><text x="67.4978%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (6 samples, 0.01%)</title><rect x="67.2478%" y="197" width="0.0121%" height="15" fill="rgb(215,228,25)" fg:x="33482" fg:w="6"/><text x="67.4978%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (6 samples, 0.01%)</title><rect x="67.2478%" y="181" width="0.0121%" height="15" fill="rgb(225,36,22)" fg:x="33482" fg:w="6"/><text x="67.4978%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (6 samples, 0.01%)</title><rect x="67.2478%" y="165" width="0.0121%" height="15" fill="rgb(251,106,46)" fg:x="33482" fg:w="6"/><text x="67.4978%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (5 samples, 0.01%)</title><rect x="67.2498%" y="149" width="0.0100%" height="15" fill="rgb(208,90,1)" fg:x="33483" fg:w="5"/><text x="67.4998%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OptimizeShapeForFastReduce(gsl::span&lt;long long const, 18446744073709551615ul&gt;, gsl::span&lt;long long const, 18446744073709551615ul&gt;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator (9 samples, 0.02%)</title><rect x="67.2598%" y="229" width="0.0181%" height="15" fill="rgb(243,10,4)" fg:x="33488" fg:w="9"/><text x="67.5098%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashSetPolicy&lt;long long&gt;, absl::lts_20220623::hash_internal::Hash&lt;long long&gt;, std::__1::equal_to&lt;long long&gt;, std::__1::allocator&lt;long long&gt; &gt;::prepare_insert (5 samples, 0.01%)</title><rect x="67.2679%" y="213" width="0.0100%" height="15" fill="rgb(212,137,27)" fg:x="33492" fg:w="5"/><text x="67.5179%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ReduceSum&lt;int&gt;::Compute (27 samples, 0.05%)</title><rect x="67.2377%" y="277" width="0.0542%" height="15" fill="rgb(231,220,49)" fg:x="33477" fg:w="27"/><text x="67.4877%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::CommonReduce1Loop&lt;onnxruntime::ReduceAggregatorSum&lt;int&gt; &gt;(onnxruntime::OpKernelContext*, gsl::span (25 samples, 0.05%)</title><rect x="67.2418%" y="261" width="0.0502%" height="15" fill="rgb(237,96,20)" fg:x="33479" fg:w="25"/><text x="67.4918%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::CommonFastReduceSwitch(onnxruntime::OpKernelContext*, gsl::span&lt;long long const, 18446744073709551615ul&gt; const&amp;, long long, bool, onnxruntime::FastReduceKind&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, onnxruntime::FastReduceKind, void (*)(onnxruntime::Tensor const&amp;, gsl::span&lt;long long const, 18446744073709551615ul&gt; const&amp;, onnxruntime::Tensor&amp;, onnxruntime::concurrency::ThreadPool*), void (*)(onnxruntime::Tensor const&amp;, gsl::span&lt;long long const, 18446744073709551615ul&gt; const&amp;, onnxruntime::Tensor&amp;, onnxruntime::concurrency::ThreadPool*), void (*)(onnxruntime::Tensor const&amp;, gsl::span&lt;long long const, 18446744073709551615ul&gt; const&amp;, onnxruntime::Tensor&amp;, onnxruntime::concurrency::ThreadPool*), void (*)(onnxruntime::Tensor const&amp;, gsl::span (25 samples, 0.05%)</title><rect x="67.2418%" y="245" width="0.0502%" height="15" fill="rgb(239,229,30)" fg:x="33479" fg:w="25"/><text x="67.4918%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ReduceAggregatorSum&lt;int&gt;::FastReduceKR(onnxruntime::Tensor const&amp;, gsl::span (7 samples, 0.01%)</title><rect x="67.2779%" y="229" width="0.0141%" height="15" fill="rgb(219,65,33)" fg:x="33497" fg:w="7"/><text x="67.5279%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetExecutionPlan (5 samples, 0.01%)</title><rect x="67.2920%" y="277" width="0.0100%" height="15" fill="rgb(243,134,7)" fg:x="33504" fg:w="5"/><text x="67.5420%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (5 samples, 0.01%)</title><rect x="67.3040%" y="245" width="0.0100%" height="15" fill="rgb(216,177,54)" fg:x="33510" fg:w="5"/><text x="67.5540%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (5 samples, 0.01%)</title><rect x="67.3040%" y="229" width="0.0100%" height="15" fill="rgb(211,160,20)" fg:x="33510" fg:w="5"/><text x="67.5540%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (5 samples, 0.01%)</title><rect x="67.3040%" y="213" width="0.0100%" height="15" fill="rgb(239,85,39)" fg:x="33510" fg:w="5"/><text x="67.5540%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (5 samples, 0.01%)</title><rect x="67.3040%" y="197" width="0.0100%" height="15" fill="rgb(232,125,22)" fg:x="33510" fg:w="5"/><text x="67.5540%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output(int, std::initializer_list (7 samples, 0.01%)</title><rect x="67.3040%" y="261" width="0.0141%" height="15" fill="rgb(244,57,34)" fg:x="33510" fg:w="7"/><text x="67.5540%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Shape::Compute (9 samples, 0.02%)</title><rect x="67.3020%" y="277" width="0.0181%" height="15" fill="rgb(214,203,32)" fg:x="33509" fg:w="9"/><text x="67.5520%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SliceBase::FillVectorsFromInput(onnxruntime::Tensor const&amp;, onnxruntime::Tensor const&amp;, onnxruntime::Tensor const*, onnxruntime::Tensor const*, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator&lt;long long&gt; &gt;&amp;, absl::lts_20220623::InlinedVector&lt;long long, 5ul, std::__1::allocator (5 samples, 0.01%)</title><rect x="67.3342%" y="245" width="0.0100%" height="15" fill="rgb(207,58,43)" fg:x="33525" fg:w="5"/><text x="67.5842%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SliceBase::PrepareForCompute(gsl::span&lt;long long const, 18446744073709551615ul&gt;, gsl::span&lt;long long const, 18446744073709551615ul&gt;, gsl::span&lt;long long const, 18446744073709551615ul&gt;, gsl::span (7 samples, 0.01%)</title><rect x="67.3442%" y="245" width="0.0141%" height="15" fill="rgb(215,193,15)" fg:x="33530" fg:w="7"/><text x="67.5942%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SliceBase::Compute (29 samples, 0.06%)</title><rect x="67.3201%" y="261" width="0.0582%" height="15" fill="rgb(232,15,44)" fg:x="33518" fg:w="29"/><text x="67.5701%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Slice10::Compute (30 samples, 0.06%)</title><rect x="67.3201%" y="277" width="0.0603%" height="15" fill="rgb(212,3,48)" fg:x="33518" fg:w="30"/><text x="67.5701%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::ReleaseMLValueImpl (6 samples, 0.01%)</title><rect x="67.4567%" y="261" width="0.0121%" height="15" fill="rgb(218,128,7)" fg:x="33586" fg:w="6"/><text x="67.7067%" y="271.50"></text></g><g><title>libc+ (7 samples, 0.01%)</title><rect x="67.4687%" y="229" width="0.0141%" height="15" fill="rgb(226,216,39)" fg:x="33592" fg:w="7"/><text x="67.7187%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::__shared_weak_count::__release_weak (8 samples, 0.02%)</title><rect x="67.4828%" y="229" width="0.0161%" height="15" fill="rgb(243,47,51)" fg:x="33599" fg:w="8"/><text x="67.7328%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::TraceFree (9 samples, 0.02%)</title><rect x="67.4988%" y="229" width="0.0181%" height="15" fill="rgb(241,183,40)" fg:x="33607" fg:w="9"/><text x="67.7488%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::~Tensor (9 samples, 0.02%)</title><rect x="67.5410%" y="197" width="0.0181%" height="15" fill="rgb(231,217,32)" fg:x="33628" fg:w="9"/><text x="67.7910%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.01%)</title><rect x="67.5691%" y="165" width="0.0100%" height="15" fill="rgb(229,61,38)" fg:x="33642" fg:w="5"/><text x="67.8191%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (16 samples, 0.03%)</title><rect x="67.5591%" y="197" width="0.0321%" height="15" fill="rgb(225,210,5)" fg:x="33637" fg:w="16"/><text x="67.8091%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::~Tensor (15 samples, 0.03%)</title><rect x="67.5611%" y="181" width="0.0301%" height="15" fill="rgb(231,79,45)" fg:x="33638" fg:w="15"/><text x="67.8111%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_large (5 samples, 0.01%)</title><rect x="67.5812%" y="165" width="0.0100%" height="15" fill="rgb(224,100,7)" fg:x="33648" fg:w="5"/><text x="67.8312%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="67.5932%" y="197" width="0.0141%" height="15" fill="rgb(241,198,18)" fg:x="33654" fg:w="7"/><text x="67.8432%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="67.5932%" y="181" width="0.0141%" height="15" fill="rgb(252,97,53)" fg:x="33654" fg:w="7"/><text x="67.8432%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="67.5932%" y="165" width="0.0141%" height="15" fill="rgb(220,88,7)" fg:x="33654" fg:w="7"/><text x="67.8432%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="67.6495%" y="165" width="0.0141%" height="15" fill="rgb(213,176,14)" fg:x="33682" fg:w="7"/><text x="67.8995%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.06%)</title><rect x="67.6073%" y="197" width="0.0643%" height="15" fill="rgb(246,73,7)" fg:x="33661" fg:w="32"/><text x="67.8573%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.04%)</title><rect x="67.6274%" y="181" width="0.0442%" height="15" fill="rgb(245,64,36)" fg:x="33671" fg:w="22"/><text x="67.8774%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__shared_ptr_pointer&lt;void*, void (*)(void*), std::__1::allocator&lt;void&gt; &gt;::__on_zero_shared (66 samples, 0.13%)</title><rect x="67.5410%" y="213" width="0.1326%" height="15" fill="rgb(245,80,10)" fg:x="33628" fg:w="66"/><text x="67.7910%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="67.6796%" y="213" width="0.0201%" height="15" fill="rgb(232,107,50)" fg:x="33697" fg:w="10"/><text x="67.9296%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::ReleaseMLValueImpl (127 samples, 0.26%)</title><rect x="67.5169%" y="229" width="0.2551%" height="15" fill="rgb(253,3,0)" fg:x="33616" fg:w="127"/><text x="67.7669%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.07%)</title><rect x="67.6997%" y="213" width="0.0723%" height="15" fill="rgb(212,99,53)" fg:x="33707" fg:w="36"/><text x="67.9497%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.06%)</title><rect x="67.7138%" y="197" width="0.0582%" height="15" fill="rgb(249,111,54)" fg:x="33714" fg:w="29"/><text x="67.9638%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.03%)</title><rect x="67.7459%" y="181" width="0.0261%" height="15" fill="rgb(249,55,30)" fg:x="33730" fg:w="13"/><text x="67.9959%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__shared_ptr_pointer&lt;void*, void (*)(void*), std::__1::allocator&lt;void&gt; &gt;::__on_zero_shared (6 samples, 0.01%)</title><rect x="67.7720%" y="229" width="0.0121%" height="15" fill="rgb(237,47,42)" fg:x="33743" fg:w="6"/><text x="68.0220%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::ReleaseMLValueImpl (158 samples, 0.32%)</title><rect x="67.4687%" y="245" width="0.3173%" height="15" fill="rgb(211,20,18)" fg:x="33592" fg:w="158"/><text x="67.7187%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::StreamExecutionContext::RecycleNodeInputs (201 samples, 0.40%)</title><rect x="67.3844%" y="277" width="0.4037%" height="15" fill="rgb(231,203,46)" fg:x="33550" fg:w="201"/><text x="67.6344%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::ReleaseMLValue (159 samples, 0.32%)</title><rect x="67.4687%" y="261" width="0.3193%" height="15" fill="rgb(237,142,3)" fg:x="33592" fg:w="159"/><text x="67.7187%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const* onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (5 samples, 0.01%)</title><rect x="67.7881%" y="277" width="0.0100%" height="15" fill="rgb(241,107,1)" fg:x="33751" fg:w="5"/><text x="68.0381%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Unsqueeze::Compute (5 samples, 0.01%)</title><rect x="67.8122%" y="277" width="0.0100%" height="15" fill="rgb(229,83,13)" fg:x="33763" fg:w="5"/><text x="68.0622%" y="287.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::UnsqueezeBase::PrepareCompute (5 samples, 0.01%)</title><rect x="67.8122%" y="261" width="0.0100%" height="15" fill="rgb(241,91,40)" fg:x="33763" fg:w="5"/><text x="68.0622%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::UntypedBroadcastTwo (5 samples, 0.01%)</title><rect x="67.8222%" y="277" width="0.0100%" height="15" fill="rgb(225,3,45)" fg:x="33768" fg:w="5"/><text x="68.0722%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.01%)</title><rect x="67.8644%" y="261" width="0.0100%" height="15" fill="rgb(244,223,14)" fg:x="33789" fg:w="5"/><text x="68.1144%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_memalign (11 samples, 0.02%)</title><rect x="67.8825%" y="229" width="0.0221%" height="15" fill="rgb(224,124,37)" fg:x="33798" fg:w="11"/><text x="68.1325%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="67.8865%" y="213" width="0.0181%" height="15" fill="rgb(251,171,30)" fg:x="33800" fg:w="9"/><text x="68.1365%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (7 samples, 0.01%)</title><rect x="67.8905%" y="197" width="0.0141%" height="15" fill="rgb(236,46,54)" fg:x="33802" fg:w="7"/><text x="68.1405%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::CPUAllocator::Alloc (16 samples, 0.03%)</title><rect x="67.8744%" y="261" width="0.0321%" height="15" fill="rgb(245,213,5)" fg:x="33794" fg:w="16"/><text x="68.1244%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (12 samples, 0.02%)</title><rect x="67.8825%" y="245" width="0.0241%" height="15" fill="rgb(230,144,27)" fg:x="33798" fg:w="12"/><text x="68.1325%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::GetTempSpaceAllocator(std::__1::shared_ptr (6 samples, 0.01%)</title><rect x="67.9086%" y="261" width="0.0121%" height="15" fill="rgb(220,86,6)" fg:x="33811" fg:w="6"/><text x="68.1586%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetAllocator (5 samples, 0.01%)</title><rect x="67.9528%" y="149" width="0.0100%" height="15" fill="rgb(240,20,13)" fg:x="33833" fg:w="5"/><text x="68.2028%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::GetAllocatorImpl (8 samples, 0.02%)</title><rect x="67.9528%" y="165" width="0.0161%" height="15" fill="rgb(217,89,34)" fg:x="33833" fg:w="8"/><text x="68.2028%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (22 samples, 0.04%)</title><rect x="67.9327%" y="181" width="0.0442%" height="15" fill="rgb(229,13,5)" fg:x="33823" fg:w="22"/><text x="68.1827%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (28 samples, 0.06%)</title><rect x="67.9226%" y="245" width="0.0562%" height="15" fill="rgb(244,67,35)" fg:x="33818" fg:w="28"/><text x="68.1726%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (28 samples, 0.06%)</title><rect x="67.9226%" y="229" width="0.0562%" height="15" fill="rgb(221,40,2)" fg:x="33818" fg:w="28"/><text x="68.1726%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (27 samples, 0.05%)</title><rect x="67.9246%" y="213" width="0.0542%" height="15" fill="rgb(237,157,21)" fg:x="33819" fg:w="27"/><text x="68.1746%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (27 samples, 0.05%)</title><rect x="67.9246%" y="197" width="0.0542%" height="15" fill="rgb(222,94,11)" fg:x="33819" fg:w="27"/><text x="68.1746%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output(int, std::__1::vector&lt;long long, std::__1::allocator (30 samples, 0.06%)</title><rect x="67.9206%" y="261" width="0.0603%" height="15" fill="rgb(249,113,6)" fg:x="33817" fg:w="30"/><text x="68.1706%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const* onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (6 samples, 0.01%)</title><rect x="67.9849%" y="261" width="0.0121%" height="15" fill="rgb(238,137,36)" fg:x="33849" fg:w="6"/><text x="68.2349%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmax(float const*, float*, unsigned long, unsigned long, bool, onnxruntime::concurrency::ThreadPool*) (6 samples, 0.01%)</title><rect x="68.0251%" y="245" width="0.0121%" height="15" fill="rgb(210,102,26)" fg:x="33869" fg:w="6"/><text x="68.2751%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (14 samples, 0.03%)</title><rect x="68.0512%" y="181" width="0.0281%" height="15" fill="rgb(218,30,30)" fg:x="33882" fg:w="14"/><text x="68.3012%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::CPUAllocator::Alloc (25 samples, 0.05%)</title><rect x="68.0391%" y="245" width="0.0502%" height="15" fill="rgb(214,67,26)" fg:x="33876" fg:w="25"/><text x="68.2891%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (23 samples, 0.05%)</title><rect x="68.0431%" y="229" width="0.0462%" height="15" fill="rgb(251,9,53)" fg:x="33878" fg:w="23"/><text x="68.2931%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_memalign (22 samples, 0.04%)</title><rect x="68.0452%" y="213" width="0.0442%" height="15" fill="rgb(228,204,25)" fg:x="33879" fg:w="22"/><text x="68.2952%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="68.0512%" y="197" width="0.0382%" height="15" fill="rgb(207,153,8)" fg:x="33882" fg:w="19"/><text x="68.3012%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="68.0793%" y="181" width="0.0100%" height="15" fill="rgb(242,9,16)" fg:x="33896" fg:w="5"/><text x="68.3293%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetAllocator (7 samples, 0.01%)</title><rect x="68.0974%" y="229" width="0.0141%" height="15" fill="rgb(217,211,10)" fg:x="33905" fg:w="7"/><text x="68.3474%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::GetAllocatorImpl (6 samples, 0.01%)</title><rect x="68.0994%" y="213" width="0.0121%" height="15" fill="rgb(219,228,52)" fg:x="33906" fg:w="6"/><text x="68.3494%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetAllocator (6 samples, 0.01%)</title><rect x="68.0994%" y="197" width="0.0121%" height="15" fill="rgb(231,92,29)" fg:x="33906" fg:w="6"/><text x="68.3494%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::GetTempSpaceAllocator(std::__1::shared_ptr (12 samples, 0.02%)</title><rect x="68.0913%" y="245" width="0.0241%" height="15" fill="rgb(232,8,23)" fg:x="33902" fg:w="12"/><text x="68.3413%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::AttentionBase::GetPresent (7 samples, 0.01%)</title><rect x="68.1175%" y="245" width="0.0141%" height="15" fill="rgb(216,211,34)" fg:x="33915" fg:w="7"/><text x="68.3675%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.01%)</title><rect x="68.1375%" y="229" width="0.0100%" height="15" fill="rgb(236,151,0)" fg:x="33925" fg:w="5"/><text x="68.3875%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="68.1375%" y="213" width="0.0100%" height="15" fill="rgb(209,168,3)" fg:x="33925" fg:w="5"/><text x="68.3875%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy1 (5 samples, 0.01%)</title><rect x="68.1496%" y="213" width="0.0100%" height="15" fill="rgb(208,129,28)" fg:x="33931" fg:w="5"/><text x="68.3996%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy8 (17 samples, 0.03%)</title><rect x="68.1596%" y="213" width="0.0341%" height="15" fill="rgb(229,78,22)" fg:x="33936" fg:w="17"/><text x="68.4096%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy1 (5 samples, 0.01%)</title><rect x="68.1998%" y="213" width="0.0100%" height="15" fill="rgb(228,187,13)" fg:x="33956" fg:w="5"/><text x="68.4498%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy8 (6 samples, 0.01%)</title><rect x="68.2098%" y="213" width="0.0121%" height="15" fill="rgb(240,119,24)" fg:x="33961" fg:w="6"/><text x="68.4598%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountLessThan8 (5 samples, 0.01%)</title><rect x="68.2219%" y="213" width="0.0100%" height="15" fill="rgb(209,194,42)" fg:x="33967" fg:w="5"/><text x="68.4719%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmaxOutputF32KernelAvx (12 samples, 0.02%)</title><rect x="68.2319%" y="213" width="0.0241%" height="15" fill="rgb(247,200,46)" fg:x="33972" fg:w="12"/><text x="68.4819%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmaxThreaded(void*, long) (366 samples, 0.74%)</title><rect x="68.2560%" y="213" width="0.7351%" height="15" fill="rgb(218,76,16)" fg:x="33984" fg:w="366"/><text x="68.5060%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSumExpF32Kernel (337 samples, 0.68%)</title><rect x="68.3143%" y="197" width="0.6769%" height="15" fill="rgb(225,21,48)" fg:x="34013" fg:w="337"/><text x="68.5643%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (133 samples, 0.27%)</title><rect x="69.0072%" y="133" width="0.2671%" height="15" fill="rgb(239,223,50)" fg:x="34358" fg:w="133"/><text x="69.2572%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LComputeSoftmaxOutput.ProcessRemainingCountBy32 (9 samples, 0.02%)</title><rect x="69.2984%" y="101" width="0.0181%" height="15" fill="rgb(244,45,21)" fg:x="34503" fg:w="9"/><text x="69.5484%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy1 (11 samples, 0.02%)</title><rect x="69.3205%" y="101" width="0.0221%" height="15" fill="rgb(232,33,43)" fg:x="34514" fg:w="11"/><text x="69.5705%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountBy8 (5 samples, 0.01%)</title><rect x="69.3487%" y="101" width="0.0100%" height="15" fill="rgb(209,8,3)" fg:x="34528" fg:w="5"/><text x="69.5987%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LReduceMaximum.ProcessRemainingCountLessThan8 (7 samples, 0.01%)</title><rect x="69.3587%" y="101" width="0.0141%" height="15" fill="rgb(214,25,53)" fg:x="34533" fg:w="7"/><text x="69.6087%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmaxOutputF32KernelAvx (5 samples, 0.01%)</title><rect x="69.3728%" y="101" width="0.0100%" height="15" fill="rgb(254,186,54)" fg:x="34540" fg:w="5"/><text x="69.6228%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmaxThreaded(void*, long) (414 samples, 0.83%)</title><rect x="69.3828%" y="101" width="0.8315%" height="15" fill="rgb(208,174,49)" fg:x="34545" fg:w="414"/><text x="69.6328%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSumExpF32Kernel (388 samples, 0.78%)</title><rect x="69.4350%" y="85" width="0.7793%" height="15" fill="rgb(233,191,51)" fg:x="34571" fg:w="388"/><text x="69.6850%" y="95.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (472 samples, 0.95%)</title><rect x="69.2784%" y="133" width="0.9480%" height="15" fill="rgb(222,134,10)" fg:x="34493" fg:w="472"/><text x="69.5284%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2&gt;, void (long, long)&gt;::operator() (468 samples, 0.94%)</title><rect x="69.2864%" y="117" width="0.9400%" height="15" fill="rgb(230,226,20)" fg:x="34497" fg:w="468"/><text x="69.5364%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasExecuteThreaded(void (*)(void*, long), void*, long, onnxruntime::concurrency::ThreadPool*) (614 samples, 1.23%)</title><rect x="68.9952%" y="213" width="1.2332%" height="15" fill="rgb(251,111,25)" fg:x="34352" fg:w="614"/><text x="69.2452%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void  (611 samples, 1.23%)</title><rect x="69.0012%" y="197" width="1.2272%" height="15" fill="rgb(224,40,46)" fg:x="34355" fg:w="611"/><text x="69.2512%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (609 samples, 1.22%)</title><rect x="69.0052%" y="181" width="1.2232%" height="15" fill="rgb(236,108,47)" fg:x="34357" fg:w="609"/><text x="69.2552%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (609 samples, 1.22%)</title><rect x="69.0052%" y="165" width="1.2232%" height="15" fill="rgb(234,93,0)" fg:x="34357" fg:w="609"/><text x="69.2552%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (608 samples, 1.22%)</title><rect x="69.0072%" y="149" width="1.2212%" height="15" fill="rgb(224,213,32)" fg:x="34358" fg:w="608"/><text x="69.2572%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeSoftmax(float const*, float*, unsigned long, unsigned long, bool, onnxruntime::concurrency::ThreadPool*) (1,041 samples, 2.09%)</title><rect x="68.1476%" y="229" width="2.0908%" height="15" fill="rgb(251,11,48)" fg:x="33930" fg:w="1041"/><text x="68.3976%" y="239.50">l..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (85 samples, 0.17%)</title><rect x="70.2726%" y="165" width="0.1707%" height="15" fill="rgb(236,173,5)" fg:x="34988" fg:w="85"/><text x="70.5226%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.01%)</title><rect x="70.4935%" y="101" width="0.0141%" height="15" fill="rgb(230,95,12)" fg:x="35098" fg:w="7"/><text x="70.7435%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="70.4935%" y="85" width="0.0141%" height="15" fill="rgb(232,209,1)" fg:x="35098" fg:w="7"/><text x="70.7435%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="70.4935%" y="69" width="0.0141%" height="15" fill="rgb(232,6,1)" fg:x="35098" fg:w="7"/><text x="70.7435%" y="79.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmTransposePackB(float*, float const*, unsigned long, unsigned long, unsigned long) (40 samples, 0.08%)</title><rect x="70.5598%" y="37" width="0.0803%" height="15" fill="rgb(210,224,50)" fg:x="35131" fg:w="40"/><text x="70.8098%" y="47.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmOperation(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, float const*, unsigned long, float, float*, unsigned long) (111 samples, 0.22%)</title><rect x="70.5216%" y="53" width="0.2229%" height="15" fill="rgb(228,127,35)" fg:x="35112" fg:w="111"/><text x="70.7716%" y="63.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmTransposePackB16x4Avx (52 samples, 0.10%)</title><rect x="70.6401%" y="37" width="0.1044%" height="15" fill="rgb(245,102,45)" fg:x="35171" fg:w="52"/><text x="70.8901%" y="47.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (122 samples, 0.25%)</title><rect x="70.5075%" y="101" width="0.2450%" height="15" fill="rgb(214,1,49)" fg:x="35105" fg:w="122"/><text x="70.7575%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (122 samples, 0.25%)</title><rect x="70.5075%" y="85" width="0.2450%" height="15" fill="rgb(226,163,40)" fg:x="35105" fg:w="122"/><text x="70.7575%" y="95.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (119 samples, 0.24%)</title><rect x="70.5136%" y="69" width="0.2390%" height="15" fill="rgb(239,212,28)" fg:x="35108" fg:w="119"/><text x="70.7636%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="70.7546%" y="101" width="0.0141%" height="15" fill="rgb(220,20,13)" fg:x="35228" fg:w="7"/><text x="71.0046%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="70.7686%" y="101" width="0.0181%" height="15" fill="rgb(210,164,35)" fg:x="35235" fg:w="9"/><text x="71.0186%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (151 samples, 0.30%)</title><rect x="70.4854%" y="117" width="0.3033%" height="15" fill="rgb(248,109,41)" fg:x="35094" fg:w="151"/><text x="70.7354%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (161 samples, 0.32%)</title><rect x="70.4694%" y="133" width="0.3234%" height="15" fill="rgb(238,23,50)" fg:x="35086" fg:w="161"/><text x="70.7194%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeAttentionProbs&lt;float&gt;(float*, float const*, float const*, int const*, gsl::span&lt;long long const, 18446744073709551615ul&gt;, float*, bool, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*, float const*) const::&apos;lambda0&apos;(long, long)::operator() (216 samples, 0.43%)</title><rect x="70.4593%" y="149" width="0.4338%" height="15" fill="rgb(211,48,49)" fg:x="35081" fg:w="216"/><text x="70.7093%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (50 samples, 0.10%)</title><rect x="70.7927%" y="133" width="0.1004%" height="15" fill="rgb(223,36,21)" fg:x="35247" fg:w="50"/><text x="71.0427%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (221 samples, 0.44%)</title><rect x="70.4533%" y="165" width="0.4439%" height="15" fill="rgb(207,123,46)" fg:x="35078" fg:w="221"/><text x="70.7033%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (314 samples, 0.63%)</title><rect x="70.2685%" y="197" width="0.6307%" height="15" fill="rgb(240,218,32)" fg:x="34986" fg:w="314"/><text x="70.5185%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (312 samples, 0.63%)</title><rect x="70.2726%" y="181" width="0.6266%" height="15" fill="rgb(252,5,43)" fg:x="34988" fg:w="312"/><text x="70.5226%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (317 samples, 0.64%)</title><rect x="70.2645%" y="213" width="0.6367%" height="15" fill="rgb(252,84,19)" fg:x="34984" fg:w="317"/><text x="70.5145%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (5 samples, 0.01%)</title><rect x="70.9092%" y="165" width="0.0100%" height="15" fill="rgb(243,152,39)" fg:x="35305" fg:w="5"/><text x="71.1592%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (5 samples, 0.01%)</title><rect x="70.9092%" y="149" width="0.0100%" height="15" fill="rgb(234,160,15)" fg:x="35305" fg:w="5"/><text x="71.1592%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (5 samples, 0.01%)</title><rect x="70.9092%" y="133" width="0.0100%" height="15" fill="rgb(237,34,20)" fg:x="35305" fg:w="5"/><text x="71.1592%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmOperation(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, float const*, unsigned long, float, float*, unsigned long) (5 samples, 0.01%)</title><rect x="70.9092%" y="117" width="0.0100%" height="15" fill="rgb(229,97,13)" fg:x="35305" fg:w="5"/><text x="71.1592%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (8 samples, 0.02%)</title><rect x="70.9052%" y="181" width="0.0161%" height="15" fill="rgb(234,71,50)" fg:x="35303" fg:w="8"/><text x="71.1552%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (9 samples, 0.02%)</title><rect x="70.9052%" y="197" width="0.0181%" height="15" fill="rgb(253,155,4)" fg:x="35303" fg:w="9"/><text x="71.1552%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (334 samples, 0.67%)</title><rect x="70.2565%" y="229" width="0.6708%" height="15" fill="rgb(222,185,37)" fg:x="34980" fg:w="334"/><text x="70.5065%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeAttentionProbs&lt;float&gt;(float*, float const*, float const*, int const*, gsl::span&lt;long long const, 18446744073709551615ul&gt;, float*, bool, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*, float const*) const::&apos;lambda0&apos;(long, long)::operator() (11 samples, 0.02%)</title><rect x="70.9052%" y="213" width="0.0221%" height="15" fill="rgb(251,177,13)" fg:x="35303" fg:w="11"/><text x="71.1552%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::PrepareMask&lt;float&gt;(int const*, gsl::span (15 samples, 0.03%)</title><rect x="70.9293%" y="229" width="0.0301%" height="15" fill="rgb(250,179,40)" fg:x="35315" fg:w="15"/><text x="71.1793%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="70.9594%" y="229" width="0.0181%" height="15" fill="rgb(242,44,2)" fg:x="35330" fg:w="9"/><text x="71.2094%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeAttentionProbs&lt;float&gt;(float*, float const*, float const*, int const*, gsl::span (1,422 samples, 2.86%)</title><rect x="68.1335%" y="245" width="2.8561%" height="15" fill="rgb(216,177,13)" fg:x="33923" fg:w="1422"/><text x="68.3835%" y="255.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (59 samples, 0.12%)</title><rect x="71.0197%" y="165" width="0.1185%" height="15" fill="rgb(216,106,43)" fg:x="35360" fg:w="59"/><text x="71.2697%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (12 samples, 0.02%)</title><rect x="71.2286%" y="101" width="0.0241%" height="15" fill="rgb(216,183,2)" fg:x="35464" fg:w="12"/><text x="71.4786%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.02%)</title><rect x="71.2286%" y="85" width="0.0241%" height="15" fill="rgb(249,75,3)" fg:x="35464" fg:w="12"/><text x="71.4786%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.02%)</title><rect x="71.2306%" y="69" width="0.0221%" height="15" fill="rgb(219,67,39)" fg:x="35465" fg:w="11"/><text x="71.4806%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="71.2326%" y="53" width="0.0201%" height="15" fill="rgb(253,228,2)" fg:x="35466" fg:w="10"/><text x="71.4826%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="71.2326%" y="37" width="0.0201%" height="15" fill="rgb(235,138,27)" fg:x="35466" fg:w="10"/><text x="71.4826%" y="47.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (6 samples, 0.01%)</title><rect x="71.2607%" y="53" width="0.0121%" height="15" fill="rgb(236,97,51)" fg:x="35480" fg:w="6"/><text x="71.5107%" y="63.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (90 samples, 0.18%)</title><rect x="71.2547%" y="101" width="0.1808%" height="15" fill="rgb(240,80,30)" fg:x="35477" fg:w="90"/><text x="71.5047%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (90 samples, 0.18%)</title><rect x="71.2547%" y="85" width="0.1808%" height="15" fill="rgb(230,178,19)" fg:x="35477" fg:w="90"/><text x="71.5047%" y="95.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (88 samples, 0.18%)</title><rect x="71.2587%" y="69" width="0.1767%" height="15" fill="rgb(210,190,27)" fg:x="35479" fg:w="88"/><text x="71.5087%" y="79.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmOperation(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, float const*, unsigned long, float, float*, unsigned long) (80 samples, 0.16%)</title><rect x="71.2748%" y="53" width="0.1607%" height="15" fill="rgb(222,107,31)" fg:x="35487" fg:w="80"/><text x="71.5248%" y="63.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmCopyPackB(float*, float const*, unsigned long, unsigned long, unsigned long) (60 samples, 0.12%)</title><rect x="71.3149%" y="37" width="0.1205%" height="15" fill="rgb(216,127,34)" fg:x="35507" fg:w="60"/><text x="71.5649%" y="47.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (127 samples, 0.26%)</title><rect x="71.2025%" y="117" width="0.2551%" height="15" fill="rgb(234,116,52)" fg:x="35451" fg:w="127"/><text x="71.4525%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="71.4475%" y="101" width="0.0100%" height="15" fill="rgb(222,124,15)" fg:x="35573" fg:w="5"/><text x="71.6975%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::MatMul&lt;float&gt; (135 samples, 0.27%)</title><rect x="71.1964%" y="133" width="0.2711%" height="15" fill="rgb(231,179,28)" fg:x="35448" fg:w="135"/><text x="71.4464%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeVxAttentionScore&lt;float&gt;(float*, float*, float const*, float const*, int, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*) const::&apos;lambda&apos;(long, long)::operator() (207 samples, 0.42%)</title><rect x="71.1523%" y="149" width="0.4158%" height="15" fill="rgb(226,93,45)" fg:x="35426" fg:w="207"/><text x="71.4023%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (46 samples, 0.09%)</title><rect x="71.4756%" y="133" width="0.0924%" height="15" fill="rgb(215,8,51)" fg:x="35587" fg:w="46"/><text x="71.7256%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (216 samples, 0.43%)</title><rect x="71.1462%" y="165" width="0.4338%" height="15" fill="rgb(223,106,5)" fg:x="35423" fg:w="216"/><text x="71.3962%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (285 samples, 0.57%)</title><rect x="71.0177%" y="213" width="0.5724%" height="15" fill="rgb(250,191,5)" fg:x="35359" fg:w="285"/><text x="71.2677%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (285 samples, 0.57%)</title><rect x="71.0177%" y="197" width="0.5724%" height="15" fill="rgb(242,132,44)" fg:x="35359" fg:w="285"/><text x="71.2677%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (284 samples, 0.57%)</title><rect x="71.0197%" y="181" width="0.5704%" height="15" fill="rgb(251,152,29)" fg:x="35360" fg:w="284"/><text x="71.2697%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::math::MatMul&lt;float&gt; (9 samples, 0.02%)</title><rect x="71.5961%" y="197" width="0.0181%" height="15" fill="rgb(218,179,5)" fg:x="35647" fg:w="9"/><text x="71.8461%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (8 samples, 0.02%)</title><rect x="71.5981%" y="181" width="0.0161%" height="15" fill="rgb(227,67,19)" fg:x="35648" fg:w="8"/><text x="71.8481%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeVxAttentionScore&lt;float&gt;(float*, float*, float const*, float const*, int, int, int, int, int, int, float const*, float const*, float*, float*, onnxruntime::concurrency::ThreadPool*) const::&apos;lambda&apos;(long, long)::operator() (14 samples, 0.03%)</title><rect x="71.5901%" y="213" width="0.0281%" height="15" fill="rgb(233,119,31)" fg:x="35644" fg:w="14"/><text x="71.8401%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (303 samples, 0.61%)</title><rect x="71.0117%" y="229" width="0.6086%" height="15" fill="rgb(241,120,22)" fg:x="35356" fg:w="303"/><text x="71.2617%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.01%)</title><rect x="71.6222%" y="213" width="0.0100%" height="15" fill="rgb(224,102,30)" fg:x="35660" fg:w="5"/><text x="71.8722%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="71.6222%" y="229" width="0.0181%" height="15" fill="rgb(210,164,37)" fg:x="35660" fg:w="9"/><text x="71.8722%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::contrib::AttentionCPUBase::ComputeVxAttentionScore&lt;float&gt; (327 samples, 0.66%)</title><rect x="70.9896%" y="245" width="0.6568%" height="15" fill="rgb(226,191,16)" fg:x="35345" fg:w="327"/><text x="71.2396%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (74 samples, 0.15%)</title><rect x="71.6484%" y="245" width="0.1486%" height="15" fill="rgb(214,40,45)" fg:x="35673" fg:w="74"/><text x="71.8984%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (5 samples, 0.01%)</title><rect x="71.7990%" y="229" width="0.0100%" height="15" fill="rgb(244,29,26)" fg:x="35748" fg:w="5"/><text x="72.0490%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="71.7970%" y="245" width="0.0241%" height="15" fill="rgb(216,16,5)" fg:x="35747" fg:w="12"/><text x="72.0470%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_large (10 samples, 0.02%)</title><rect x="71.8211%" y="245" width="0.0201%" height="15" fill="rgb(249,76,35)" fg:x="35759" fg:w="10"/><text x="72.0711%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Ivybridge (12 samples, 0.02%)</title><rect x="71.8592%" y="245" width="0.0241%" height="15" fill="rgb(207,11,44)" fg:x="35778" fg:w="12"/><text x="72.1092%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::common::Status onnxruntime::contrib::AttentionCPUBase::ApplyAttention&lt;float&gt; (1,934 samples, 3.88%)</title><rect x="68.0010%" y="261" width="3.8844%" height="15" fill="rgb(228,190,49)" fg:x="33857" fg:w="1934"/><text x="68.2510%" y="271.50">libo..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (564 samples, 1.13%)</title><rect x="71.9074%" y="197" width="1.1328%" height="15" fill="rgb(214,173,12)" fg:x="35802" fg:w="564"/><text x="72.1574%" y="207.50"></text></g><g><title>libc++abi.dylib`operator delete(void*) (8 samples, 0.02%)</title><rect x="73.1989%" y="165" width="0.0161%" height="15" fill="rgb(218,26,35)" fg:x="36445" fg:w="8"/><text x="73.4489%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.01%)</title><rect x="73.3234%" y="101" width="0.0100%" height="15" fill="rgb(220,200,19)" fg:x="36507" fg:w="5"/><text x="73.5734%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.06%)</title><rect x="73.3335%" y="101" width="0.0643%" height="15" fill="rgb(239,95,49)" fg:x="36512" fg:w="32"/><text x="73.5835%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.06%)</title><rect x="73.3395%" y="85" width="0.0582%" height="15" fill="rgb(235,85,53)" fg:x="36515" fg:w="29"/><text x="73.5895%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (39 samples, 0.08%)</title><rect x="73.3214%" y="117" width="0.0783%" height="15" fill="rgb(233,133,31)" fg:x="36506" fg:w="39"/><text x="73.5714%" y="127.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (52 samples, 0.10%)</title><rect x="73.2993%" y="149" width="0.1044%" height="15" fill="rgb(218,25,20)" fg:x="36495" fg:w="52"/><text x="73.5493%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (46 samples, 0.09%)</title><rect x="73.3114%" y="133" width="0.0924%" height="15" fill="rgb(252,210,38)" fg:x="36501" fg:w="46"/><text x="73.5614%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void (8 samples, 0.02%)</title><rect x="73.4038%" y="149" width="0.0161%" height="15" fill="rgb(242,134,21)" fg:x="36547" fg:w="8"/><text x="73.6538%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`.LProcessNextColumnLoop2xN4 (8 samples, 0.02%)</title><rect x="73.5002%" y="101" width="0.0161%" height="15" fill="rgb(213,28,48)" fg:x="36595" fg:w="8"/><text x="73.7502%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmFloatKernelAvx (28 samples, 0.06%)</title><rect x="73.5182%" y="101" width="0.0562%" height="15" fill="rgb(250,196,2)" fg:x="36604" fg:w="28"/><text x="73.7682%" y="111.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTrySimpleParallel(onnxruntime::concurrency::ThreadPool*, long, std::__1::function&lt;void  (157 samples, 0.32%)</title><rect x="73.4198%" y="149" width="0.3153%" height="15" fill="rgb(227,5,17)" fg:x="36555" fg:w="157"/><text x="73.6698%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0, std::__1::allocator&lt;MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*)::$_0&gt;, void (long)&gt;::operator() (157 samples, 0.32%)</title><rect x="73.4198%" y="133" width="0.3153%" height="15" fill="rgb(221,226,24)" fg:x="36555" fg:w="157"/><text x="73.6698%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmThreaded(long, long, CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, long) (144 samples, 0.29%)</title><rect x="73.4459%" y="117" width="0.2892%" height="15" fill="rgb(211,5,48)" fg:x="36568" fg:w="144"/><text x="73.6959%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasSgemmPackedOperation(CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, unsigned long, float, float const*, unsigned long, void const*, unsigned long, float, float*, unsigned long) (80 samples, 0.16%)</title><rect x="73.5745%" y="101" width="0.1607%" height="15" fill="rgb(219,150,6)" fg:x="36632" fg:w="80"/><text x="73.8245%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.05%)</title><rect x="73.7753%" y="133" width="0.0462%" height="15" fill="rgb(251,46,16)" fg:x="36732" fg:w="23"/><text x="74.0253%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.05%)</title><rect x="73.7753%" y="117" width="0.0462%" height="15" fill="rgb(220,204,40)" fg:x="36732" fg:w="23"/><text x="74.0253%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.07%)</title><rect x="73.7512%" y="149" width="0.0723%" height="15" fill="rgb(211,85,2)" fg:x="36720" fg:w="36"/><text x="74.0012%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.05%)</title><rect x="73.8235%" y="149" width="0.0482%" height="15" fill="rgb(229,17,7)" fg:x="36756" fg:w="24"/><text x="74.0735%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasGemmBatch(CBLAS_TRANSPOSE, CBLAS_TRANSPOSE, unsigned long, unsigned long, unsigned long, MLAS_SGEMM_DATA_PARAMS const*, unsigned long, onnxruntime::concurrency::ThreadPool*) (339 samples, 0.68%)</title><rect x="73.2190%" y="165" width="0.6809%" height="15" fill="rgb(239,72,28)" fg:x="36455" fg:w="339"/><text x="73.4690%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="73.8778%" y="149" width="0.0221%" height="15" fill="rgb(230,47,54)" fg:x="36783" fg:w="11"/><text x="74.1278%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::DegreeOfParallelism (9 samples, 0.02%)</title><rect x="73.8999%" y="165" width="0.0181%" height="15" fill="rgb(214,50,8)" fg:x="36794" fg:w="9"/><text x="74.1499%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="73.9260%" y="165" width="0.0221%" height="15" fill="rgb(216,198,43)" fg:x="36807" fg:w="11"/><text x="74.1760%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="73.9481%" y="165" width="0.0121%" height="15" fill="rgb(234,20,35)" fg:x="36818" fg:w="6"/><text x="74.1981%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (12 samples, 0.02%)</title><rect x="73.9641%" y="165" width="0.0241%" height="15" fill="rgb(254,45,19)" fg:x="36826" fg:w="12"/><text x="74.2141%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda&apos;(long, long)::operator() (650 samples, 1.31%)</title><rect x="73.0643%" y="181" width="1.3055%" height="15" fill="rgb(219,14,44)" fg:x="36378" fg:w="650"/><text x="73.3143%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (190 samples, 0.38%)</title><rect x="73.9882%" y="165" width="0.3816%" height="15" fill="rgb(217,220,26)" fg:x="36838" fg:w="190"/><text x="74.2382%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (11 samples, 0.02%)</title><rect x="74.3698%" y="181" width="0.0221%" height="15" fill="rgb(213,158,28)" fg:x="37028" fg:w="11"/><text x="74.6198%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (668 samples, 1.34%)</title><rect x="73.0523%" y="197" width="1.3417%" height="15" fill="rgb(252,51,52)" fg:x="36372" fg:w="668"/><text x="73.3023%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelFor(long, onnxruntime::TensorOpCost const&amp;, std::__1::function&lt;void  (1,248 samples, 2.51%)</title><rect x="71.8914%" y="261" width="2.5066%" height="15" fill="rgb(246,89,16)" fg:x="35794" fg:w="1248"/><text x="72.1414%" y="271.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (1,246 samples, 2.50%)</title><rect x="71.8954%" y="245" width="2.5026%" height="15" fill="rgb(216,158,49)" fg:x="35796" fg:w="1246"/><text x="72.1454%" y="255.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (1,246 samples, 2.50%)</title><rect x="71.8954%" y="229" width="2.5026%" height="15" fill="rgb(236,107,19)" fg:x="35796" fg:w="1246"/><text x="72.1454%" y="239.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (1,240 samples, 2.49%)</title><rect x="71.9074%" y="213" width="2.4905%" height="15" fill="rgb(228,185,30)" fg:x="35802" fg:w="1240"/><text x="72.1574%" y="223.50">li..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::AttentionBase::CheckInputs (18 samples, 0.04%)</title><rect x="74.4000%" y="261" width="0.0362%" height="15" fill="rgb(246,134,8)" fg:x="37043" fg:w="18"/><text x="74.6500%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::AttentionBase::CheckMask (6 samples, 0.01%)</title><rect x="74.4241%" y="245" width="0.0121%" height="15" fill="rgb(214,143,50)" fg:x="37055" fg:w="6"/><text x="74.6741%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.04%)</title><rect x="74.4401%" y="261" width="0.0402%" height="15" fill="rgb(228,75,8)" fg:x="37063" fg:w="20"/><text x="74.6901%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="74.4823%" y="261" width="0.0201%" height="15" fill="rgb(207,175,4)" fg:x="37084" fg:w="10"/><text x="74.7323%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.01%)</title><rect x="74.5084%" y="245" width="0.0100%" height="15" fill="rgb(205,108,24)" fg:x="37097" fg:w="5"/><text x="74.7584%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="74.5064%" y="261" width="0.0281%" height="15" fill="rgb(244,120,49)" fg:x="37096" fg:w="14"/><text x="74.7564%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="74.5205%" y="245" width="0.0141%" height="15" fill="rgb(223,47,38)" fg:x="37103" fg:w="7"/><text x="74.7705%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::Attention&lt;float&gt;::Compute (3,340 samples, 6.71%)</title><rect x="67.8403%" y="277" width="6.7083%" height="15" fill="rgb(229,179,11)" fg:x="33777" fg:w="3340"/><text x="68.0903%" y="287.50">libonnxru..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::CPUAllocator::Alloc (13 samples, 0.03%)</title><rect x="74.5647%" y="261" width="0.0261%" height="15" fill="rgb(231,122,1)" fg:x="37125" fg:w="13"/><text x="74.8147%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (13 samples, 0.03%)</title><rect x="74.5647%" y="245" width="0.0261%" height="15" fill="rgb(245,119,9)" fg:x="37125" fg:w="13"/><text x="74.8147%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_memalign (13 samples, 0.03%)</title><rect x="74.5647%" y="229" width="0.0261%" height="15" fill="rgb(241,163,25)" fg:x="37125" fg:w="13"/><text x="74.8147%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="74.5687%" y="213" width="0.0221%" height="15" fill="rgb(217,214,3)" fg:x="37127" fg:w="11"/><text x="74.8187%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (10 samples, 0.02%)</title><rect x="74.5707%" y="197" width="0.0201%" height="15" fill="rgb(240,86,28)" fg:x="37128" fg:w="10"/><text x="74.8207%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashMapPolicy&lt;OrtDevice, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, absl::lts_20220623::hash_internal::Hash&lt;OrtDevice&gt;, std::__1::equal_to&lt;OrtDevice&gt;, std::__1::allocator&lt;std::__1::pair&lt;OrtDevice const, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::iterator absl::lts_20220623::container_internal::raw_hash_set&lt;absl::lts_20220623::container_internal::FlatHashMapPolicy&lt;OrtDevice, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, absl::lts_20220623::hash_internal::Hash&lt;OrtDevice&gt;, std::__1::equal_to&lt;OrtDevice&gt;, std::__1::allocator&lt;std::__1::pair&lt;OrtDevice const, std::__1::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find&lt;OrtDevice&gt; (5 samples, 0.01%)</title><rect x="74.6330%" y="165" width="0.0100%" height="15" fill="rgb(215,47,9)" fg:x="37159" fg:w="5"/><text x="74.8830%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionProvider::GetAllocator (5 samples, 0.01%)</title><rect x="74.6631%" y="117" width="0.0100%" height="15" fill="rgb(252,25,45)" fg:x="37174" fg:w="5"/><text x="74.9131%" y="127.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::GetAllocatorImpl (15 samples, 0.03%)</title><rect x="74.6470%" y="165" width="0.0301%" height="15" fill="rgb(251,164,9)" fg:x="37166" fg:w="15"/><text x="74.8970%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::SessionState::GetAllocator (15 samples, 0.03%)</title><rect x="74.6470%" y="149" width="0.0301%" height="15" fill="rgb(233,194,0)" fg:x="37166" fg:w="15"/><text x="74.8970%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::SessionState::SetupAllocators()::$_0, std::__1::allocator&lt;onnxruntime::SessionState::SetupAllocators()::$_0&gt;, std::__1::shared_ptr&lt;onnxruntime::IAllocator&gt; (OrtMemType)&gt;::operator() (10 samples, 0.02%)</title><rect x="74.6571%" y="133" width="0.0201%" height="15" fill="rgb(249,111,24)" fg:x="37171" fg:w="10"/><text x="74.9071%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="74.6872%" y="117" width="0.0141%" height="15" fill="rgb(250,223,3)" fg:x="37186" fg:w="7"/><text x="74.9372%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="74.6872%" y="101" width="0.0141%" height="15" fill="rgb(236,178,37)" fg:x="37186" fg:w="7"/><text x="74.9372%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="74.6872%" y="149" width="0.0161%" height="15" fill="rgb(241,158,50)" fg:x="37186" fg:w="8"/><text x="74.9372%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="74.6872%" y="133" width="0.0161%" height="15" fill="rgb(213,121,41)" fg:x="37186" fg:w="8"/><text x="74.9372%" y="143.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::Tensor(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, long, gsl::span (5 samples, 0.01%)</title><rect x="74.7053%" y="149" width="0.0100%" height="15" fill="rgb(240,92,3)" fg:x="37195" fg:w="5"/><text x="74.9553%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (50 samples, 0.10%)</title><rect x="74.6169%" y="181" width="0.1004%" height="15" fill="rgb(205,123,3)" fg:x="37151" fg:w="50"/><text x="74.8669%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor::InitOrtValue(onnxruntime::DataTypeImpl const*, onnxruntime::TensorShape const&amp;, void*, OrtMemoryInfo const&amp;, OrtValue&amp;, long, gsl::span (15 samples, 0.03%)</title><rect x="74.6872%" y="165" width="0.0301%" height="15" fill="rgb(205,97,47)" fg:x="37186" fg:w="15"/><text x="74.9372%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (59 samples, 0.12%)</title><rect x="74.6048%" y="197" width="0.1185%" height="15" fill="rgb(247,152,14)" fg:x="37145" fg:w="59"/><text x="74.8548%" y="207.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::Output (65 samples, 0.13%)</title><rect x="74.5948%" y="261" width="0.1306%" height="15" fill="rgb(248,195,53)" fg:x="37140" fg:w="65"/><text x="74.8448%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContext::OutputMLValue (64 samples, 0.13%)</title><rect x="74.5968%" y="245" width="0.1285%" height="15" fill="rgb(226,201,16)" fg:x="37141" fg:w="64"/><text x="74.8468%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (62 samples, 0.12%)</title><rect x="74.6008%" y="229" width="0.1245%" height="15" fill="rgb(205,98,0)" fg:x="37143" fg:w="62"/><text x="74.8508%" y="239.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::CreateNodeOutputMLValueImpl (60 samples, 0.12%)</title><rect x="74.6048%" y="213" width="0.1205%" height="15" fill="rgb(214,191,48)" fg:x="37145" fg:w="60"/><text x="74.8548%" y="223.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::bias_gelu_helper::CheckInputs (13 samples, 0.03%)</title><rect x="74.7334%" y="261" width="0.0261%" height="15" fill="rgb(237,112,39)" fg:x="37209" fg:w="13"/><text x="74.9834%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Tensor const* onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (7 samples, 0.01%)</title><rect x="74.7454%" y="245" width="0.0141%" height="15" fill="rgb(247,203,27)" fg:x="37215" fg:w="7"/><text x="74.9954%" y="255.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::EndParallelSectionInternal(onnxruntime::concurrency::ThreadPoolTempl (308 samples, 0.62%)</title><rect x="74.7916%" y="181" width="0.6186%" height="15" fill="rgb(235,124,28)" fg:x="37238" fg:w="308"/><text x="75.0416%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallelInternal(onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::PerThread&amp;, onnxruntime::concurrency::ThreadPoolParallelSection&amp;, unsigned int, bool, std::__1::function&lt;void  (10 samples, 0.02%)</title><rect x="75.4122%" y="181" width="0.0201%" height="15" fill="rgb(208,207,46)" fg:x="37547" fg:w="10"/><text x="75.6622%" y="191.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`MlasComputeTanh(float const*, float*, unsigned long) (5 samples, 0.01%)</title><rect x="75.4363%" y="149" width="0.0100%" height="15" fill="rgb(234,176,4)" fg:x="37559" fg:w="5"/><text x="75.6863%" y="159.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void (long)&gt; const&amp;)::$_2&gt;, void (long, long)&gt;::operator() (2,596 samples, 5.21%)</title><rect x="75.4363%" y="165" width="5.2140%" height="15" fill="rgb(230,133,28)" fg:x="37559" fg:w="2596"/><text x="75.6863%" y="175.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda0&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&amp;, long&gt; (2,587 samples, 5.20%)</title><rect x="75.4544%" y="149" width="5.1959%" height="15" fill="rgb(211,137,40)" fg:x="37568" fg:w="2587"/><text x="75.7044%" y="159.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`MlasTanhKernel (1,710 samples, 3.43%)</title><rect x="77.2159%" y="133" width="3.4345%" height="15" fill="rgb(254,35,13)" fg:x="38445" fg:w="1710"/><text x="77.4659%" y="143.50">lib..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::RunInParallel(std::__1::function&lt;void  (2,930 samples, 5.88%)</title><rect x="74.7836%" y="213" width="5.8848%" height="15" fill="rgb(225,49,51)" fg:x="37234" fg:w="2930"/><text x="75.0336%" y="223.50">libonnx..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPoolTempl&lt;onnxruntime::Env&gt;::RunInParallel(std::__1::function&lt;void  (2,926 samples, 5.88%)</title><rect x="74.7916%" y="197" width="5.8768%" height="15" fill="rgb(251,10,15)" fg:x="37238" fg:w="2926"/><text x="75.0416%" y="207.50">libonnx..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0, std::__1::allocator&lt;onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void (long, long)&gt; const&amp;)::$_0&gt;, void (unsigned int)&gt;::operator() (2,605 samples, 5.23%)</title><rect x="75.4363%" y="181" width="5.2321%" height="15" fill="rgb(228,207,15)" fg:x="37559" fg:w="2605"/><text x="75.6863%" y="191.50">libonn..</text></g><g><title>libonnxruntime.1.15.1.dylib`std::__1::__function::__func&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda0&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long), std::__1::allocator&lt;void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda0&apos;(long)&gt;(onnxruntime::concurrency::ThreadPool*, long, float&amp;&amp;, long)::&apos;lambda&apos;(long)&gt;, void (long)&gt;::operator() (9 samples, 0.02%)</title><rect x="80.6503%" y="165" width="0.0181%" height="15" fill="rgb(241,99,19)" fg:x="40155" fg:w="9"/><text x="80.9003%" y="175.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::SimpleParallelFor(long, std::__1::function&lt;void  (2,937 samples, 5.90%)</title><rect x="74.7715%" y="245" width="5.8989%" height="15" fill="rgb(207,104,49)" fg:x="37228" fg:w="2937"/><text x="75.0215%" y="255.50">libonnx..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::concurrency::ThreadPool::ParallelForFixedBlockSizeScheduling(long, long, std::__1::function&lt;void  (2,934 samples, 5.89%)</title><rect x="74.7776%" y="229" width="5.8929%" height="15" fill="rgb(234,99,18)" fg:x="37231" fg:w="2934"/><text x="75.0276%" y="239.50">libonnx..</text></g><g><title>libonnxruntime.1.15.1.dylib`void onnxruntime::concurrency::ThreadPool::TryBatchParallelFor&lt;onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute(onnxruntime::OpKernelContext*) const::&apos;lambda0&apos;(long)&gt; (2,943 samples, 5.91%)</title><rect x="74.7615%" y="261" width="5.9109%" height="15" fill="rgb(213,191,49)" fg:x="37223" fg:w="2943"/><text x="75.0115%" y="271.50">libonnxr..</text></g><g><title>libsystem_kernel.dylib`madvise (69 samples, 0.14%)</title><rect x="80.6724%" y="261" width="0.1386%" height="15" fill="rgb(210,226,19)" fg:x="40166" fg:w="69"/><text x="80.9224%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="80.8110%" y="261" width="0.0121%" height="15" fill="rgb(229,97,18)" fg:x="40235" fg:w="6"/><text x="81.0610%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_large (9 samples, 0.02%)</title><rect x="80.8231%" y="261" width="0.0181%" height="15" fill="rgb(211,167,15)" fg:x="40241" fg:w="9"/><text x="81.0731%" y="271.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::BiasGelu&lt;float, true&gt;::Compute (3,136 samples, 6.30%)</title><rect x="74.5486%" y="277" width="6.2986%" height="15" fill="rgb(210,169,34)" fg:x="37117" fg:w="3136"/><text x="74.7986%" y="287.50">libonnxr..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecuteKernel (13,138 samples, 26.39%)</title><rect x="54.4799%" y="293" width="26.3874%" height="15" fill="rgb(241,121,31)" fg:x="27125" fg:w="13138"/><text x="54.7299%" y="303.50">libonnxruntime.1.15.1.dylib`onnxruntime::E..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::KernelScope::~KernelScope (6 samples, 0.01%)</title><rect x="80.8693%" y="293" width="0.0121%" height="15" fill="rgb(232,40,11)" fg:x="40264" fg:w="6"/><text x="81.1193%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernel::IsAsync (20 samples, 0.04%)</title><rect x="80.8954%" y="293" width="0.0402%" height="15" fill="rgb(205,86,26)" fg:x="40277" fg:w="20"/><text x="81.1454%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelContextInternal::OpKernelContextInternal (7 samples, 0.01%)</title><rect x="80.9416%" y="293" width="0.0141%" height="15" fill="rgb(231,126,28)" fg:x="40300" fg:w="7"/><text x="81.1916%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::OpKernelInfo::GetKernelDef (6 samples, 0.01%)</title><rect x="80.9556%" y="293" width="0.0121%" height="15" fill="rgb(219,221,18)" fg:x="40307" fg:w="6"/><text x="81.2056%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::StreamExecutionContext::RecycleNodeInputs (7 samples, 0.01%)</title><rect x="80.9737%" y="293" width="0.0141%" height="15" fill="rgb(211,40,0)" fg:x="40316" fg:w="7"/><text x="81.2237%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::RunSince (13,260 samples, 26.63%)</title><rect x="54.3634%" y="325" width="26.6324%" height="15" fill="rgb(239,85,43)" fg:x="27067" fg:w="13260"/><text x="54.6134%" y="335.50">libonnxruntime.1.15.1.dylib`onnxruntime::Ru..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::LaunchKernelStep::Execute (13,215 samples, 26.54%)</title><rect x="54.4538%" y="309" width="26.5420%" height="15" fill="rgb(231,55,21)" fg:x="27112" fg:w="13215"/><text x="54.7038%" y="319.50">libonnxruntime.1.15.1.dylib`onnxruntime::L..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::IExecutionFrame::Init(gsl::span&lt;int const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, std::__1::unordered_map&lt;int, OrtValue, std::__1::hash&lt;int&gt;, std::__1::equal_to&lt;int&gt;, std::__1::allocator&lt;std::__1::pair&lt;int const, OrtValue&gt; &gt; &gt; const&amp;, std::__1::function&lt;bool (std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;)&gt; const&amp;, gsl::span (27 samples, 0.05%)</title><rect x="81.0219%" y="293" width="0.0542%" height="15" fill="rgb(225,184,43)" fg:x="40340" fg:w="27"/><text x="81.2719%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecutionFrame::ExecutionFrame(gsl::span&lt;int const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, gsl::span&lt;int const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, std::__1::unordered_map&lt;unsigned long, std::__1::function&lt;onnxruntime::common::Status (onnxruntime::TensorShape const&amp;, OrtDevice const&amp;, OrtValue&amp;, bool&amp;)&gt;, std::__1::hash&lt;unsigned long&gt;, std::__1::equal_to&lt;unsigned long&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned long const, std::__1::function&lt;onnxruntime::common::Status  (37 samples, 0.07%)</title><rect x="81.0058%" y="309" width="0.0743%" height="15" fill="rgb(251,158,41)" fg:x="40332" fg:w="37"/><text x="81.2558%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::StreamExecutionContext::StreamExecutionContext(onnxruntime::SessionState const&amp;, int, gsl::span&lt;unsigned long const, 18446744073709551615ul&gt;, unsigned long, onnxruntime::DeviceStreamCollection const*, gsl::span&lt;int const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, gsl::span&lt;int const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator&lt;OrtValue&gt; &gt;&amp;, std::__1::unordered_map&lt;unsigned long, std::__1::function&lt;onnxruntime::common::Status (onnxruntime::TensorShape const&amp;, OrtDevice const&amp;, OrtValue&amp;, bool&amp;)&gt;, std::__1::hash&lt;unsigned long&gt;, std::__1::equal_to&lt;unsigned long&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned long const, std::__1::function&lt;onnxruntime::common::Status  (45 samples, 0.09%)</title><rect x="81.0038%" y="325" width="0.0904%" height="15" fill="rgb(234,159,37)" fg:x="40331" fg:w="45"/><text x="81.2538%" y="335.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::ExecuteThePlan(onnxruntime::SessionState const&amp;, gsl::span&lt;int const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, gsl::span&lt;int const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator&lt;OrtValue&gt; &gt;&amp;, std::__1::unordered_map&lt;unsigned long, std::__1::function&lt;onnxruntime::common::Status (onnxruntime::TensorShape const&amp;, OrtDevice const&amp;, OrtValue&amp;, bool&amp;)&gt;, std::__1::hash&lt;unsigned long&gt;, std::__1::equal_to&lt;unsigned long&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned long const, std::__1::function&lt;onnxruntime::common::Status  (13,338 samples, 26.79%)</title><rect x="54.3112%" y="341" width="26.7890%" height="15" fill="rgb(216,204,22)" fg:x="27041" fg:w="13338"/><text x="54.5612%" y="351.50">libonnxruntime.1.15.1.dylib`onnxruntime::Ex..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::ExecuteGraphImpl(onnxruntime::SessionState const&amp;, onnxruntime::FeedsFetchesManager const&amp;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator&lt;OrtValue&gt; &gt;&amp;, std::__1::unordered_map&lt;unsigned long, std::__1::function&lt;onnxruntime::common::Status (onnxruntime::TensorShape const&amp;, OrtDevice const&amp;, OrtValue&amp;, bool&amp;)&gt;, std::__1::hash&lt;unsigned long&gt;, std::__1::equal_to&lt;unsigned long&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned long const, std::__1::function&lt;onnxruntime::common::Status  (13,340 samples, 26.79%)</title><rect x="54.3112%" y="357" width="26.7931%" height="15" fill="rgb(214,17,3)" fg:x="27041" fg:w="13340"/><text x="54.5612%" y="367.50">libonnxruntime.1.15.1.dylib`onnxruntime::ut..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::ExecuteGraph(onnxruntime::SessionState const&amp;, onnxruntime::FeedsFetchesManager&amp;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator (13,348 samples, 26.81%)</title><rect x="54.3012%" y="389" width="26.8091%" height="15" fill="rgb(212,111,17)" fg:x="27036" fg:w="13348"/><text x="54.5512%" y="399.50">libonnxruntime.1.15.1.dylib`onnxruntime::ut..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::utils::ExecuteGraph(onnxruntime::SessionState const&amp;, onnxruntime::FeedsFetchesManager&amp;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator (13,348 samples, 26.81%)</title><rect x="54.3012%" y="373" width="26.8091%" height="15" fill="rgb(221,157,24)" fg:x="27036" fg:w="13348"/><text x="54.5512%" y="383.50">libonnxruntime.1.15.1.dylib`onnxruntime::ut..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::InferenceSession::Run(OrtRunOptions const&amp;, gsl::span&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, gsl::span&lt;OrtValue const, 18446744073709551615ul&gt;, gsl::span&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, std::__1::vector&lt;OrtValue, std::__1::allocator&lt;OrtValue&gt; &gt;*, std::__1::vector&lt;OrtDevice, std::__1::allocator (13,397 samples, 26.91%)</title><rect x="54.2108%" y="405" width="26.9075%" height="15" fill="rgb(252,16,13)" fg:x="26991" fg:w="13397"/><text x="54.4608%" y="415.50">libonnxruntime.1.15.1.dylib`onnxruntime::In..</text></g><g><title>libonnxruntime.1.15.1.dylib`OrtApis::Run (13,413 samples, 26.94%)</title><rect x="54.1907%" y="421" width="26.9397%" height="15" fill="rgb(221,62,2)" fg:x="26981" fg:w="13413"/><text x="54.4407%" y="431.50">libonnxruntime.1.15.1.dylib`OrtApis::Run</text></g><g><title>main`alloc::ffi::c_str::CString::_from_vec_unchecked (5 samples, 0.01%)</title><rect x="81.1424%" y="389" width="0.0100%" height="15" fill="rgb(247,87,22)" fg:x="40400" fg:w="5"/><text x="81.3924%" y="399.50"></text></g><g><title>main`&lt;T as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (6 samples, 0.01%)</title><rect x="81.1424%" y="405" width="0.0121%" height="15" fill="rgb(215,73,9)" fg:x="40400" fg:w="6"/><text x="81.3924%" y="415.50"></text></g><g><title>main`&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="81.1545%" y="405" width="0.0100%" height="15" fill="rgb(207,175,33)" fg:x="40406" fg:w="5"/><text x="81.4045%" y="415.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="81.1424%" y="421" width="0.0241%" height="15" fill="rgb(243,129,54)" fg:x="40400" fg:w="12"/><text x="81.3924%" y="431.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;ort::value::Value&gt; (7 samples, 0.01%)</title><rect x="81.1806%" y="421" width="0.0141%" height="15" fill="rgb(227,119,45)" fg:x="40419" fg:w="7"/><text x="81.4306%" y="431.50"></text></g><g><title>main`ort::session::Session::run (13,447 samples, 27.01%)</title><rect x="54.1887%" y="437" width="27.0080%" height="15" fill="rgb(205,109,36)" fg:x="26980" fg:w="13447"/><text x="54.4387%" y="447.50">main`ort::session::Session::run</text></g><g><title>main`ort::error::status_to_result (6 samples, 0.01%)</title><rect x="81.2228%" y="421" width="0.0121%" height="15" fill="rgb(205,6,39)" fg:x="40440" fg:w="6"/><text x="81.4728%" y="431.50"></text></g><g><title>main`ort::error::_&lt;impl core::convert::From&lt;ort::error::OrtStatusWrapper&gt; for core::result::Result&lt;(),ort::error::OrtApiError&gt;&gt;::from (5 samples, 0.01%)</title><rect x="81.2248%" y="405" width="0.0100%" height="15" fill="rgb(221,32,16)" fg:x="40441" fg:w="5"/><text x="81.4748%" y="415.50"></text></g><g><title>main`ort::ort (5 samples, 0.01%)</title><rect x="81.2248%" y="389" width="0.0100%" height="15" fill="rgb(228,144,50)" fg:x="40441" fg:w="5"/><text x="81.4748%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (5 samples, 0.01%)</title><rect x="81.2248%" y="373" width="0.0100%" height="15" fill="rgb(229,201,53)" fg:x="40441" fg:w="5"/><text x="81.4748%" y="383.50"></text></g><g><title>main`ort::value::Value::try_extract (20 samples, 0.04%)</title><rect x="81.1966%" y="437" width="0.0402%" height="15" fill="rgb(249,153,27)" fg:x="40427" fg:w="20"/><text x="81.4466%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (25 samples, 0.05%)</title><rect x="81.2710%" y="293" width="0.0502%" height="15" fill="rgb(227,106,25)" fg:x="40464" fg:w="25"/><text x="81.5210%" y="303.50"></text></g><g><title>main`rayon_core::latch::LockLatch::wait_and_reset (32 samples, 0.06%)</title><rect x="81.2649%" y="325" width="0.0643%" height="15" fill="rgb(230,65,29)" fg:x="40461" fg:w="32"/><text x="81.5149%" y="335.50"></text></g><g><title>main`std::sync::condvar::Condvar::wait (29 samples, 0.06%)</title><rect x="81.2710%" y="309" width="0.0582%" height="15" fill="rgb(221,57,46)" fg:x="40464" fg:w="29"/><text x="81.5210%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (30 samples, 0.06%)</title><rect x="81.3332%" y="293" width="0.0603%" height="15" fill="rgb(229,161,17)" fg:x="40495" fg:w="30"/><text x="81.5832%" y="303.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (81 samples, 0.16%)</title><rect x="81.2529%" y="373" width="0.1627%" height="15" fill="rgb(222,213,11)" fg:x="40455" fg:w="81"/><text x="81.5029%" y="383.50"></text></g><g><title>main`rayon_core::registry::in_worker (78 samples, 0.16%)</title><rect x="81.2589%" y="357" width="0.1567%" height="15" fill="rgb(235,35,13)" fg:x="40458" fg:w="78"/><text x="81.5089%" y="367.50"></text></g><g><title>main`std::thread::local::LocalKey&lt;T&gt;::with (76 samples, 0.15%)</title><rect x="81.2629%" y="341" width="0.1526%" height="15" fill="rgb(233,158,34)" fg:x="40460" fg:w="76"/><text x="81.5129%" y="351.50"></text></g><g><title>main`rayon_core::sleep::Sleep::wake_any_threads (41 samples, 0.08%)</title><rect x="81.3332%" y="325" width="0.0823%" height="15" fill="rgb(215,151,48)" fg:x="40495" fg:w="41"/><text x="81.5832%" y="335.50"></text></g><g><title>main`rayon_core::sleep::Sleep::wake_specific_thread (41 samples, 0.08%)</title><rect x="81.3332%" y="309" width="0.0823%" height="15" fill="rgb(229,84,14)" fg:x="40495" fg:w="41"/><text x="81.5832%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (11 samples, 0.02%)</title><rect x="81.3935%" y="293" width="0.0221%" height="15" fill="rgb(229,68,14)" fg:x="40525" fg:w="11"/><text x="81.6435%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (11 samples, 0.02%)</title><rect x="81.3935%" y="277" width="0.0221%" height="15" fill="rgb(243,106,26)" fg:x="40525" fg:w="11"/><text x="81.6435%" y="287.50"></text></g><g><title>main`&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (83 samples, 0.17%)</title><rect x="81.2509%" y="389" width="0.1667%" height="15" fill="rgb(206,45,38)" fg:x="40454" fg:w="83"/><text x="81.5009%" y="399.50"></text></g><g><title>main`&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (89 samples, 0.18%)</title><rect x="81.2449%" y="405" width="0.1788%" height="15" fill="rgb(226,6,15)" fg:x="40451" fg:w="89"/><text x="81.4949%" y="415.50"></text></g><g><title>main`rayon::result::_&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter (97 samples, 0.19%)</title><rect x="81.2428%" y="421" width="0.1948%" height="15" fill="rgb(232,22,54)" fg:x="40450" fg:w="97"/><text x="81.4928%" y="431.50"></text></g><g><title>main`rayon::iter::extend::vec_append (6 samples, 0.01%)</title><rect x="81.4256%" y="405" width="0.0121%" height="15" fill="rgb(229,222,32)" fg:x="40541" fg:w="6"/><text x="81.6756%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (18 samples, 0.04%)</title><rect x="81.4578%" y="325" width="0.0362%" height="15" fill="rgb(228,62,29)" fg:x="40557" fg:w="18"/><text x="81.7078%" y="335.50"></text></g><g><title>main`rayon_core::latch::LockLatch::wait_and_reset (24 samples, 0.05%)</title><rect x="81.4557%" y="357" width="0.0482%" height="15" fill="rgb(251,103,34)" fg:x="40556" fg:w="24"/><text x="81.7057%" y="367.50"></text></g><g><title>main`std::sync::condvar::Condvar::wait (24 samples, 0.05%)</title><rect x="81.4557%" y="341" width="0.0482%" height="15" fill="rgb(233,12,30)" fg:x="40556" fg:w="24"/><text x="81.7057%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (5 samples, 0.01%)</title><rect x="81.4939%" y="325" width="0.0100%" height="15" fill="rgb(238,52,0)" fg:x="40575" fg:w="5"/><text x="81.7439%" y="335.50"></text></g><g><title>main`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.07%)</title><rect x="81.4437%" y="405" width="0.0683%" height="15" fill="rgb(223,98,5)" fg:x="40550" fg:w="34"/><text x="81.6937%" y="415.50"></text></g><g><title>main`rayon_core::registry::in_worker (32 samples, 0.06%)</title><rect x="81.4477%" y="389" width="0.0643%" height="15" fill="rgb(228,75,37)" fg:x="40552" fg:w="32"/><text x="81.6977%" y="399.50"></text></g><g><title>main`std::thread::local::LocalKey&lt;T&gt;::with (30 samples, 0.06%)</title><rect x="81.4517%" y="373" width="0.0603%" height="15" fill="rgb(205,115,49)" fg:x="40554" fg:w="30"/><text x="81.7017%" y="383.50"></text></g><g><title>main`tokenizers::utils::padding::pad_encodings (40 samples, 0.08%)</title><rect x="81.4417%" y="421" width="0.0803%" height="15" fill="rgb(250,154,43)" fg:x="40549" fg:w="40"/><text x="81.6917%" y="431.50"></text></g><g><title>main`main::get_sentence_embedding_in_batch (14,078 samples, 28.28%)</title><rect x="53.2567%" y="453" width="28.2753%" height="15" fill="rgb(226,43,29)" fg:x="26516" fg:w="14078"/><text x="53.5067%" y="463.50">main`main::get_sentence_embedding_in_batch</text></g><g><title>main`tokenizers::tokenizer::TokenizerImpl&lt;M,N,PT,PP,D&gt;::encode_batch (146 samples, 0.29%)</title><rect x="81.2388%" y="437" width="0.2932%" height="15" fill="rgb(249,228,39)" fg:x="40448" fg:w="146"/><text x="81.4888%" y="447.50"></text></g><g><title>main`tokenizers::utils::parallelism::get_parallelism (5 samples, 0.01%)</title><rect x="81.5220%" y="421" width="0.0100%" height="15" fill="rgb(216,79,43)" fg:x="40589" fg:w="5"/><text x="81.7720%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="91.3656%" y="421" width="0.0141%" height="15" fill="rgb(228,95,12)" fg:x="45490" fg:w="7"/><text x="91.6156%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (34 samples, 0.07%)</title><rect x="91.4660%" y="405" width="0.0683%" height="15" fill="rgb(249,221,15)" fg:x="45540" fg:w="34"/><text x="91.7160%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.02%)</title><rect x="91.5343%" y="405" width="0.0241%" height="15" fill="rgb(233,34,13)" fg:x="45574" fg:w="12"/><text x="91.7843%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="91.6488%" y="389" width="0.0121%" height="15" fill="rgb(214,103,39)" fg:x="45631" fg:w="6"/><text x="91.8988%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (39 samples, 0.08%)</title><rect x="92.5566%" y="357" width="0.0783%" height="15" fill="rgb(251,126,39)" fg:x="46083" fg:w="39"/><text x="92.8066%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (13 samples, 0.03%)</title><rect x="92.6349%" y="357" width="0.0261%" height="15" fill="rgb(214,216,36)" fg:x="46122" fg:w="13"/><text x="92.8849%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (718 samples, 1.44%)</title><rect x="91.3796%" y="421" width="1.4421%" height="15" fill="rgb(220,221,8)" fg:x="45497" fg:w="718"/><text x="91.6296%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (629 samples, 1.26%)</title><rect x="91.5584%" y="405" width="1.2633%" height="15" fill="rgb(240,216,3)" fg:x="45586" fg:w="629"/><text x="91.8084%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (578 samples, 1.16%)</title><rect x="91.6608%" y="389" width="1.1609%" height="15" fill="rgb(232,218,17)" fg:x="45637" fg:w="578"/><text x="91.9108%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (183 samples, 0.37%)</title><rect x="92.4542%" y="373" width="0.3676%" height="15" fill="rgb(229,163,45)" fg:x="46032" fg:w="183"/><text x="92.7042%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (80 samples, 0.16%)</title><rect x="92.6610%" y="357" width="0.1607%" height="15" fill="rgb(231,110,42)" fg:x="46135" fg:w="80"/><text x="92.9110%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (755 samples, 1.52%)</title><rect x="91.3294%" y="437" width="1.5164%" height="15" fill="rgb(208,170,48)" fg:x="45472" fg:w="755"/><text x="91.5794%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="92.8217%" y="421" width="0.0241%" height="15" fill="rgb(239,116,25)" fg:x="46215" fg:w="12"/><text x="93.0717%" y="431.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Div&lt;B&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::div (5,636 samples, 11.32%)</title><rect x="81.5341%" y="453" width="11.3198%" height="15" fill="rgb(219,200,50)" fg:x="40595" fg:w="5636"/><text x="81.7841%" y="463.50">main`ndarray::imp..</text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (87 samples, 0.17%)</title><rect x="92.8538%" y="453" width="0.1747%" height="15" fill="rgb(245,200,0)" fg:x="46231" fg:w="87"/><text x="93.1038%" y="463.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot (87 samples, 0.17%)</title><rect x="92.8538%" y="437" width="0.1747%" height="15" fill="rgb(245,119,33)" fg:x="46231" fg:w="87"/><text x="93.1038%" y="447.50"></text></g><g><title>main`ndarray::numeric_util::unrolled_dot (2,521 samples, 5.06%)</title><rect x="93.0286%" y="453" width="5.0634%" height="15" fill="rgb(231,125,12)" fg:x="46318" fg:w="2521"/><text x="93.2786%" y="463.50">main`n..</text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::OpSet_Onnx_ver11::ForEachSchema(std::__1::function&lt;void  (6 samples, 0.01%)</title><rect x="98.1000%" y="293" width="0.0121%" height="15" fill="rgb(216,96,41)" fg:x="48843" fg:w="6"/><text x="98.3500%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::OpSet_Onnx_ver1::ForEachSchema(std::__1::function&lt;void  (5 samples, 0.01%)</title><rect x="98.1381%" y="293" width="0.0100%" height="15" fill="rgb(248,43,45)" fg:x="48862" fg:w="5"/><text x="98.3881%" y="303.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnx::RegisterOnnxOperatorSetSchema (32 samples, 0.06%)</title><rect x="98.0940%" y="309" width="0.0643%" height="15" fill="rgb(217,222,7)" fg:x="48840" fg:w="32"/><text x="98.3440%" y="319.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::contrib::OpSet_Microsoft_ver1::ForEachSchema(std::__1::function&lt;void  (6 samples, 0.01%)</title><rect x="98.1582%" y="309" width="0.0121%" height="15" fill="rgb(233,28,6)" fg:x="48872" fg:w="6"/><text x="98.4082%" y="319.50"></text></g><g><title>libc++.1.dylib`std::__1::__call_once(unsigned long volatile&amp;, void*, void (*) (44 samples, 0.09%)</title><rect x="98.0919%" y="341" width="0.0884%" height="15" fill="rgb(231,218,15)" fg:x="48839" fg:w="44"/><text x="98.3419%" y="351.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`void std::__1::__call_once_proxy&lt;std::__1::tuple&lt;onnxruntime::Environment::Initialize(std::__1::unique_ptr&lt;onnxruntime::logging::LoggingManager, std::__1::default_delete&lt;onnxruntime::logging::LoggingManager&gt; &gt;, OrtThreadingOptions const*, bool)::$_4&amp;&amp;&gt; &gt; (44 samples, 0.09%)</title><rect x="98.0919%" y="325" width="0.0884%" height="15" fill="rgb(226,171,48)" fg:x="48839" fg:w="44"/><text x="98.3419%" y="335.50"></text></g><g><title>main`ort::environment::EnvBuilder::build (45 samples, 0.09%)</title><rect x="98.0919%" y="453" width="0.0904%" height="15" fill="rgb(235,201,9)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="463.50"></text></g><g><title>main`ort::environment::Environment::new (45 samples, 0.09%)</title><rect x="98.0919%" y="437" width="0.0904%" height="15" fill="rgb(217,80,15)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="447.50"></text></g><g><title>main`ort::environment::Environment::create_custom_log_env (45 samples, 0.09%)</title><rect x="98.0919%" y="421" width="0.0904%" height="15" fill="rgb(219,152,8)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="431.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtApis::CreateEnvWithCustomLogger(void (*) (45 samples, 0.09%)</title><rect x="98.0919%" y="405" width="0.0904%" height="15" fill="rgb(243,107,38)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="415.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`OrtEnv::GetInstance (45 samples, 0.09%)</title><rect x="98.0919%" y="389" width="0.0904%" height="15" fill="rgb(231,17,5)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="399.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Environment::Create(std::__1::unique_ptr&lt;onnxruntime::logging::LoggingManager, std::__1::default_delete&lt;onnxruntime::logging::LoggingManager&gt; &gt;, std::__1::unique_ptr&lt;onnxruntime::Environment, std::__1::default_delete (45 samples, 0.09%)</title><rect x="98.0919%" y="373" width="0.0904%" height="15" fill="rgb(209,25,54)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="383.50"></text></g><g><title>libonnxruntime.1.15.1.dylib`onnxruntime::Environment::Initialize(std::__1::unique_ptr&lt;onnxruntime::logging::LoggingManager, std::__1::default_delete (45 samples, 0.09%)</title><rect x="98.0919%" y="357" width="0.0904%" height="15" fill="rgb(219,0,2)" fg:x="48839" fg:w="45"/><text x="98.3419%" y="367.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (13 samples, 0.03%)</title><rect x="98.1863%" y="309" width="0.0261%" height="15" fill="rgb(246,9,5)" fg:x="48886" fg:w="13"/><text x="98.4363%" y="319.50"></text></g><g><title>main`&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (13 samples, 0.03%)</title><rect x="98.1863%" y="293" width="0.0261%" height="15" fill="rgb(226,159,4)" fg:x="48886" fg:w="13"/><text x="98.4363%" y="303.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="98.1863%" y="277" width="0.0261%" height="15" fill="rgb(219,175,34)" fg:x="48886" fg:w="13"/><text x="98.4363%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`read (13 samples, 0.03%)</title><rect x="98.1863%" y="261" width="0.0261%" height="15" fill="rgb(236,10,46)" fg:x="48886" fg:w="13"/><text x="98.4363%" y="271.50"></text></g><g><title>main`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.03%)</title><rect x="98.1863%" y="341" width="0.0281%" height="15" fill="rgb(240,211,16)" fg:x="48886" fg:w="14"/><text x="98.4363%" y="351.50"></text></g><g><title>main`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.03%)</title><rect x="98.1863%" y="325" width="0.0281%" height="15" fill="rgb(205,3,43)" fg:x="48886" fg:w="14"/><text x="98.4363%" y="335.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (19 samples, 0.04%)</title><rect x="98.1863%" y="357" width="0.0382%" height="15" fill="rgb(245,7,22)" fg:x="48886" fg:w="19"/><text x="98.4363%" y="367.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="98.2145%" y="341" width="0.0100%" height="15" fill="rgb(239,132,32)" fg:x="48900" fg:w="5"/><text x="98.4645%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`read (616 samples, 1.24%)</title><rect x="98.2787%" y="309" width="1.2372%" height="15" fill="rgb(228,202,34)" fg:x="48932" fg:w="616"/><text x="98.5287%" y="319.50"></text></g><g><title>main`&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (653 samples, 1.31%)</title><rect x="98.2265%" y="341" width="1.3115%" height="15" fill="rgb(254,200,22)" fg:x="48906" fg:w="653"/><text x="98.4765%" y="351.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (638 samples, 1.28%)</title><rect x="98.2566%" y="325" width="1.2814%" height="15" fill="rgb(219,10,39)" fg:x="48921" fg:w="638"/><text x="98.5066%" y="335.50"></text></g><g><title>main`&lt;std::fs::File as std::io::Read&gt;::read (11 samples, 0.02%)</title><rect x="99.5160%" y="309" width="0.0221%" height="15" fill="rgb(226,210,39)" fg:x="49548" fg:w="11"/><text x="99.7660%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`read (14 samples, 0.03%)</title><rect x="99.5401%" y="325" width="0.0281%" height="15" fill="rgb(208,219,16)" fg:x="49560" fg:w="14"/><text x="99.7901%" y="335.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (670 samples, 1.35%)</title><rect x="98.2245%" y="357" width="1.3457%" height="15" fill="rgb(216,158,51)" fg:x="48905" fg:w="670"/><text x="98.4745%" y="367.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="99.5381%" y="341" width="0.0321%" height="15" fill="rgb(233,14,44)" fg:x="49559" fg:w="16"/><text x="99.7881%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`read (73 samples, 0.15%)</title><rect x="99.5762%" y="325" width="0.1466%" height="15" fill="rgb(237,97,39)" fg:x="49578" fg:w="73"/><text x="99.8262%" y="335.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.15%)</title><rect x="99.5742%" y="341" width="0.1547%" height="15" fill="rgb(218,198,43)" fg:x="49577" fg:w="77"/><text x="99.8242%" y="351.50"></text></g><g><title>main`&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (80 samples, 0.16%)</title><rect x="99.5702%" y="357" width="0.1607%" height="15" fill="rgb(231,104,20)" fg:x="49575" fg:w="80"/><text x="99.8202%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`read (53 samples, 0.11%)</title><rect x="99.7349%" y="341" width="0.1064%" height="15" fill="rgb(254,36,13)" fg:x="49657" fg:w="53"/><text x="99.9849%" y="351.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.11%)</title><rect x="99.7309%" y="357" width="0.1145%" height="15" fill="rgb(248,14,50)" fg:x="49655" fg:w="57"/><text x="99.9809%" y="367.50"></text></g><g><title>main`serde::de::MapAccess::next_value (6 samples, 0.01%)</title><rect x="99.8474%" y="357" width="0.0121%" height="15" fill="rgb(217,107,29)" fg:x="49713" fg:w="6"/><text x="100.0974%" y="367.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (834 samples, 1.68%)</title><rect x="98.1863%" y="373" width="1.6751%" height="15" fill="rgb(251,169,33)" fg:x="48886" fg:w="834"/><text x="98.4363%" y="383.50"></text></g><g><title>main`serde_json::de::from_reader (853 samples, 1.71%)</title><rect x="98.1843%" y="453" width="1.7132%" height="15" fill="rgb(217,108,32)" fg:x="48885" fg:w="853"/><text x="98.4343%" y="463.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (853 samples, 1.71%)</title><rect x="98.1843%" y="437" width="1.7132%" height="15" fill="rgb(219,66,42)" fg:x="48885" fg:w="853"/><text x="98.4343%" y="447.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (853 samples, 1.71%)</title><rect x="98.1843%" y="421" width="1.7132%" height="15" fill="rgb(206,180,7)" fg:x="48885" fg:w="853"/><text x="98.4343%" y="431.50"></text></g><g><title>main`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (853 samples, 1.71%)</title><rect x="98.1843%" y="405" width="1.7132%" height="15" fill="rgb(208,226,31)" fg:x="48885" fg:w="853"/><text x="98.4343%" y="415.50"></text></g><g><title>main`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (853 samples, 1.71%)</title><rect x="98.1843%" y="389" width="1.7132%" height="15" fill="rgb(218,26,49)" fg:x="48885" fg:w="853"/><text x="98.4343%" y="399.50"></text></g><g><title>main`&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="99.8614%" y="373" width="0.0362%" height="15" fill="rgb(233,197,48)" fg:x="49720" fg:w="18"/><text x="100.1114%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`read (18 samples, 0.04%)</title><rect x="99.8614%" y="357" width="0.0362%" height="15" fill="rgb(252,181,51)" fg:x="49720" fg:w="18"/><text x="100.1114%" y="367.50"></text></g><g><title>main`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (5 samples, 0.01%)</title><rect x="99.8976%" y="341" width="0.0100%" height="15" fill="rgb(253,90,19)" fg:x="49738" fg:w="5"/><text x="100.1476%" y="351.50"></text></g><g><title>main`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (5 samples, 0.01%)</title><rect x="99.8976%" y="325" width="0.0100%" height="15" fill="rgb(215,171,30)" fg:x="49738" fg:w="5"/><text x="100.1476%" y="335.50"></text></g><g><title>main`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (9 samples, 0.02%)</title><rect x="99.8976%" y="373" width="0.0181%" height="15" fill="rgb(214,222,9)" fg:x="49738" fg:w="9"/><text x="100.1476%" y="383.50"></text></g><g><title>main`&lt;tokenizers::models::wordpiece::serialization::WordPieceVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.02%)</title><rect x="99.8976%" y="357" width="0.0181%" height="15" fill="rgb(223,3,22)" fg:x="49738" fg:w="9"/><text x="100.1476%" y="367.50"></text></g><g><title>main`serde_json::de::from_str (13 samples, 0.03%)</title><rect x="99.8976%" y="437" width="0.0261%" height="15" fill="rgb(225,196,46)" fg:x="49738" fg:w="13"/><text x="100.1476%" y="447.50"></text></g><g><title>main`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 0.03%)</title><rect x="99.8976%" y="421" width="0.0261%" height="15" fill="rgb(209,110,37)" fg:x="49738" fg:w="13"/><text x="100.1476%" y="431.50"></text></g><g><title>main`&lt;tokenizers::tokenizer::serialization::TokenizerVisitor&lt;M,N,PT,PP,D&gt; as serde::de::Visitor&gt;::visit_map (13 samples, 0.03%)</title><rect x="99.8976%" y="405" width="0.0261%" height="15" fill="rgb(249,89,12)" fg:x="49738" fg:w="13"/><text x="100.1476%" y="415.50"></text></g><g><title>main`tokenizers::models::_::_&lt;impl serde::de::Deserialize for tokenizers::models::ModelWrapper&gt;::deserialize (13 samples, 0.03%)</title><rect x="99.8976%" y="389" width="0.0261%" height="15" fill="rgb(226,27,33)" fg:x="49738" fg:w="13"/><text x="100.1476%" y="399.50"></text></g><g><title>main`main::main (24,362 samples, 48.93%)</title><rect x="50.9972%" y="469" width="48.9305%" height="15" fill="rgb(213,82,22)" fg:x="25391" fg:w="24362"/><text x="51.2472%" y="479.50">main`main::main</text></g><g><title>main`tokenizers::tokenizer::Tokenizer::from_file (15 samples, 0.03%)</title><rect x="99.8976%" y="453" width="0.0301%" height="15" fill="rgb(248,140,0)" fg:x="49738" fg:w="15"/><text x="100.1476%" y="463.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (28 samples, 0.06%)</title><rect x="99.9337%" y="469" width="0.0562%" height="15" fill="rgb(228,106,3)" fg:x="49756" fg:w="28"/><text x="100.1837%" y="479.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot (28 samples, 0.06%)</title><rect x="99.9337%" y="453" width="0.0562%" height="15" fill="rgb(209,23,37)" fg:x="49756" fg:w="28"/><text x="100.1837%" y="463.50"></text></g><g><title>all (49,789 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(241,93,50)" fg:x="0" fg:w="49789"/><text x="0.2500%" y="591.50"></text></g><g><title>main`0x1 (24,477 samples, 49.16%)</title><rect x="50.8385%" y="565" width="49.1615%" height="15" fill="rgb(253,46,43)" fg:x="25312" fg:w="24477"/><text x="51.0885%" y="575.50">main`0x1</text></g><g><title>libdyld.dylib`start (24,477 samples, 49.16%)</title><rect x="50.8385%" y="549" width="49.1615%" height="15" fill="rgb(226,206,43)" fg:x="25312" fg:w="24477"/><text x="51.0885%" y="559.50">libdyld.dylib`start</text></g><g><title>main`main (24,465 samples, 49.14%)</title><rect x="50.8626%" y="533" width="49.1374%" height="15" fill="rgb(217,54,7)" fg:x="25324" fg:w="24465"/><text x="51.1126%" y="543.50">main`main</text></g><g><title>main`std::rt::lang_start_internal (24,465 samples, 49.14%)</title><rect x="50.8626%" y="517" width="49.1374%" height="15" fill="rgb(223,5,52)" fg:x="25324" fg:w="24465"/><text x="51.1126%" y="527.50">main`std::rt::lang_start_internal</text></g><g><title>main`std::rt::lang_start::_{{closure}} (24,465 samples, 49.14%)</title><rect x="50.8626%" y="501" width="49.1374%" height="15" fill="rgb(206,52,46)" fg:x="25324" fg:w="24465"/><text x="51.1126%" y="511.50">main`std::rt::lang_start::_{{closure}}</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (24,465 samples, 49.14%)</title><rect x="50.8626%" y="485" width="49.1374%" height="15" fill="rgb(253,136,11)" fg:x="25324" fg:w="24465"/><text x="51.1126%" y="495.50">main`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>main`ndarray::numeric_util::unrolled_dot (5 samples, 0.01%)</title><rect x="99.9900%" y="469" width="0.0100%" height="15" fill="rgb(208,106,33)" fg:x="49784" fg:w="5"/><text x="100.2400%" y="479.50"></text></g></svg></svg>